{"dependencies":[{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/assertThisInitialized","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"b5GA/1RTN5qhAr7TBpblrtwqASE=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/callSuper","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"378KbBHdmndC3iMXZ2Ix8oB3LeE=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"y0uNg4LxF1CLscQChxzgo5dfjvA=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"],"imports":1}},{"name":"@firebase/component","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":16,"index":95},"end":{"line":5,"column":46,"index":125}}],"key":"eDsH+fiRQ6A04XOvKTChGPEhs0I=","exportNames":["*"],"imports":1}},{"name":"@firebase/logger","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":15,"index":142},"end":{"line":6,"column":42,"index":169}}],"key":"pLe/ZFQGfNWvdh/0rG0JuGxrOpM=","exportNames":["*"],"imports":1}},{"name":"@firebase/util","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":11,"index":182},"end":{"line":7,"column":36,"index":207}}],"key":"R3im+0n/eSh8gKTMLLPoTxcvyH0=","exportNames":["*"],"imports":1}},{"name":"idb","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":10,"index":219},"end":{"line":8,"column":24,"index":233}}],"key":"gQIohp0usk4EqVqiJGPZGDPUvfk=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _asyncToGenerator = require(_dependencyMap[0], \"@babel/runtime/helpers/asyncToGenerator\").default;\n  var _assertThisInitialized = require(_dependencyMap[1], \"@babel/runtime/helpers/assertThisInitialized\").default;\n  var _callSuper = require(_dependencyMap[2], \"@babel/runtime/helpers/callSuper\").default;\n  var _inherits = require(_dependencyMap[3], \"@babel/runtime/helpers/inherits\").default;\n  var _classCallCheck = require(_dependencyMap[4], \"@babel/runtime/helpers/classCallCheck\").default;\n  var _createClass = require(_dependencyMap[5], \"@babel/runtime/helpers/createClass\").default;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  var component = require(_dependencyMap[6], \"@firebase/component\");\n  var logger$1 = require(_dependencyMap[7], \"@firebase/logger\");\n  var util = require(_dependencyMap[8], \"@firebase/util\");\n  var idb = require(_dependencyMap[9], \"idb\");\n\n  /**\n   * @license\n   * Copyright 2019 Google LLC\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *   http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  var PlatformLoggerServiceImpl = /*#__PURE__*/function () {\n    function PlatformLoggerServiceImpl(container) {\n      _classCallCheck(this, PlatformLoggerServiceImpl);\n      this.container = container;\n    }\n    // In initial implementation, this will be called by installations on\n    // auth token refresh, and installations will send this string.\n    return _createClass(PlatformLoggerServiceImpl, [{\n      key: \"getPlatformInfoString\",\n      value: function getPlatformInfoString() {\n        var providers = this.container.getProviders();\n        // Loop through providers and get library/version pairs from any that are\n        // version components.\n        return providers.map(provider => {\n          if (isVersionServiceProvider(provider)) {\n            var service = provider.getImmediate();\n            return `${service.library}/${service.version}`;\n          } else {\n            return null;\n          }\n        }).filter(logString => logString).join(' ');\n      }\n    }]);\n  }();\n  /**\n   *\n   * @param provider check if this provider provides a VersionService\n   *\n   * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\n   * provides VersionService. The provider is not necessarily a 'app-version'\n   * provider.\n   */\n  function isVersionServiceProvider(provider) {\n    var component = provider.getComponent();\n    return component?.type === \"VERSION\" /* ComponentType.VERSION */;\n  }\n  var name$q = \"@firebase/app\";\n  var version$1 = \"0.14.4\";\n\n  /**\n   * @license\n   * Copyright 2019 Google LLC\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *   http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  var logger = new logger$1.Logger('@firebase/app');\n  var name$p = \"@firebase/app-compat\";\n  var name$o = \"@firebase/analytics-compat\";\n  var name$n = \"@firebase/analytics\";\n  var name$m = \"@firebase/app-check-compat\";\n  var name$l = \"@firebase/app-check\";\n  var name$k = \"@firebase/auth\";\n  var name$j = \"@firebase/auth-compat\";\n  var name$i = \"@firebase/database\";\n  var name$h = \"@firebase/data-connect\";\n  var name$g = \"@firebase/database-compat\";\n  var name$f = \"@firebase/functions\";\n  var name$e = \"@firebase/functions-compat\";\n  var name$d = \"@firebase/installations\";\n  var name$c = \"@firebase/installations-compat\";\n  var name$b = \"@firebase/messaging\";\n  var name$a = \"@firebase/messaging-compat\";\n  var name$9 = \"@firebase/performance\";\n  var name$8 = \"@firebase/performance-compat\";\n  var name$7 = \"@firebase/remote-config\";\n  var name$6 = \"@firebase/remote-config-compat\";\n  var name$5 = \"@firebase/storage\";\n  var name$4 = \"@firebase/storage-compat\";\n  var name$3 = \"@firebase/firestore\";\n  var name$2 = \"@firebase/ai\";\n  var name$1 = \"@firebase/firestore-compat\";\n  var name = \"firebase\";\n  var version = \"12.4.0\";\n\n  /**\n   * @license\n   * Copyright 2019 Google LLC\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *   http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  /**\n   * The default app name\n   *\n   * @internal\n   */\n  var DEFAULT_ENTRY_NAME = '[DEFAULT]';\n  var PLATFORM_LOG_STRING = {\n    [name$q]: 'fire-core',\n    [name$p]: 'fire-core-compat',\n    [name$n]: 'fire-analytics',\n    [name$o]: 'fire-analytics-compat',\n    [name$l]: 'fire-app-check',\n    [name$m]: 'fire-app-check-compat',\n    [name$k]: 'fire-auth',\n    [name$j]: 'fire-auth-compat',\n    [name$i]: 'fire-rtdb',\n    [name$h]: 'fire-data-connect',\n    [name$g]: 'fire-rtdb-compat',\n    [name$f]: 'fire-fn',\n    [name$e]: 'fire-fn-compat',\n    [name$d]: 'fire-iid',\n    [name$c]: 'fire-iid-compat',\n    [name$b]: 'fire-fcm',\n    [name$a]: 'fire-fcm-compat',\n    [name$9]: 'fire-perf',\n    [name$8]: 'fire-perf-compat',\n    [name$7]: 'fire-rc',\n    [name$6]: 'fire-rc-compat',\n    [name$5]: 'fire-gcs',\n    [name$4]: 'fire-gcs-compat',\n    [name$3]: 'fire-fst',\n    [name$1]: 'fire-fst-compat',\n    [name$2]: 'fire-vertex',\n    'fire-js': 'fire-js',\n    // Platform identifier for JS SDK.\n    [name]: 'fire-js-all'\n  };\n\n  /**\n   * @license\n   * Copyright 2019 Google LLC\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *   http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  /**\n   * @internal\n   */\n  var _apps = new Map();\n  /**\n   * @internal\n   */\n  var _serverApps = new Map();\n  /**\n   * Registered components.\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  var _components = new Map();\n  /**\n   * @param component - the component being added to this app's container\n   *\n   * @internal\n   */\n  function _addComponent(app, component) {\n    try {\n      app.container.addComponent(component);\n    } catch (e) {\n      logger.debug(`Component ${component.name} failed to register with FirebaseApp ${app.name}`, e);\n    }\n  }\n  /**\n   *\n   * @internal\n   */\n  function _addOrOverwriteComponent(app, component) {\n    app.container.addOrOverwriteComponent(component);\n  }\n  /**\n   *\n   * @param component - the component to register\n   * @returns whether or not the component is registered successfully\n   *\n   * @internal\n   */\n  function _registerComponent(component) {\n    var componentName = component.name;\n    if (_components.has(componentName)) {\n      logger.debug(`There were multiple attempts to register component ${componentName}.`);\n      return false;\n    }\n    _components.set(componentName, component);\n    // add the component to existing app instances\n    for (var app of _apps.values()) {\n      _addComponent(app, component);\n    }\n    for (var serverApp of _serverApps.values()) {\n      _addComponent(serverApp, component);\n    }\n    return true;\n  }\n  /**\n   *\n   * @param app - FirebaseApp instance\n   * @param name - service name\n   *\n   * @returns the provider for the service with the matching name\n   *\n   * @internal\n   */\n  function _getProvider(app, name) {\n    var heartbeatController = app.container.getProvider('heartbeat').getImmediate({\n      optional: true\n    });\n    if (heartbeatController) {\n      void heartbeatController.triggerHeartbeat();\n    }\n    return app.container.getProvider(name);\n  }\n  /**\n   *\n   * @param app - FirebaseApp instance\n   * @param name - service name\n   * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\n   *\n   * @internal\n   */\n  function _removeServiceInstance(app, name) {\n    var instanceIdentifier = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : DEFAULT_ENTRY_NAME;\n    _getProvider(app, name).clearInstance(instanceIdentifier);\n  }\n  /**\n   *\n   * @param obj - an object of type FirebaseApp, FirebaseOptions or FirebaseAppSettings.\n   *\n   * @returns true if the provide object is of type FirebaseApp.\n   *\n   * @internal\n   */\n  function _isFirebaseApp(obj) {\n    return obj.options !== undefined;\n  }\n  /**\n   *\n   * @param obj - an object of type FirebaseApp, FirebaseOptions or FirebaseAppSettings.\n   *\n   * @returns true if the provided object is of type FirebaseServerAppImpl.\n   *\n   * @internal\n   */\n  function _isFirebaseServerAppSettings(obj) {\n    if (_isFirebaseApp(obj)) {\n      return false;\n    }\n    return 'authIdToken' in obj || 'appCheckToken' in obj || 'releaseOnDeref' in obj || 'automaticDataCollectionEnabled' in obj;\n  }\n  /**\n   *\n   * @param obj - an object of type FirebaseApp.\n   *\n   * @returns true if the provided object is of type FirebaseServerAppImpl.\n   *\n   * @internal\n   */\n  function _isFirebaseServerApp(obj) {\n    if (obj === null || obj === undefined) {\n      return false;\n    }\n    return obj.settings !== undefined;\n  }\n  /**\n   * Test only\n   *\n   * @internal\n   */\n  function _clearComponents() {\n    _components.clear();\n  }\n\n  /**\n   * @license\n   * Copyright 2019 Google LLC\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *   http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  var ERRORS = {\n    [\"no-app\" /* AppError.NO_APP */]: \"No Firebase App '{$appName}' has been created - \" + 'call initializeApp() first',\n    [\"bad-app-name\" /* AppError.BAD_APP_NAME */]: \"Illegal App name: '{$appName}'\",\n    [\"duplicate-app\" /* AppError.DUPLICATE_APP */]: \"Firebase App named '{$appName}' already exists with different options or config\",\n    [\"app-deleted\" /* AppError.APP_DELETED */]: \"Firebase App named '{$appName}' already deleted\",\n    [\"server-app-deleted\" /* AppError.SERVER_APP_DELETED */]: 'Firebase Server App has been deleted',\n    [\"no-options\" /* AppError.NO_OPTIONS */]: 'Need to provide options, when not being deployed to hosting via source.',\n    [\"invalid-app-argument\" /* AppError.INVALID_APP_ARGUMENT */]: 'firebase.{$appName}() takes either no argument or a ' + 'Firebase App instance.',\n    [\"invalid-log-argument\" /* AppError.INVALID_LOG_ARGUMENT */]: 'First argument to `onLog` must be null or a function.',\n    [\"idb-open\" /* AppError.IDB_OPEN */]: 'Error thrown when opening IndexedDB. Original error: {$originalErrorMessage}.',\n    [\"idb-get\" /* AppError.IDB_GET */]: 'Error thrown when reading from IndexedDB. Original error: {$originalErrorMessage}.',\n    [\"idb-set\" /* AppError.IDB_WRITE */]: 'Error thrown when writing to IndexedDB. Original error: {$originalErrorMessage}.',\n    [\"idb-delete\" /* AppError.IDB_DELETE */]: 'Error thrown when deleting from IndexedDB. Original error: {$originalErrorMessage}.',\n    [\"finalization-registry-not-supported\" /* AppError.FINALIZATION_REGISTRY_NOT_SUPPORTED */]: 'FirebaseServerApp deleteOnDeref field defined but the JS runtime does not support FinalizationRegistry.',\n    [\"invalid-server-app-environment\" /* AppError.INVALID_SERVER_APP_ENVIRONMENT */]: 'FirebaseServerApp is not for use in browser environments.'\n  };\n  var ERROR_FACTORY = new util.ErrorFactory('app', 'Firebase', ERRORS);\n\n  /**\n   * @license\n   * Copyright 2019 Google LLC\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *   http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  var FirebaseAppImpl = /*#__PURE__*/function () {\n    function FirebaseAppImpl(options, config, container) {\n      _classCallCheck(this, FirebaseAppImpl);\n      this._isDeleted = false;\n      this._options = {\n        ...options\n      };\n      this._config = {\n        ...config\n      };\n      this._name = config.name;\n      this._automaticDataCollectionEnabled = config.automaticDataCollectionEnabled;\n      this._container = container;\n      this.container.addComponent(new component.Component('app', () => this, \"PUBLIC\" /* ComponentType.PUBLIC */));\n    }\n    return _createClass(FirebaseAppImpl, [{\n      key: \"automaticDataCollectionEnabled\",\n      get: function () {\n        this.checkDestroyed();\n        return this._automaticDataCollectionEnabled;\n      },\n      set: function (val) {\n        this.checkDestroyed();\n        this._automaticDataCollectionEnabled = val;\n      }\n    }, {\n      key: \"name\",\n      get: function () {\n        this.checkDestroyed();\n        return this._name;\n      }\n    }, {\n      key: \"options\",\n      get: function () {\n        this.checkDestroyed();\n        return this._options;\n      }\n    }, {\n      key: \"config\",\n      get: function () {\n        this.checkDestroyed();\n        return this._config;\n      }\n    }, {\n      key: \"container\",\n      get: function () {\n        return this._container;\n      }\n    }, {\n      key: \"isDeleted\",\n      get: function () {\n        return this._isDeleted;\n      },\n      set: function (val) {\n        this._isDeleted = val;\n      }\n      /**\n       * This function will throw an Error if the App has already been deleted -\n       * use before performing API actions on the App.\n       */\n    }, {\n      key: \"checkDestroyed\",\n      value: function checkDestroyed() {\n        if (this.isDeleted) {\n          throw ERROR_FACTORY.create(\"app-deleted\" /* AppError.APP_DELETED */, {\n            appName: this._name\n          });\n        }\n      }\n    }]);\n  }();\n  /**\n   * @license\n   * Copyright 2023 Google LLC\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *   http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  // Parse the token and check to see if the `exp` claim is in the future.\n  // Reports an error to the console if the token or claim could not be parsed, or if `exp` is in\n  // the past.\n  function validateTokenTTL(base64Token, tokenName) {\n    var secondPart = util.base64Decode(base64Token.split('.')[1]);\n    if (secondPart === null) {\n      console.error(`FirebaseServerApp ${tokenName} is invalid: second part could not be parsed.`);\n      return;\n    }\n    var expClaim = JSON.parse(secondPart).exp;\n    if (expClaim === undefined) {\n      console.error(`FirebaseServerApp ${tokenName} is invalid: expiration claim could not be parsed`);\n      return;\n    }\n    var exp = JSON.parse(secondPart).exp * 1000;\n    var now = new Date().getTime();\n    var diff = exp - now;\n    if (diff <= 0) {\n      console.error(`FirebaseServerApp ${tokenName} is invalid: the token has expired.`);\n    }\n  }\n  var FirebaseServerAppImpl = /*#__PURE__*/function (_FirebaseAppImpl) {\n    function FirebaseServerAppImpl(options, serverConfig, name, container) {\n      var _this;\n      _classCallCheck(this, FirebaseServerAppImpl);\n      // Build configuration parameters for the FirebaseAppImpl base class.\n      var automaticDataCollectionEnabled = serverConfig.automaticDataCollectionEnabled !== undefined ? serverConfig.automaticDataCollectionEnabled : true;\n      // Create the FirebaseAppSettings object for the FirebaseAppImp constructor.\n      var config = {\n        name,\n        automaticDataCollectionEnabled\n      };\n      if (options.apiKey !== undefined) {\n        // Construct the parent FirebaseAppImp object.\n        _this = _callSuper(this, FirebaseServerAppImpl, [options, config, container]);\n      } else {\n        var appImpl = options;\n        _this = _callSuper(this, FirebaseServerAppImpl, [appImpl.options, config, container]);\n      }\n      // Now construct the data for the FirebaseServerAppImpl.\n      _this._serverConfig = {\n        automaticDataCollectionEnabled,\n        ...serverConfig\n      };\n      // Ensure that the current time is within the `authIdtoken` window of validity.\n      if (_this._serverConfig.authIdToken) {\n        validateTokenTTL(_this._serverConfig.authIdToken, 'authIdToken');\n      }\n      // Ensure that the current time is within the `appCheckToken` window of validity.\n      if (_this._serverConfig.appCheckToken) {\n        validateTokenTTL(_this._serverConfig.appCheckToken, 'appCheckToken');\n      }\n      _this._finalizationRegistry = null;\n      if (typeof FinalizationRegistry !== 'undefined') {\n        _this._finalizationRegistry = new FinalizationRegistry(() => {\n          _this.automaticCleanup();\n        });\n      }\n      _this._refCount = 0;\n      _this.incRefCount(_this._serverConfig.releaseOnDeref);\n      // Do not retain a hard reference to the dref object, otherwise the FinalizationRegistry\n      // will never trigger.\n      _this._serverConfig.releaseOnDeref = undefined;\n      serverConfig.releaseOnDeref = undefined;\n      registerVersion(name$q, version$1, 'serverapp');\n      return _assertThisInitialized(_this);\n    }\n    _inherits(FirebaseServerAppImpl, _FirebaseAppImpl);\n    return _createClass(FirebaseServerAppImpl, [{\n      key: \"toJSON\",\n      value: function toJSON() {\n        return undefined;\n      }\n    }, {\n      key: \"refCount\",\n      get: function () {\n        return this._refCount;\n      }\n      // Increment the reference count of this server app. If an object is provided, register it\n      // with the finalization registry.\n    }, {\n      key: \"incRefCount\",\n      value: function incRefCount(obj) {\n        if (this.isDeleted) {\n          return;\n        }\n        this._refCount++;\n        if (obj !== undefined && this._finalizationRegistry !== null) {\n          this._finalizationRegistry.register(obj, this);\n        }\n      }\n      // Decrement the reference count.\n    }, {\n      key: \"decRefCount\",\n      value: function decRefCount() {\n        if (this.isDeleted) {\n          return 0;\n        }\n        return --this._refCount;\n      }\n      // Invoked by the FinalizationRegistry callback to note that this app should go through its\n      // reference counts and delete itself if no reference count remain. The coordinating logic that\n      // handles this is in deleteApp(...).\n    }, {\n      key: \"automaticCleanup\",\n      value: function automaticCleanup() {\n        void deleteApp(this);\n      }\n    }, {\n      key: \"settings\",\n      get: function () {\n        this.checkDestroyed();\n        return this._serverConfig;\n      }\n      /**\n       * This function will throw an Error if the App has already been deleted -\n       * use before performing API actions on the App.\n       */\n    }, {\n      key: \"checkDestroyed\",\n      value: function checkDestroyed() {\n        if (this.isDeleted) {\n          throw ERROR_FACTORY.create(\"server-app-deleted\" /* AppError.SERVER_APP_DELETED */);\n        }\n      }\n    }]);\n  }(FirebaseAppImpl);\n  /**\n   * @license\n   * Copyright 2019 Google LLC\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *   http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  /**\n   * The current SDK version.\n   *\n   * @public\n   */\n  var SDK_VERSION = version;\n  function initializeApp(_options) {\n    var rawConfig = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var options = _options;\n    if (typeof rawConfig !== 'object') {\n      var _name = rawConfig;\n      rawConfig = {\n        name: _name\n      };\n    }\n    var config = {\n      name: DEFAULT_ENTRY_NAME,\n      automaticDataCollectionEnabled: true,\n      ...rawConfig\n    };\n    var name = config.name;\n    if (typeof name !== 'string' || !name) {\n      throw ERROR_FACTORY.create(\"bad-app-name\" /* AppError.BAD_APP_NAME */, {\n        appName: String(name)\n      });\n    }\n    options || (options = util.getDefaultAppConfig());\n    if (!options) {\n      throw ERROR_FACTORY.create(\"no-options\" /* AppError.NO_OPTIONS */);\n    }\n    var existingApp = _apps.get(name);\n    if (existingApp) {\n      // return the existing app if options and config deep equal the ones in the existing app.\n      if (util.deepEqual(options, existingApp.options) && util.deepEqual(config, existingApp.config)) {\n        return existingApp;\n      } else {\n        throw ERROR_FACTORY.create(\"duplicate-app\" /* AppError.DUPLICATE_APP */, {\n          appName: name\n        });\n      }\n    }\n    var container = new component.ComponentContainer(name);\n    for (var _component of _components.values()) {\n      container.addComponent(_component);\n    }\n    var newApp = new FirebaseAppImpl(options, config, container);\n    _apps.set(name, newApp);\n    return newApp;\n  }\n  function initializeServerApp(_options) {\n    var _serverAppConfig = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (util.isBrowser() && !util.isWebWorker()) {\n      // FirebaseServerApp isn't designed to be run in browsers.\n      throw ERROR_FACTORY.create(\"invalid-server-app-environment\" /* AppError.INVALID_SERVER_APP_ENVIRONMENT */);\n    }\n    var firebaseOptions;\n    var serverAppSettings = _serverAppConfig || {};\n    if (_options) {\n      if (_isFirebaseApp(_options)) {\n        firebaseOptions = _options.options;\n      } else if (_isFirebaseServerAppSettings(_options)) {\n        serverAppSettings = _options;\n      } else {\n        firebaseOptions = _options;\n      }\n    }\n    if (serverAppSettings.automaticDataCollectionEnabled === undefined) {\n      serverAppSettings.automaticDataCollectionEnabled = true;\n    }\n    firebaseOptions || (firebaseOptions = util.getDefaultAppConfig());\n    if (!firebaseOptions) {\n      throw ERROR_FACTORY.create(\"no-options\" /* AppError.NO_OPTIONS */);\n    }\n    // Build an app name based on a hash of the configuration options.\n    var nameObj = {\n      ...serverAppSettings,\n      ...firebaseOptions\n    };\n    // However, Do not mangle the name based on releaseOnDeref, since it will vary between the\n    // construction of FirebaseServerApp instances. For example, if the object is the request headers.\n    if (nameObj.releaseOnDeref !== undefined) {\n      delete nameObj.releaseOnDeref;\n    }\n    var hashCode = s => {\n      return [...s].reduce((hash, c) => Math.imul(31, hash) + c.charCodeAt(0) | 0, 0);\n    };\n    if (serverAppSettings.releaseOnDeref !== undefined) {\n      if (typeof FinalizationRegistry === 'undefined') {\n        throw ERROR_FACTORY.create(\"finalization-registry-not-supported\" /* AppError.FINALIZATION_REGISTRY_NOT_SUPPORTED */, {});\n      }\n    }\n    var nameString = '' + hashCode(JSON.stringify(nameObj));\n    var existingApp = _serverApps.get(nameString);\n    if (existingApp) {\n      existingApp.incRefCount(serverAppSettings.releaseOnDeref);\n      return existingApp;\n    }\n    var container = new component.ComponentContainer(nameString);\n    for (var _component2 of _components.values()) {\n      container.addComponent(_component2);\n    }\n    var newApp = new FirebaseServerAppImpl(firebaseOptions, serverAppSettings, nameString, container);\n    _serverApps.set(nameString, newApp);\n    return newApp;\n  }\n  /**\n   * Retrieves a {@link @firebase/app#FirebaseApp} instance.\n   *\n   * When called with no arguments, the default app is returned. When an app name\n   * is provided, the app corresponding to that name is returned.\n   *\n   * An exception is thrown if the app being retrieved has not yet been\n   * initialized.\n   *\n   * @example\n   * ```javascript\n   * // Return the default app\n   * const app = getApp();\n   * ```\n   *\n   * @example\n   * ```javascript\n   * // Return a named app\n   * const otherApp = getApp(\"otherApp\");\n   * ```\n   *\n   * @param name - Optional name of the app to return. If no name is\n   *   provided, the default is `\"[DEFAULT]\"`.\n   *\n   * @returns The app corresponding to the provided app name.\n   *   If no app name is provided, the default app is returned.\n   *\n   * @public\n   */\n  function getApp() {\n    var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_ENTRY_NAME;\n    var app = _apps.get(name);\n    if (!app && name === DEFAULT_ENTRY_NAME && util.getDefaultAppConfig()) {\n      return initializeApp();\n    }\n    if (!app) {\n      throw ERROR_FACTORY.create(\"no-app\" /* AppError.NO_APP */, {\n        appName: name\n      });\n    }\n    return app;\n  }\n  /**\n   * A (read-only) array of all initialized apps.\n   * @public\n   */\n  function getApps() {\n    return Array.from(_apps.values());\n  }\n  /**\n   * Renders this app unusable and frees the resources of all associated\n   * services.\n   *\n   * @example\n   * ```javascript\n   * deleteApp(app)\n   *   .then(function() {\n   *     console.log(\"App deleted successfully\");\n   *   })\n   *   .catch(function(error) {\n   *     console.log(\"Error deleting app:\", error);\n   *   });\n   * ```\n   *\n   * @public\n   */\n  function deleteApp(_x) {\n    return _deleteApp.apply(this, arguments);\n  }\n  /**\n   * Registers a library's name and version for platform logging purposes.\n   * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\n   * @param version - Current version of that library.\n   * @param variant - Bundle variant, e.g., node, rn, etc.\n   *\n   * @public\n   */\n  function _deleteApp() {\n    _deleteApp = _asyncToGenerator(function* (app) {\n      var cleanupProviders = false;\n      var name = app.name;\n      if (_apps.has(name)) {\n        cleanupProviders = true;\n        _apps.delete(name);\n      } else if (_serverApps.has(name)) {\n        var firebaseServerApp = app;\n        if (firebaseServerApp.decRefCount() <= 0) {\n          _serverApps.delete(name);\n          cleanupProviders = true;\n        }\n      }\n      if (cleanupProviders) {\n        yield Promise.all(app.container.getProviders().map(provider => provider.delete()));\n        app.isDeleted = true;\n      }\n    });\n    return _deleteApp.apply(this, arguments);\n  }\n  function registerVersion(libraryKeyOrName, version, variant) {\n    // TODO: We can use this check to whitelist strings when/if we set up\n    // a good whitelist system.\n    var library = PLATFORM_LOG_STRING[libraryKeyOrName] ?? libraryKeyOrName;\n    if (variant) {\n      library += `-${variant}`;\n    }\n    var libraryMismatch = library.match(/\\s|\\//);\n    var versionMismatch = version.match(/\\s|\\//);\n    if (libraryMismatch || versionMismatch) {\n      var warning = [`Unable to register library \"${library}\" with version \"${version}\":`];\n      if (libraryMismatch) {\n        warning.push(`library name \"${library}\" contains illegal characters (whitespace or \"/\")`);\n      }\n      if (libraryMismatch && versionMismatch) {\n        warning.push('and');\n      }\n      if (versionMismatch) {\n        warning.push(`version name \"${version}\" contains illegal characters (whitespace or \"/\")`);\n      }\n      logger.warn(warning.join(' '));\n      return;\n    }\n    _registerComponent(new component.Component(`${library}-version`, () => ({\n      library,\n      version\n    }), \"VERSION\" /* ComponentType.VERSION */));\n  }\n  /**\n   * Sets log handler for all Firebase SDKs.\n   * @param logCallback - An optional custom log handler that executes user code whenever\n   * the Firebase SDK makes a logging call.\n   *\n   * @public\n   */\n  function onLog(logCallback, options) {\n    if (logCallback !== null && typeof logCallback !== 'function') {\n      throw ERROR_FACTORY.create(\"invalid-log-argument\" /* AppError.INVALID_LOG_ARGUMENT */);\n    }\n    logger$1.setUserLogHandler(logCallback, options);\n  }\n  /**\n   * Sets log level for all Firebase SDKs.\n   *\n   * All of the log types above the current log level are captured (i.e. if\n   * you set the log level to `info`, errors are logged, but `debug` and\n   * `verbose` logs are not).\n   *\n   * @public\n   */\n  function setLogLevel(logLevel) {\n    logger$1.setLogLevel(logLevel);\n  }\n\n  /**\n   * @license\n   * Copyright 2021 Google LLC\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *   http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  var DB_NAME = 'firebase-heartbeat-database';\n  var DB_VERSION = 1;\n  var STORE_NAME = 'firebase-heartbeat-store';\n  var dbPromise = null;\n  function getDbPromise() {\n    if (!dbPromise) {\n      dbPromise = idb.openDB(DB_NAME, DB_VERSION, {\n        upgrade: (db, oldVersion) => {\n          // We don't use 'break' in this switch statement, the fall-through\n          // behavior is what we want, because if there are multiple versions between\n          // the old version and the current version, we want ALL the migrations\n          // that correspond to those versions to run, not only the last one.\n          // eslint-disable-next-line default-case\n          switch (oldVersion) {\n            case 0:\n              try {\n                db.createObjectStore(STORE_NAME);\n              } catch (e) {\n                // Safari/iOS browsers throw occasional exceptions on\n                // db.createObjectStore() that may be a bug. Avoid blocking\n                // the rest of the app functionality.\n                console.warn(e);\n              }\n          }\n        }\n      }).catch(e => {\n        throw ERROR_FACTORY.create(\"idb-open\" /* AppError.IDB_OPEN */, {\n          originalErrorMessage: e.message\n        });\n      });\n    }\n    return dbPromise;\n  }\n  function readHeartbeatsFromIndexedDB(_x2) {\n    return _readHeartbeatsFromIndexedDB.apply(this, arguments);\n  }\n  function _readHeartbeatsFromIndexedDB() {\n    _readHeartbeatsFromIndexedDB = _asyncToGenerator(function* (app) {\n      try {\n        var db = yield getDbPromise();\n        var tx = db.transaction(STORE_NAME);\n        var result = yield tx.objectStore(STORE_NAME).get(computeKey(app));\n        // We already have the value but tx.done can throw,\n        // so we need to await it here to catch errors\n        yield tx.done;\n        return result;\n      } catch (e) {\n        if (e instanceof util.FirebaseError) {\n          logger.warn(e.message);\n        } else {\n          var idbGetError = ERROR_FACTORY.create(\"idb-get\" /* AppError.IDB_GET */, {\n            originalErrorMessage: e?.message\n          });\n          logger.warn(idbGetError.message);\n        }\n      }\n    });\n    return _readHeartbeatsFromIndexedDB.apply(this, arguments);\n  }\n  function writeHeartbeatsToIndexedDB(_x3, _x4) {\n    return _writeHeartbeatsToIndexedDB.apply(this, arguments);\n  }\n  function _writeHeartbeatsToIndexedDB() {\n    _writeHeartbeatsToIndexedDB = _asyncToGenerator(function* (app, heartbeatObject) {\n      try {\n        var db = yield getDbPromise();\n        var tx = db.transaction(STORE_NAME, 'readwrite');\n        var objectStore = tx.objectStore(STORE_NAME);\n        yield objectStore.put(heartbeatObject, computeKey(app));\n        yield tx.done;\n      } catch (e) {\n        if (e instanceof util.FirebaseError) {\n          logger.warn(e.message);\n        } else {\n          var idbGetError = ERROR_FACTORY.create(\"idb-set\" /* AppError.IDB_WRITE */, {\n            originalErrorMessage: e?.message\n          });\n          logger.warn(idbGetError.message);\n        }\n      }\n    });\n    return _writeHeartbeatsToIndexedDB.apply(this, arguments);\n  }\n  function computeKey(app) {\n    return `${app.name}!${app.options.appId}`;\n  }\n\n  /**\n   * @license\n   * Copyright 2021 Google LLC\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *   http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  var MAX_HEADER_BYTES = 1024;\n  var MAX_NUM_STORED_HEARTBEATS = 30;\n  var HeartbeatServiceImpl = /*#__PURE__*/function () {\n    function HeartbeatServiceImpl(container) {\n      _classCallCheck(this, HeartbeatServiceImpl);\n      this.container = container;\n      /**\n       * In-memory cache for heartbeats, used by getHeartbeatsHeader() to generate\n       * the header string.\n       * Stores one record per date. This will be consolidated into the standard\n       * format of one record per user agent string before being sent as a header.\n       * Populated from indexedDB when the controller is instantiated and should\n       * be kept in sync with indexedDB.\n       * Leave public for easier testing.\n       */\n      this._heartbeatsCache = null;\n      var app = this.container.getProvider('app').getImmediate();\n      this._storage = new HeartbeatStorageImpl(app);\n      this._heartbeatsCachePromise = this._storage.read().then(result => {\n        this._heartbeatsCache = result;\n        return result;\n      });\n    }\n    /**\n     * Called to report a heartbeat. The function will generate\n     * a HeartbeatsByUserAgent object, update heartbeatsCache, and persist it\n     * to IndexedDB.\n     * Note that we only store one heartbeat per day. So if a heartbeat for today is\n     * already logged, subsequent calls to this function in the same day will be ignored.\n     */\n    return _createClass(HeartbeatServiceImpl, [{\n      key: \"triggerHeartbeat\",\n      value: (function () {\n        var _triggerHeartbeat = _asyncToGenerator(function* () {\n          try {\n            var platformLogger = this.container.getProvider('platform-logger').getImmediate();\n            // This is the \"Firebase user agent\" string from the platform logger\n            // service, not the browser user agent.\n            var agent = platformLogger.getPlatformInfoString();\n            var date = getUTCDateString();\n            if (this._heartbeatsCache?.heartbeats == null) {\n              this._heartbeatsCache = yield this._heartbeatsCachePromise;\n              // If we failed to construct a heartbeats cache, then return immediately.\n              if (this._heartbeatsCache?.heartbeats == null) {\n                return;\n              }\n            }\n            // Do not store a heartbeat if one is already stored for this day\n            // or if a header has already been sent today.\n            if (this._heartbeatsCache.lastSentHeartbeatDate === date || this._heartbeatsCache.heartbeats.some(singleDateHeartbeat => singleDateHeartbeat.date === date)) {\n              return;\n            } else {\n              // There is no entry for this date. Create one.\n              this._heartbeatsCache.heartbeats.push({\n                date,\n                agent\n              });\n              // If the number of stored heartbeats exceeds the maximum number of stored heartbeats, remove the heartbeat with the earliest date.\n              // Since this is executed each time a heartbeat is pushed, the limit can only be exceeded by one, so only one needs to be removed.\n              if (this._heartbeatsCache.heartbeats.length > MAX_NUM_STORED_HEARTBEATS) {\n                var earliestHeartbeatIdx = getEarliestHeartbeatIdx(this._heartbeatsCache.heartbeats);\n                this._heartbeatsCache.heartbeats.splice(earliestHeartbeatIdx, 1);\n              }\n            }\n            return this._storage.overwrite(this._heartbeatsCache);\n          } catch (e) {\n            logger.warn(e);\n          }\n        });\n        function triggerHeartbeat() {\n          return _triggerHeartbeat.apply(this, arguments);\n        }\n        return triggerHeartbeat;\n      }()\n      /**\n       * Returns a base64 encoded string which can be attached to the heartbeat-specific header directly.\n       * It also clears all heartbeats from memory as well as in IndexedDB.\n       *\n       * NOTE: Consuming product SDKs should not send the header if this method\n       * returns an empty string.\n       */\n      )\n    }, {\n      key: \"getHeartbeatsHeader\",\n      value: (function () {\n        var _getHeartbeatsHeader = _asyncToGenerator(function* () {\n          try {\n            if (this._heartbeatsCache === null) {\n              yield this._heartbeatsCachePromise;\n            }\n            // If it's still null or the array is empty, there is no data to send.\n            if (this._heartbeatsCache?.heartbeats == null || this._heartbeatsCache.heartbeats.length === 0) {\n              return '';\n            }\n            var date = getUTCDateString();\n            // Extract as many heartbeats from the cache as will fit under the size limit.\n            var _extractHeartbeatsFor = extractHeartbeatsForHeader(this._heartbeatsCache.heartbeats),\n              heartbeatsToSend = _extractHeartbeatsFor.heartbeatsToSend,\n              unsentEntries = _extractHeartbeatsFor.unsentEntries;\n            var headerString = util.base64urlEncodeWithoutPadding(JSON.stringify({\n              version: 2,\n              heartbeats: heartbeatsToSend\n            }));\n            // Store last sent date to prevent another being logged/sent for the same day.\n            this._heartbeatsCache.lastSentHeartbeatDate = date;\n            if (unsentEntries.length > 0) {\n              // Store any unsent entries if they exist.\n              this._heartbeatsCache.heartbeats = unsentEntries;\n              // This seems more likely than emptying the array (below) to lead to some odd state\n              // since the cache isn't empty and this will be called again on the next request,\n              // and is probably safest if we await it.\n              yield this._storage.overwrite(this._heartbeatsCache);\n            } else {\n              this._heartbeatsCache.heartbeats = [];\n              // Do not wait for this, to reduce latency.\n              void this._storage.overwrite(this._heartbeatsCache);\n            }\n            return headerString;\n          } catch (e) {\n            logger.warn(e);\n            return '';\n          }\n        });\n        function getHeartbeatsHeader() {\n          return _getHeartbeatsHeader.apply(this, arguments);\n        }\n        return getHeartbeatsHeader;\n      }())\n    }]);\n  }();\n  function getUTCDateString() {\n    var today = new Date();\n    // Returns date format 'YYYY-MM-DD'\n    return today.toISOString().substring(0, 10);\n  }\n  function extractHeartbeatsForHeader(heartbeatsCache) {\n    var maxSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : MAX_HEADER_BYTES;\n    // Heartbeats grouped by user agent in the standard format to be sent in\n    // the header.\n    var heartbeatsToSend = [];\n    // Single date format heartbeats that are not sent.\n    var unsentEntries = heartbeatsCache.slice();\n    var _loop = function (singleDateHeartbeat) {\n        // Look for an existing entry with the same user agent.\n        var heartbeatEntry = heartbeatsToSend.find(hb => hb.agent === singleDateHeartbeat.agent);\n        if (!heartbeatEntry) {\n          // If no entry for this user agent exists, create one.\n          heartbeatsToSend.push({\n            agent: singleDateHeartbeat.agent,\n            dates: [singleDateHeartbeat.date]\n          });\n          if (countBytes(heartbeatsToSend) > maxSize) {\n            // If the header would exceed max size, remove the added heartbeat\n            // entry and stop adding to the header.\n            heartbeatsToSend.pop();\n            return 0; // break\n          }\n        } else {\n          heartbeatEntry.dates.push(singleDateHeartbeat.date);\n          // If the header would exceed max size, remove the added date\n          // and stop adding to the header.\n          if (countBytes(heartbeatsToSend) > maxSize) {\n            heartbeatEntry.dates.pop();\n            return 0; // break\n          }\n        }\n        // Pop unsent entry from queue. (Skipped if adding the entry exceeded\n        // quota and the loop breaks early.)\n        unsentEntries = unsentEntries.slice(1);\n      },\n      _ret;\n    for (var singleDateHeartbeat of heartbeatsCache) {\n      _ret = _loop(singleDateHeartbeat);\n      if (_ret === 0) break;\n    }\n    return {\n      heartbeatsToSend,\n      unsentEntries\n    };\n  }\n  var HeartbeatStorageImpl = /*#__PURE__*/function () {\n    function HeartbeatStorageImpl(app) {\n      _classCallCheck(this, HeartbeatStorageImpl);\n      this.app = app;\n      this._canUseIndexedDBPromise = this.runIndexedDBEnvironmentCheck();\n    }\n    return _createClass(HeartbeatStorageImpl, [{\n      key: \"runIndexedDBEnvironmentCheck\",\n      value: function () {\n        var _runIndexedDBEnvironmentCheck = _asyncToGenerator(function* () {\n          if (!util.isIndexedDBAvailable()) {\n            return false;\n          } else {\n            return util.validateIndexedDBOpenable().then(() => true).catch(() => false);\n          }\n        });\n        function runIndexedDBEnvironmentCheck() {\n          return _runIndexedDBEnvironmentCheck.apply(this, arguments);\n        }\n        return runIndexedDBEnvironmentCheck;\n      }()\n      /**\n       * Read all heartbeats.\n       */\n    }, {\n      key: \"read\",\n      value: (function () {\n        var _read = _asyncToGenerator(function* () {\n          var canUseIndexedDB = yield this._canUseIndexedDBPromise;\n          if (!canUseIndexedDB) {\n            return {\n              heartbeats: []\n            };\n          } else {\n            var idbHeartbeatObject = yield readHeartbeatsFromIndexedDB(this.app);\n            if (idbHeartbeatObject?.heartbeats) {\n              return idbHeartbeatObject;\n            } else {\n              return {\n                heartbeats: []\n              };\n            }\n          }\n        });\n        function read() {\n          return _read.apply(this, arguments);\n        }\n        return read;\n      }() // overwrite the storage with the provided heartbeats\n      )\n    }, {\n      key: \"overwrite\",\n      value: function () {\n        var _overwrite = _asyncToGenerator(function* (heartbeatsObject) {\n          var canUseIndexedDB = yield this._canUseIndexedDBPromise;\n          if (!canUseIndexedDB) {\n            return;\n          } else {\n            var existingHeartbeatsObject = yield this.read();\n            return writeHeartbeatsToIndexedDB(this.app, {\n              lastSentHeartbeatDate: heartbeatsObject.lastSentHeartbeatDate ?? existingHeartbeatsObject.lastSentHeartbeatDate,\n              heartbeats: heartbeatsObject.heartbeats\n            });\n          }\n        });\n        function overwrite(_x5) {\n          return _overwrite.apply(this, arguments);\n        }\n        return overwrite;\n      }() // add heartbeats\n    }, {\n      key: \"add\",\n      value: function () {\n        var _add = _asyncToGenerator(function* (heartbeatsObject) {\n          var canUseIndexedDB = yield this._canUseIndexedDBPromise;\n          if (!canUseIndexedDB) {\n            return;\n          } else {\n            var existingHeartbeatsObject = yield this.read();\n            return writeHeartbeatsToIndexedDB(this.app, {\n              lastSentHeartbeatDate: heartbeatsObject.lastSentHeartbeatDate ?? existingHeartbeatsObject.lastSentHeartbeatDate,\n              heartbeats: [...existingHeartbeatsObject.heartbeats, ...heartbeatsObject.heartbeats]\n            });\n          }\n        });\n        function add(_x6) {\n          return _add.apply(this, arguments);\n        }\n        return add;\n      }()\n    }]);\n  }();\n  /**\n   * Calculate bytes of a HeartbeatsByUserAgent array after being wrapped\n   * in a platform logging header JSON object, stringified, and converted\n   * to base 64.\n   */\n  function countBytes(heartbeatsCache) {\n    // base64 has a restricted set of characters, all of which should be 1 byte.\n    return util.base64urlEncodeWithoutPadding(\n    // heartbeatsCache wrapper properties\n    JSON.stringify({\n      version: 2,\n      heartbeats: heartbeatsCache\n    })).length;\n  }\n  /**\n   * Returns the index of the heartbeat with the earliest date.\n   * If the heartbeats array is empty, -1 is returned.\n   */\n  function getEarliestHeartbeatIdx(heartbeats) {\n    if (heartbeats.length === 0) {\n      return -1;\n    }\n    var earliestHeartbeatIdx = 0;\n    var earliestHeartbeatDate = heartbeats[0].date;\n    for (var i = 1; i < heartbeats.length; i++) {\n      if (heartbeats[i].date < earliestHeartbeatDate) {\n        earliestHeartbeatDate = heartbeats[i].date;\n        earliestHeartbeatIdx = i;\n      }\n    }\n    return earliestHeartbeatIdx;\n  }\n\n  /**\n   * @license\n   * Copyright 2019 Google LLC\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *   http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  function registerCoreComponents(variant) {\n    _registerComponent(new component.Component('platform-logger', container => new PlatformLoggerServiceImpl(container), \"PRIVATE\" /* ComponentType.PRIVATE */));\n    _registerComponent(new component.Component('heartbeat', container => new HeartbeatServiceImpl(container), \"PRIVATE\" /* ComponentType.PRIVATE */));\n    // Register `app` package.\n    registerVersion(name$q, version$1, variant);\n    // BUILD_TARGET will be replaced by values like esm, cjs, etc during the compilation\n    registerVersion(name$q, version$1, 'cjs2020');\n    // Register platform SDK identifier (no version).\n    registerVersion('fire-js', '');\n  }\n\n  /**\n   * Firebase App\n   *\n   * @remarks This package coordinates the communication between the different Firebase components\n   * @packageDocumentation\n   */\n  registerCoreComponents('node');\n  Object.defineProperty(exports, 'FirebaseError', {\n    enumerable: true,\n    get: function () {\n      return util.FirebaseError;\n    }\n  });\n  exports.SDK_VERSION = SDK_VERSION;\n  exports._DEFAULT_ENTRY_NAME = DEFAULT_ENTRY_NAME;\n  exports._addComponent = _addComponent;\n  exports._addOrOverwriteComponent = _addOrOverwriteComponent;\n  exports._apps = _apps;\n  exports._clearComponents = _clearComponents;\n  exports._components = _components;\n  exports._getProvider = _getProvider;\n  exports._isFirebaseApp = _isFirebaseApp;\n  exports._isFirebaseServerApp = _isFirebaseServerApp;\n  exports._isFirebaseServerAppSettings = _isFirebaseServerAppSettings;\n  exports._registerComponent = _registerComponent;\n  exports._removeServiceInstance = _removeServiceInstance;\n  exports._serverApps = _serverApps;\n  exports.deleteApp = deleteApp;\n  exports.getApp = getApp;\n  exports.getApps = getApps;\n  exports.initializeApp = initializeApp;\n  exports.initializeServerApp = initializeServerApp;\n  exports.onLog = onLog;\n  exports.registerVersion = registerVersion;\n  exports.setLogLevel = setLogLevel;\n});","lineCount":1346,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_asyncToGenerator"],[4,23,1,13],[4,26,1,13,"require"],[4,33,1,13],[4,34,1,13,"_dependencyMap"],[4,48,1,13],[4,96,1,13,"default"],[4,103,1,13],[5,2,1,13],[5,6,1,13,"_assertThisInitialized"],[5,28,1,13],[5,31,1,13,"require"],[5,38,1,13],[5,39,1,13,"_dependencyMap"],[5,53,1,13],[5,106,1,13,"default"],[5,113,1,13],[6,2,1,13],[6,6,1,13,"_callSuper"],[6,16,1,13],[6,19,1,13,"require"],[6,26,1,13],[6,27,1,13,"_dependencyMap"],[6,41,1,13],[6,82,1,13,"default"],[6,89,1,13],[7,2,1,13],[7,6,1,13,"_inherits"],[7,15,1,13],[7,18,1,13,"require"],[7,25,1,13],[7,26,1,13,"_dependencyMap"],[7,40,1,13],[7,80,1,13,"default"],[7,87,1,13],[8,2,1,13],[8,6,1,13,"_classCallCheck"],[8,21,1,13],[8,24,1,13,"require"],[8,31,1,13],[8,32,1,13,"_dependencyMap"],[8,46,1,13],[8,92,1,13,"default"],[8,99,1,13],[9,2,1,13],[9,6,1,13,"_createClass"],[9,18,1,13],[9,21,1,13,"require"],[9,28,1,13],[9,29,1,13,"_dependencyMap"],[9,43,1,13],[9,86,1,13,"default"],[9,93,1,13],[10,2,3,0,"Object"],[10,8,3,6],[10,9,3,7,"defineProperty"],[10,23,3,21],[10,24,3,22,"exports"],[10,31,3,29],[10,33,3,31],[10,45,3,43],[10,47,3,45],[11,4,3,47,"value"],[11,9,3,52],[11,11,3,54],[12,2,3,59],[12,3,3,60],[12,4,3,61],[13,2,5,0],[13,6,5,4,"component"],[13,15,5,13],[13,18,5,16,"require"],[13,25,5,23],[13,26,5,23,"_dependencyMap"],[13,40,5,23],[13,66,5,45],[13,67,5,46],[14,2,6,0],[14,6,6,4,"logger$1"],[14,14,6,12],[14,17,6,15,"require"],[14,24,6,22],[14,25,6,22,"_dependencyMap"],[14,39,6,22],[14,62,6,41],[14,63,6,42],[15,2,7,0],[15,6,7,4,"util"],[15,10,7,8],[15,13,7,11,"require"],[15,20,7,18],[15,21,7,18,"_dependencyMap"],[15,35,7,18],[15,56,7,35],[15,57,7,36],[16,2,8,0],[16,6,8,4,"idb"],[16,9,8,7],[16,12,8,10,"require"],[16,19,8,17],[16,20,8,17,"_dependencyMap"],[16,34,8,17],[16,44,8,23],[16,45,8,24],[18,2,10,0],[19,0,11,0],[20,0,12,0],[21,0,13,0],[22,0,14,0],[23,0,15,0],[24,0,16,0],[25,0,17,0],[26,0,18,0],[27,0,19,0],[28,0,20,0],[29,0,21,0],[30,0,22,0],[31,0,23,0],[32,0,24,0],[33,0,25,0],[34,2,10,0],[34,6,26,6,"PlatformLoggerServiceImpl"],[34,31,26,31],[35,4,27,4],[35,13,27,4,"PlatformLoggerServiceImpl"],[35,39,27,16,"container"],[35,48,27,25],[35,50,27,27],[36,6,27,27,"_classCallCheck"],[36,21,27,27],[36,28,27,27,"PlatformLoggerServiceImpl"],[36,53,27,27],[37,6,28,8],[37,10,28,12],[37,11,28,13,"container"],[37,20,28,22],[37,23,28,25,"container"],[37,32,28,34],[38,4,29,4],[39,4,30,4],[40,4,31,4],[41,4,31,4],[41,11,31,4,"_createClass"],[41,23,31,4],[41,24,31,4,"PlatformLoggerServiceImpl"],[41,49,31,4],[42,6,31,4,"key"],[42,9,31,4],[43,6,31,4,"value"],[43,11,31,4],[43,13,32,4],[43,22,32,4,"getPlatformInfoString"],[43,43,32,25,"getPlatformInfoString"],[43,44,32,25],[43,46,32,28],[44,8,33,8],[44,12,33,14,"providers"],[44,21,33,23],[44,24,33,26],[44,28,33,30],[44,29,33,31,"container"],[44,38,33,40],[44,39,33,41,"getProviders"],[44,51,33,53],[44,52,33,54],[44,53,33,55],[45,8,34,8],[46,8,35,8],[47,8,36,8],[47,15,36,15,"providers"],[47,24,36,24],[47,25,37,13,"map"],[47,28,37,16],[47,29,37,17,"provider"],[47,37,37,25],[47,41,37,29],[48,10,38,12],[48,14,38,16,"isVersionServiceProvider"],[48,38,38,40],[48,39,38,41,"provider"],[48,47,38,49],[48,48,38,50],[48,50,38,52],[49,12,39,16],[49,16,39,22,"service"],[49,23,39,29],[49,26,39,32,"provider"],[49,34,39,40],[49,35,39,41,"getImmediate"],[49,47,39,53],[49,48,39,54],[49,49,39,55],[50,12,40,16],[50,19,40,23],[50,22,40,26,"service"],[50,29,40,33],[50,30,40,34,"library"],[50,37,40,41],[50,41,40,45,"service"],[50,48,40,52],[50,49,40,53,"version"],[50,56,40,60],[50,58,40,62],[51,10,41,12],[51,11,41,13],[51,17,42,17],[52,12,43,16],[52,19,43,23],[52,23,43,27],[53,10,44,12],[54,8,45,8],[54,9,45,9],[54,10,45,10],[54,11,46,13,"filter"],[54,17,46,19],[54,18,46,20,"logString"],[54,27,46,29],[54,31,46,33,"logString"],[54,40,46,42],[54,41,46,43],[54,42,47,13,"join"],[54,46,47,17],[54,47,47,18],[54,50,47,21],[54,51,47,22],[55,6,48,4],[56,4,48,5],[57,2,48,5],[58,2,50,0],[59,0,51,0],[60,0,52,0],[61,0,53,0],[62,0,54,0],[63,0,55,0],[64,0,56,0],[65,0,57,0],[66,2,58,0],[66,11,58,9,"isVersionServiceProvider"],[66,35,58,33,"isVersionServiceProvider"],[66,36,58,34,"provider"],[66,44,58,42],[66,46,58,44],[67,4,59,4],[67,8,59,10,"component"],[67,17,59,19],[67,20,59,22,"provider"],[67,28,59,30],[67,29,59,31,"getComponent"],[67,41,59,43],[67,42,59,44],[67,43,59,45],[68,4,60,4],[68,11,60,11,"component"],[68,20,60,20],[68,22,60,22,"type"],[68,26,60,26],[68,31,60,31],[68,40,60,40],[68,41,60,41],[69,2,61,0],[70,2,63,0],[70,6,63,6,"name$q"],[70,12,63,12],[70,15,63,15],[70,30,63,30],[71,2,64,0],[71,6,64,6,"version$1"],[71,15,64,15],[71,18,64,18],[71,26,64,26],[73,2,66,0],[74,0,67,0],[75,0,68,0],[76,0,69,0],[77,0,70,0],[78,0,71,0],[79,0,72,0],[80,0,73,0],[81,0,74,0],[82,0,75,0],[83,0,76,0],[84,0,77,0],[85,0,78,0],[86,0,79,0],[87,0,80,0],[88,0,81,0],[89,2,82,0],[89,6,82,6,"logger"],[89,12,82,12],[89,15,82,15],[89,19,82,19,"logger$1"],[89,27,82,27],[89,28,82,28,"Logger"],[89,34,82,34],[89,35,82,35],[89,50,82,50],[89,51,82,51],[90,2,84,0],[90,6,84,6,"name$p"],[90,12,84,12],[90,15,84,15],[90,37,84,37],[91,2,86,0],[91,6,86,6,"name$o"],[91,12,86,12],[91,15,86,15],[91,43,86,43],[92,2,88,0],[92,6,88,6,"name$n"],[92,12,88,12],[92,15,88,15],[92,36,88,36],[93,2,90,0],[93,6,90,6,"name$m"],[93,12,90,12],[93,15,90,15],[93,43,90,43],[94,2,92,0],[94,6,92,6,"name$l"],[94,12,92,12],[94,15,92,15],[94,36,92,36],[95,2,94,0],[95,6,94,6,"name$k"],[95,12,94,12],[95,15,94,15],[95,31,94,31],[96,2,96,0],[96,6,96,6,"name$j"],[96,12,96,12],[96,15,96,15],[96,38,96,38],[97,2,98,0],[97,6,98,6,"name$i"],[97,12,98,12],[97,15,98,15],[97,35,98,35],[98,2,100,0],[98,6,100,6,"name$h"],[98,12,100,12],[98,15,100,15],[98,39,100,39],[99,2,102,0],[99,6,102,6,"name$g"],[99,12,102,12],[99,15,102,15],[99,42,102,42],[100,2,104,0],[100,6,104,6,"name$f"],[100,12,104,12],[100,15,104,15],[100,36,104,36],[101,2,106,0],[101,6,106,6,"name$e"],[101,12,106,12],[101,15,106,15],[101,43,106,43],[102,2,108,0],[102,6,108,6,"name$d"],[102,12,108,12],[102,15,108,15],[102,40,108,40],[103,2,110,0],[103,6,110,6,"name$c"],[103,12,110,12],[103,15,110,15],[103,47,110,47],[104,2,112,0],[104,6,112,6,"name$b"],[104,12,112,12],[104,15,112,15],[104,36,112,36],[105,2,114,0],[105,6,114,6,"name$a"],[105,12,114,12],[105,15,114,15],[105,43,114,43],[106,2,116,0],[106,6,116,6,"name$9"],[106,12,116,12],[106,15,116,15],[106,38,116,38],[107,2,118,0],[107,6,118,6,"name$8"],[107,12,118,12],[107,15,118,15],[107,45,118,45],[108,2,120,0],[108,6,120,6,"name$7"],[108,12,120,12],[108,15,120,15],[108,40,120,40],[109,2,122,0],[109,6,122,6,"name$6"],[109,12,122,12],[109,15,122,15],[109,47,122,47],[110,2,124,0],[110,6,124,6,"name$5"],[110,12,124,12],[110,15,124,15],[110,34,124,34],[111,2,126,0],[111,6,126,6,"name$4"],[111,12,126,12],[111,15,126,15],[111,41,126,41],[112,2,128,0],[112,6,128,6,"name$3"],[112,12,128,12],[112,15,128,15],[112,36,128,36],[113,2,130,0],[113,6,130,6,"name$2"],[113,12,130,12],[113,15,130,15],[113,29,130,29],[114,2,132,0],[114,6,132,6,"name$1"],[114,12,132,12],[114,15,132,15],[114,43,132,43],[115,2,134,0],[115,6,134,6,"name"],[115,10,134,10],[115,13,134,13],[115,23,134,23],[116,2,135,0],[116,6,135,6,"version"],[116,13,135,13],[116,16,135,16],[116,24,135,24],[118,2,137,0],[119,0,138,0],[120,0,139,0],[121,0,140,0],[122,0,141,0],[123,0,142,0],[124,0,143,0],[125,0,144,0],[126,0,145,0],[127,0,146,0],[128,0,147,0],[129,0,148,0],[130,0,149,0],[131,0,150,0],[132,0,151,0],[133,0,152,0],[134,2,153,0],[135,0,154,0],[136,0,155,0],[137,0,156,0],[138,0,157,0],[139,2,158,0],[139,6,158,6,"DEFAULT_ENTRY_NAME"],[139,24,158,24],[139,27,158,27],[139,38,158,38],[140,2,159,0],[140,6,159,6,"PLATFORM_LOG_STRING"],[140,25,159,25],[140,28,159,28],[141,4,160,4],[141,5,160,5,"name$q"],[141,11,160,11],[141,14,160,14],[141,25,160,25],[142,4,161,4],[142,5,161,5,"name$p"],[142,11,161,11],[142,14,161,14],[142,32,161,32],[143,4,162,4],[143,5,162,5,"name$n"],[143,11,162,11],[143,14,162,14],[143,30,162,30],[144,4,163,4],[144,5,163,5,"name$o"],[144,11,163,11],[144,14,163,14],[144,37,163,37],[145,4,164,4],[145,5,164,5,"name$l"],[145,11,164,11],[145,14,164,14],[145,30,164,30],[146,4,165,4],[146,5,165,5,"name$m"],[146,11,165,11],[146,14,165,14],[146,37,165,37],[147,4,166,4],[147,5,166,5,"name$k"],[147,11,166,11],[147,14,166,14],[147,25,166,25],[148,4,167,4],[148,5,167,5,"name$j"],[148,11,167,11],[148,14,167,14],[148,32,167,32],[149,4,168,4],[149,5,168,5,"name$i"],[149,11,168,11],[149,14,168,14],[149,25,168,25],[150,4,169,4],[150,5,169,5,"name$h"],[150,11,169,11],[150,14,169,14],[150,33,169,33],[151,4,170,4],[151,5,170,5,"name$g"],[151,11,170,11],[151,14,170,14],[151,32,170,32],[152,4,171,4],[152,5,171,5,"name$f"],[152,11,171,11],[152,14,171,14],[152,23,171,23],[153,4,172,4],[153,5,172,5,"name$e"],[153,11,172,11],[153,14,172,14],[153,30,172,30],[154,4,173,4],[154,5,173,5,"name$d"],[154,11,173,11],[154,14,173,14],[154,24,173,24],[155,4,174,4],[155,5,174,5,"name$c"],[155,11,174,11],[155,14,174,14],[155,31,174,31],[156,4,175,4],[156,5,175,5,"name$b"],[156,11,175,11],[156,14,175,14],[156,24,175,24],[157,4,176,4],[157,5,176,5,"name$a"],[157,11,176,11],[157,14,176,14],[157,31,176,31],[158,4,177,4],[158,5,177,5,"name$9"],[158,11,177,11],[158,14,177,14],[158,25,177,25],[159,4,178,4],[159,5,178,5,"name$8"],[159,11,178,11],[159,14,178,14],[159,32,178,32],[160,4,179,4],[160,5,179,5,"name$7"],[160,11,179,11],[160,14,179,14],[160,23,179,23],[161,4,180,4],[161,5,180,5,"name$6"],[161,11,180,11],[161,14,180,14],[161,30,180,30],[162,4,181,4],[162,5,181,5,"name$5"],[162,11,181,11],[162,14,181,14],[162,24,181,24],[163,4,182,4],[163,5,182,5,"name$4"],[163,11,182,11],[163,14,182,14],[163,31,182,31],[164,4,183,4],[164,5,183,5,"name$3"],[164,11,183,11],[164,14,183,14],[164,24,183,24],[165,4,184,4],[165,5,184,5,"name$1"],[165,11,184,11],[165,14,184,14],[165,31,184,31],[166,4,185,4],[166,5,185,5,"name$2"],[166,11,185,11],[166,14,185,14],[166,27,185,27],[167,4,186,4],[167,13,186,13],[167,15,186,15],[167,24,186,24],[168,4,186,26],[169,4,187,4],[169,5,187,5,"name"],[169,9,187,9],[169,12,187,12],[170,2,188,0],[170,3,188,1],[172,2,190,0],[173,0,191,0],[174,0,192,0],[175,0,193,0],[176,0,194,0],[177,0,195,0],[178,0,196,0],[179,0,197,0],[180,0,198,0],[181,0,199,0],[182,0,200,0],[183,0,201,0],[184,0,202,0],[185,0,203,0],[186,0,204,0],[187,0,205,0],[188,2,206,0],[189,0,207,0],[190,0,208,0],[191,2,209,0],[191,6,209,6,"_apps"],[191,11,209,11],[191,14,209,14],[191,18,209,18,"Map"],[191,21,209,21],[191,22,209,22],[191,23,209,23],[192,2,210,0],[193,0,211,0],[194,0,212,0],[195,2,213,0],[195,6,213,6,"_serverApps"],[195,17,213,17],[195,20,213,20],[195,24,213,24,"Map"],[195,27,213,27],[195,28,213,28],[195,29,213,29],[196,2,214,0],[197,0,215,0],[198,0,216,0],[199,0,217,0],[200,0,218,0],[201,2,219,0],[202,2,220,0],[202,6,220,6,"_components"],[202,17,220,17],[202,20,220,20],[202,24,220,24,"Map"],[202,27,220,27],[202,28,220,28],[202,29,220,29],[203,2,221,0],[204,0,222,0],[205,0,223,0],[206,0,224,0],[207,0,225,0],[208,2,226,0],[208,11,226,9,"_addComponent"],[208,24,226,22,"_addComponent"],[208,25,226,23,"app"],[208,28,226,26],[208,30,226,28,"component"],[208,39,226,37],[208,41,226,39],[209,4,227,4],[209,8,227,8],[210,6,228,8,"app"],[210,9,228,11],[210,10,228,12,"container"],[210,19,228,21],[210,20,228,22,"addComponent"],[210,32,228,34],[210,33,228,35,"component"],[210,42,228,44],[210,43,228,45],[211,4,229,4],[211,5,229,5],[211,6,230,4],[211,13,230,11,"e"],[211,14,230,12],[211,16,230,14],[212,6,231,8,"logger"],[212,12,231,14],[212,13,231,15,"debug"],[212,18,231,20],[212,19,231,21],[212,32,231,34,"component"],[212,41,231,43],[212,42,231,44,"name"],[212,46,231,48],[212,86,231,88,"app"],[212,89,231,91],[212,90,231,92,"name"],[212,94,231,96],[212,96,231,98],[212,98,231,100,"e"],[212,99,231,101],[212,100,231,102],[213,4,232,4],[214,2,233,0],[215,2,234,0],[216,0,235,0],[217,0,236,0],[218,0,237,0],[219,2,238,0],[219,11,238,9,"_addOrOverwriteComponent"],[219,35,238,33,"_addOrOverwriteComponent"],[219,36,238,34,"app"],[219,39,238,37],[219,41,238,39,"component"],[219,50,238,48],[219,52,238,50],[220,4,239,4,"app"],[220,7,239,7],[220,8,239,8,"container"],[220,17,239,17],[220,18,239,18,"addOrOverwriteComponent"],[220,41,239,41],[220,42,239,42,"component"],[220,51,239,51],[220,52,239,52],[221,2,240,0],[222,2,241,0],[223,0,242,0],[224,0,243,0],[225,0,244,0],[226,0,245,0],[227,0,246,0],[228,0,247,0],[229,2,248,0],[229,11,248,9,"_registerComponent"],[229,29,248,27,"_registerComponent"],[229,30,248,28,"component"],[229,39,248,37],[229,41,248,39],[230,4,249,4],[230,8,249,10,"componentName"],[230,21,249,23],[230,24,249,26,"component"],[230,33,249,35],[230,34,249,36,"name"],[230,38,249,40],[231,4,250,4],[231,8,250,8,"_components"],[231,19,250,19],[231,20,250,20,"has"],[231,23,250,23],[231,24,250,24,"componentName"],[231,37,250,37],[231,38,250,38],[231,40,250,40],[232,6,251,8,"logger"],[232,12,251,14],[232,13,251,15,"debug"],[232,18,251,20],[232,19,251,21],[232,73,251,75,"componentName"],[232,86,251,88],[232,89,251,91],[232,90,251,92],[233,6,252,8],[233,13,252,15],[233,18,252,20],[234,4,253,4],[235,4,254,4,"_components"],[235,15,254,15],[235,16,254,16,"set"],[235,19,254,19],[235,20,254,20,"componentName"],[235,33,254,33],[235,35,254,35,"component"],[235,44,254,44],[235,45,254,45],[236,4,255,4],[237,4,256,4],[237,9,256,9],[237,13,256,15,"app"],[237,16,256,18],[237,20,256,22,"_apps"],[237,25,256,27],[237,26,256,28,"values"],[237,32,256,34],[237,33,256,35],[237,34,256,36],[237,36,256,38],[238,6,257,8,"_addComponent"],[238,19,257,21],[238,20,257,22,"app"],[238,23,257,25],[238,25,257,27,"component"],[238,34,257,36],[238,35,257,37],[239,4,258,4],[240,4,259,4],[240,9,259,9],[240,13,259,15,"serverApp"],[240,22,259,24],[240,26,259,28,"_serverApps"],[240,37,259,39],[240,38,259,40,"values"],[240,44,259,46],[240,45,259,47],[240,46,259,48],[240,48,259,50],[241,6,260,8,"_addComponent"],[241,19,260,21],[241,20,260,22,"serverApp"],[241,29,260,31],[241,31,260,33,"component"],[241,40,260,42],[241,41,260,43],[242,4,261,4],[243,4,262,4],[243,11,262,11],[243,15,262,15],[244,2,263,0],[245,2,264,0],[246,0,265,0],[247,0,266,0],[248,0,267,0],[249,0,268,0],[250,0,269,0],[251,0,270,0],[252,0,271,0],[253,0,272,0],[254,2,273,0],[254,11,273,9,"_getProvider"],[254,23,273,21,"_getProvider"],[254,24,273,22,"app"],[254,27,273,25],[254,29,273,27,"name"],[254,33,273,31],[254,35,273,33],[255,4,274,4],[255,8,274,10,"heartbeatController"],[255,27,274,29],[255,30,274,32,"app"],[255,33,274,35],[255,34,274,36,"container"],[255,43,274,45],[255,44,275,9,"getProvider"],[255,55,275,20],[255,56,275,21],[255,67,275,32],[255,68,275,33],[255,69,276,9,"getImmediate"],[255,81,276,21],[255,82,276,22],[256,6,276,24,"optional"],[256,14,276,32],[256,16,276,34],[257,4,276,39],[257,5,276,40],[257,6,276,41],[258,4,277,4],[258,8,277,8,"heartbeatController"],[258,27,277,27],[258,29,277,29],[259,6,278,8],[259,11,278,13,"heartbeatController"],[259,30,278,32],[259,31,278,33,"triggerHeartbeat"],[259,47,278,49],[259,48,278,50],[259,49,278,51],[260,4,279,4],[261,4,280,4],[261,11,280,11,"app"],[261,14,280,14],[261,15,280,15,"container"],[261,24,280,24],[261,25,280,25,"getProvider"],[261,36,280,36],[261,37,280,37,"name"],[261,41,280,41],[261,42,280,42],[262,2,281,0],[263,2,282,0],[264,0,283,0],[265,0,284,0],[266,0,285,0],[267,0,286,0],[268,0,287,0],[269,0,288,0],[270,0,289,0],[271,2,290,0],[271,11,290,9,"_removeServiceInstance"],[271,33,290,31,"_removeServiceInstance"],[271,34,290,32,"app"],[271,37,290,35],[271,39,290,37,"name"],[271,43,290,41],[271,45,290,84],[272,4,290,84],[272,8,290,43,"instanceIdentifier"],[272,26,290,61],[272,29,290,61,"arguments"],[272,38,290,61],[272,39,290,61,"length"],[272,45,290,61],[272,53,290,61,"arguments"],[272,62,290,61],[272,70,290,61,"undefined"],[272,79,290,61],[272,82,290,61,"arguments"],[272,91,290,61],[272,97,290,64,"DEFAULT_ENTRY_NAME"],[272,115,290,82],[273,4,291,4,"_getProvider"],[273,16,291,16],[273,17,291,17,"app"],[273,20,291,20],[273,22,291,22,"name"],[273,26,291,26],[273,27,291,27],[273,28,291,28,"clearInstance"],[273,41,291,41],[273,42,291,42,"instanceIdentifier"],[273,60,291,60],[273,61,291,61],[274,2,292,0],[275,2,293,0],[276,0,294,0],[277,0,295,0],[278,0,296,0],[279,0,297,0],[280,0,298,0],[281,0,299,0],[282,0,300,0],[283,2,301,0],[283,11,301,9,"_isFirebaseApp"],[283,25,301,23,"_isFirebaseApp"],[283,26,301,24,"obj"],[283,29,301,27],[283,31,301,29],[284,4,302,4],[284,11,302,11,"obj"],[284,14,302,14],[284,15,302,15,"options"],[284,22,302,22],[284,27,302,27,"undefined"],[284,36,302,36],[285,2,303,0],[286,2,304,0],[287,0,305,0],[288,0,306,0],[289,0,307,0],[290,0,308,0],[291,0,309,0],[292,0,310,0],[293,0,311,0],[294,2,312,0],[294,11,312,9,"_isFirebaseServerAppSettings"],[294,39,312,37,"_isFirebaseServerAppSettings"],[294,40,312,38,"obj"],[294,43,312,41],[294,45,312,43],[295,4,313,4],[295,8,313,8,"_isFirebaseApp"],[295,22,313,22],[295,23,313,23,"obj"],[295,26,313,26],[295,27,313,27],[295,29,313,29],[296,6,314,8],[296,13,314,15],[296,18,314,20],[297,4,315,4],[298,4,316,4],[298,11,316,12],[298,24,316,25],[298,28,316,29,"obj"],[298,31,316,32],[298,35,317,8],[298,50,317,23],[298,54,317,27,"obj"],[298,57,317,30],[298,61,318,8],[298,77,318,24],[298,81,318,28,"obj"],[298,84,318,31],[298,88,319,8],[298,120,319,40],[298,124,319,44,"obj"],[298,127,319,47],[299,2,320,0],[300,2,321,0],[301,0,322,0],[302,0,323,0],[303,0,324,0],[304,0,325,0],[305,0,326,0],[306,0,327,0],[307,0,328,0],[308,2,329,0],[308,11,329,9,"_isFirebaseServerApp"],[308,31,329,29,"_isFirebaseServerApp"],[308,32,329,30,"obj"],[308,35,329,33],[308,37,329,35],[309,4,330,4],[309,8,330,8,"obj"],[309,11,330,11],[309,16,330,16],[309,20,330,20],[309,24,330,24,"obj"],[309,27,330,27],[309,32,330,32,"undefined"],[309,41,330,41],[309,43,330,43],[310,6,331,8],[310,13,331,15],[310,18,331,20],[311,4,332,4],[312,4,333,4],[312,11,333,11,"obj"],[312,14,333,14],[312,15,333,15,"settings"],[312,23,333,23],[312,28,333,28,"undefined"],[312,37,333,37],[313,2,334,0],[314,2,335,0],[315,0,336,0],[316,0,337,0],[317,0,338,0],[318,0,339,0],[319,2,340,0],[319,11,340,9,"_clearComponents"],[319,27,340,25,"_clearComponents"],[319,28,340,25],[319,30,340,28],[320,4,341,4,"_components"],[320,15,341,15],[320,16,341,16,"clear"],[320,21,341,21],[320,22,341,22],[320,23,341,23],[321,2,342,0],[323,2,344,0],[324,0,345,0],[325,0,346,0],[326,0,347,0],[327,0,348,0],[328,0,349,0],[329,0,350,0],[330,0,351,0],[331,0,352,0],[332,0,353,0],[333,0,354,0],[334,0,355,0],[335,0,356,0],[336,0,357,0],[337,0,358,0],[338,0,359,0],[339,2,360,0],[339,6,360,6,"ERRORS"],[339,12,360,12],[339,15,360,15],[340,4,361,4],[340,5,361,5],[340,13,361,13],[340,14,361,14],[340,38,361,38],[340,88,361,88],[340,91,362,8],[340,119,362,36],[341,4,363,4],[341,5,363,5],[341,19,363,19],[341,20,363,20],[341,50,363,50],[341,82,363,82],[342,4,364,4],[342,5,364,5],[342,20,364,20],[342,21,364,21],[342,52,364,52],[342,133,364,133],[343,4,365,4],[343,5,365,5],[343,18,365,18],[343,19,365,19],[343,48,365,48],[343,97,365,97],[344,4,366,4],[344,5,366,5],[344,25,366,25],[344,26,366,26],[344,62,366,62],[344,100,366,100],[345,4,367,4],[345,5,367,5],[345,17,367,17],[345,18,367,18],[345,46,367,46],[345,119,367,119],[346,4,368,4],[346,5,368,5],[346,27,368,27],[346,28,368,28],[346,66,368,66],[346,120,368,120],[346,123,369,8],[346,147,369,32],[347,4,370,4],[347,5,370,5],[347,27,370,27],[347,28,370,28],[347,66,370,66],[347,121,370,121],[348,4,371,4],[348,5,371,5],[348,15,371,15],[348,16,371,16],[348,42,371,42],[348,121,371,121],[349,4,372,4],[349,5,372,5],[349,14,372,14],[349,15,372,15],[349,40,372,40],[349,124,372,124],[350,4,373,4],[350,5,373,5],[350,14,373,14],[350,15,373,15],[350,42,373,42],[350,124,373,124],[351,4,374,4],[351,5,374,5],[351,17,374,17],[351,18,374,18],[351,46,374,46],[351,131,374,131],[352,4,375,4],[352,5,375,5],[352,42,375,42],[352,43,375,43],[352,96,375,96],[352,201,375,201],[353,4,376,4],[353,5,376,5],[353,37,376,37],[353,38,376,38],[353,86,376,86],[354,2,377,0],[354,3,377,1],[355,2,378,0],[355,6,378,6,"ERROR_FACTORY"],[355,19,378,19],[355,22,378,22],[355,26,378,26,"util"],[355,30,378,30],[355,31,378,31,"ErrorFactory"],[355,43,378,43],[355,44,378,44],[355,49,378,49],[355,51,378,51],[355,61,378,61],[355,63,378,63,"ERRORS"],[355,69,378,69],[355,70,378,70],[357,2,380,0],[358,0,381,0],[359,0,382,0],[360,0,383,0],[361,0,384,0],[362,0,385,0],[363,0,386,0],[364,0,387,0],[365,0,388,0],[366,0,389,0],[367,0,390,0],[368,0,391,0],[369,0,392,0],[370,0,393,0],[371,0,394,0],[372,0,395,0],[373,2,380,0],[373,6,396,6,"FirebaseAppImpl"],[373,21,396,21],[374,4,397,4],[374,13,397,4,"FirebaseAppImpl"],[374,29,397,16,"options"],[374,36,397,23],[374,38,397,25,"config"],[374,44,397,31],[374,46,397,33,"container"],[374,55,397,42],[374,57,397,44],[375,6,397,44,"_classCallCheck"],[375,21,397,44],[375,28,397,44,"FirebaseAppImpl"],[375,43,397,44],[376,6,398,8],[376,10,398,12],[376,11,398,13,"_isDeleted"],[376,21,398,23],[376,24,398,26],[376,29,398,31],[377,6,399,8],[377,10,399,12],[377,11,399,13,"_options"],[377,19,399,21],[377,22,399,24],[378,8,399,26],[378,11,399,29,"options"],[379,6,399,37],[379,7,399,38],[380,6,400,8],[380,10,400,12],[380,11,400,13,"_config"],[380,18,400,20],[380,21,400,23],[381,8,400,25],[381,11,400,28,"config"],[382,6,400,35],[382,7,400,36],[383,6,401,8],[383,10,401,12],[383,11,401,13,"_name"],[383,16,401,18],[383,19,401,21,"config"],[383,25,401,27],[383,26,401,28,"name"],[383,30,401,32],[384,6,402,8],[384,10,402,12],[384,11,402,13,"_automaticDataCollectionEnabled"],[384,42,402,44],[384,45,403,12,"config"],[384,51,403,18],[384,52,403,19,"automaticDataCollectionEnabled"],[384,82,403,49],[385,6,404,8],[385,10,404,12],[385,11,404,13,"_container"],[385,21,404,23],[385,24,404,26,"container"],[385,33,404,35],[386,6,405,8],[386,10,405,12],[386,11,405,13,"container"],[386,20,405,22],[386,21,405,23,"addComponent"],[386,33,405,35],[386,34,405,36],[386,38,405,40,"component"],[386,47,405,49],[386,48,405,50,"Component"],[386,57,405,59],[386,58,405,60],[386,63,405,65],[386,65,405,67],[386,71,405,73],[386,75,405,77],[386,77,405,79],[386,85,405,87],[386,86,405,88],[386,112,405,114],[386,113,405,115],[386,114,405,116],[387,4,406,4],[388,4,406,5],[388,11,406,5,"_createClass"],[388,23,406,5],[388,24,406,5,"FirebaseAppImpl"],[388,39,406,5],[389,6,406,5,"key"],[389,9,406,5],[390,6,406,5,"get"],[390,9,406,5],[390,11,407,4],[390,20,407,4,"get"],[390,21,407,4],[390,23,407,41],[391,8,408,8],[391,12,408,12],[391,13,408,13,"checkDestroyed"],[391,27,408,27],[391,28,408,28],[391,29,408,29],[392,8,409,8],[392,15,409,15],[392,19,409,19],[392,20,409,20,"_automaticDataCollectionEnabled"],[392,51,409,51],[393,6,410,4],[393,7,410,5],[394,6,410,5,"set"],[394,9,410,5],[394,11,411,4],[394,20,411,4,"set"],[394,21,411,39,"val"],[394,24,411,42],[394,26,411,44],[395,8,412,8],[395,12,412,12],[395,13,412,13,"checkDestroyed"],[395,27,412,27],[395,28,412,28],[395,29,412,29],[396,8,413,8],[396,12,413,12],[396,13,413,13,"_automaticDataCollectionEnabled"],[396,44,413,44],[396,47,413,47,"val"],[396,50,413,50],[397,6,414,4],[398,4,414,5],[399,6,414,5,"key"],[399,9,414,5],[400,6,414,5,"get"],[400,9,414,5],[400,11,415,4],[400,20,415,4,"get"],[400,21,415,4],[400,23,415,15],[401,8,416,8],[401,12,416,12],[401,13,416,13,"checkDestroyed"],[401,27,416,27],[401,28,416,28],[401,29,416,29],[402,8,417,8],[402,15,417,15],[402,19,417,19],[402,20,417,20,"_name"],[402,25,417,25],[403,6,418,4],[404,4,418,5],[405,6,418,5,"key"],[405,9,418,5],[406,6,418,5,"get"],[406,9,418,5],[406,11,419,4],[406,20,419,4,"get"],[406,21,419,4],[406,23,419,18],[407,8,420,8],[407,12,420,12],[407,13,420,13,"checkDestroyed"],[407,27,420,27],[407,28,420,28],[407,29,420,29],[408,8,421,8],[408,15,421,15],[408,19,421,19],[408,20,421,20,"_options"],[408,28,421,28],[409,6,422,4],[410,4,422,5],[411,6,422,5,"key"],[411,9,422,5],[412,6,422,5,"get"],[412,9,422,5],[412,11,423,4],[412,20,423,4,"get"],[412,21,423,4],[412,23,423,17],[413,8,424,8],[413,12,424,12],[413,13,424,13,"checkDestroyed"],[413,27,424,27],[413,28,424,28],[413,29,424,29],[414,8,425,8],[414,15,425,15],[414,19,425,19],[414,20,425,20,"_config"],[414,27,425,27],[415,6,426,4],[416,4,426,5],[417,6,426,5,"key"],[417,9,426,5],[418,6,426,5,"get"],[418,9,426,5],[418,11,427,4],[418,20,427,4,"get"],[418,21,427,4],[418,23,427,20],[419,8,428,8],[419,15,428,15],[419,19,428,19],[419,20,428,20,"_container"],[419,30,428,30],[420,6,429,4],[421,4,429,5],[422,6,429,5,"key"],[422,9,429,5],[423,6,429,5,"get"],[423,9,429,5],[423,11,430,4],[423,20,430,4,"get"],[423,21,430,4],[423,23,430,20],[424,8,431,8],[424,15,431,15],[424,19,431,19],[424,20,431,20,"_isDeleted"],[424,30,431,30],[425,6,432,4],[425,7,432,5],[426,6,432,5,"set"],[426,9,432,5],[426,11,433,4],[426,20,433,4,"set"],[426,21,433,18,"val"],[426,24,433,21],[426,26,433,23],[427,8,434,8],[427,12,434,12],[427,13,434,13,"_isDeleted"],[427,23,434,23],[427,26,434,26,"val"],[427,29,434,29],[428,6,435,4],[429,6,436,4],[430,0,437,0],[431,0,438,0],[432,0,439,0],[433,4,436,4],[434,6,436,4,"key"],[434,9,436,4],[435,6,436,4,"value"],[435,11,436,4],[435,13,440,4],[435,22,440,4,"checkDestroyed"],[435,36,440,18,"checkDestroyed"],[435,37,440,18],[435,39,440,21],[436,8,441,8],[436,12,441,12],[436,16,441,16],[436,17,441,17,"isDeleted"],[436,26,441,26],[436,28,441,28],[437,10,442,12],[437,16,442,18,"ERROR_FACTORY"],[437,29,442,31],[437,30,442,32,"create"],[437,36,442,38],[437,37,442,39],[437,50,442,52],[437,51,442,53],[437,79,442,81],[438,12,442,83,"appName"],[438,19,442,90],[438,21,442,92],[438,25,442,96],[438,26,442,97,"_name"],[439,10,442,103],[439,11,442,104],[439,12,442,105],[440,8,443,8],[441,6,444,4],[442,4,444,5],[443,2,444,5],[444,2,447,0],[445,0,448,0],[446,0,449,0],[447,0,450,0],[448,0,451,0],[449,0,452,0],[450,0,453,0],[451,0,454,0],[452,0,455,0],[453,0,456,0],[454,0,457,0],[455,0,458,0],[456,0,459,0],[457,0,460,0],[458,0,461,0],[459,0,462,0],[460,2,463,0],[461,2,464,0],[462,2,465,0],[463,2,466,0],[463,11,466,9,"validateTokenTTL"],[463,27,466,25,"validateTokenTTL"],[463,28,466,26,"base64Token"],[463,39,466,37],[463,41,466,39,"tokenName"],[463,50,466,48],[463,52,466,50],[464,4,467,4],[464,8,467,10,"secondPart"],[464,18,467,20],[464,21,467,23,"util"],[464,25,467,27],[464,26,467,28,"base64Decode"],[464,38,467,40],[464,39,467,41,"base64Token"],[464,50,467,52],[464,51,467,53,"split"],[464,56,467,58],[464,57,467,59],[464,60,467,62],[464,61,467,63],[464,62,467,64],[464,63,467,65],[464,64,467,66],[464,65,467,67],[465,4,468,4],[465,8,468,8,"secondPart"],[465,18,468,18],[465,23,468,23],[465,27,468,27],[465,29,468,29],[466,6,469,8,"console"],[466,13,469,15],[466,14,469,16,"error"],[466,19,469,21],[466,20,469,22],[466,41,469,43,"tokenName"],[466,50,469,52],[466,97,469,99],[466,98,469,100],[467,6,470,8],[468,4,471,4],[469,4,472,4],[469,8,472,10,"expClaim"],[469,16,472,18],[469,19,472,21,"JSON"],[469,23,472,25],[469,24,472,26,"parse"],[469,29,472,31],[469,30,472,32,"secondPart"],[469,40,472,42],[469,41,472,43],[469,42,472,44,"exp"],[469,45,472,47],[470,4,473,4],[470,8,473,8,"expClaim"],[470,16,473,16],[470,21,473,21,"undefined"],[470,30,473,30],[470,32,473,32],[471,6,474,8,"console"],[471,13,474,15],[471,14,474,16,"error"],[471,19,474,21],[471,20,474,22],[471,41,474,43,"tokenName"],[471,50,474,52],[471,101,474,103],[471,102,474,104],[472,6,475,8],[473,4,476,4],[474,4,477,4],[474,8,477,10,"exp"],[474,11,477,13],[474,14,477,16,"JSON"],[474,18,477,20],[474,19,477,21,"parse"],[474,24,477,26],[474,25,477,27,"secondPart"],[474,35,477,37],[474,36,477,38],[474,37,477,39,"exp"],[474,40,477,42],[474,43,477,45],[474,47,477,49],[475,4,478,4],[475,8,478,10,"now"],[475,11,478,13],[475,14,478,16],[475,18,478,20,"Date"],[475,22,478,24],[475,23,478,25],[475,24,478,26],[475,25,478,27,"getTime"],[475,32,478,34],[475,33,478,35],[475,34,478,36],[476,4,479,4],[476,8,479,10,"diff"],[476,12,479,14],[476,15,479,17,"exp"],[476,18,479,20],[476,21,479,23,"now"],[476,24,479,26],[477,4,480,4],[477,8,480,8,"diff"],[477,12,480,12],[477,16,480,16],[477,17,480,17],[477,19,480,19],[478,6,481,8,"console"],[478,13,481,15],[478,14,481,16,"error"],[478,19,481,21],[478,20,481,22],[478,41,481,43,"tokenName"],[478,50,481,52],[478,87,481,89],[478,88,481,90],[479,4,482,4],[480,2,483,0],[481,2,483,1],[481,6,484,6,"FirebaseServerAppImpl"],[481,27,484,27],[481,53,484,27,"_FirebaseAppImpl"],[481,69,484,27],[482,4,485,4],[482,13,485,4,"FirebaseServerAppImpl"],[482,35,485,16,"options"],[482,42,485,23],[482,44,485,25,"serverConfig"],[482,56,485,37],[482,58,485,39,"name"],[482,62,485,43],[482,64,485,45,"container"],[482,73,485,54],[482,75,485,56],[483,6,485,56],[483,10,485,56,"_this"],[483,15,485,56],[484,6,485,56,"_classCallCheck"],[484,21,485,56],[484,28,485,56,"FirebaseServerAppImpl"],[484,49,485,56],[485,6,486,8],[486,6,487,8],[486,10,487,14,"automaticDataCollectionEnabled"],[486,40,487,44],[486,43,487,47,"serverConfig"],[486,55,487,59],[486,56,487,60,"automaticDataCollectionEnabled"],[486,86,487,90],[486,91,487,95,"undefined"],[486,100,487,104],[486,103,488,14,"serverConfig"],[486,115,488,26],[486,116,488,27,"automaticDataCollectionEnabled"],[486,146,488,57],[486,149,489,14],[486,153,489,18],[487,6,490,8],[488,6,491,8],[488,10,491,14,"config"],[488,16,491,20],[488,19,491,23],[489,8,492,12,"name"],[489,12,492,16],[490,8,493,12,"automaticDataCollectionEnabled"],[491,6,494,8],[491,7,494,9],[492,6,495,8],[492,10,495,12,"options"],[492,17,495,19],[492,18,495,20,"apiKey"],[492,24,495,26],[492,29,495,31,"undefined"],[492,38,495,40],[492,40,495,42],[493,8,496,12],[494,8,497,12,"_this"],[494,13,497,12],[494,16,497,12,"_callSuper"],[494,26,497,12],[494,33,497,12,"FirebaseServerAppImpl"],[494,54,497,12],[494,57,497,18,"options"],[494,64,497,25],[494,66,497,27,"config"],[494,72,497,33],[494,74,497,35,"container"],[494,83,497,44],[495,6,498,8],[495,7,498,9],[495,13,499,13],[496,8,500,12],[496,12,500,18,"appImpl"],[496,19,500,25],[496,22,500,28,"options"],[496,29,500,35],[497,8,501,12,"_this"],[497,13,501,12],[497,16,501,12,"_callSuper"],[497,26,501,12],[497,33,501,12,"FirebaseServerAppImpl"],[497,54,501,12],[497,57,501,18,"appImpl"],[497,64,501,25],[497,65,501,26,"options"],[497,72,501,33],[497,74,501,35,"config"],[497,80,501,41],[497,82,501,43,"container"],[497,91,501,52],[498,6,502,8],[499,6,503,8],[500,6,504,8,"_this"],[500,11,504,8],[500,12,504,13,"_serverConfig"],[500,25,504,26],[500,28,504,29],[501,8,505,12,"automaticDataCollectionEnabled"],[501,38,505,42],[502,8,506,12],[502,11,506,15,"serverConfig"],[503,6,507,8],[503,7,507,9],[504,6,508,8],[505,6,509,8],[505,10,509,12,"_this"],[505,15,509,12],[505,16,509,17,"_serverConfig"],[505,29,509,30],[505,30,509,31,"authIdToken"],[505,41,509,42],[505,43,509,44],[506,8,510,12,"validateTokenTTL"],[506,24,510,28],[506,25,510,29,"_this"],[506,30,510,29],[506,31,510,34,"_serverConfig"],[506,44,510,47],[506,45,510,48,"authIdToken"],[506,56,510,59],[506,58,510,61],[506,71,510,74],[506,72,510,75],[507,6,511,8],[508,6,512,8],[509,6,513,8],[509,10,513,12,"_this"],[509,15,513,12],[509,16,513,17,"_serverConfig"],[509,29,513,30],[509,30,513,31,"appCheckToken"],[509,43,513,44],[509,45,513,46],[510,8,514,12,"validateTokenTTL"],[510,24,514,28],[510,25,514,29,"_this"],[510,30,514,29],[510,31,514,34,"_serverConfig"],[510,44,514,47],[510,45,514,48,"appCheckToken"],[510,58,514,61],[510,60,514,63],[510,75,514,78],[510,76,514,79],[511,6,515,8],[512,6,516,8,"_this"],[512,11,516,8],[512,12,516,13,"_finalizationRegistry"],[512,33,516,34],[512,36,516,37],[512,40,516,41],[513,6,517,8],[513,10,517,12],[513,17,517,19,"FinalizationRegistry"],[513,37,517,39],[513,42,517,44],[513,53,517,55],[513,55,517,57],[514,8,518,12,"_this"],[514,13,518,12],[514,14,518,17,"_finalizationRegistry"],[514,35,518,38],[514,38,518,41],[514,42,518,45,"FinalizationRegistry"],[514,62,518,65],[514,63,518,66],[514,69,518,72],[515,10,519,16,"_this"],[515,15,519,16],[515,16,519,21,"automaticCleanup"],[515,32,519,37],[515,33,519,38],[515,34,519,39],[516,8,520,12],[516,9,520,13],[516,10,520,14],[517,6,521,8],[518,6,522,8,"_this"],[518,11,522,8],[518,12,522,13,"_refCount"],[518,21,522,22],[518,24,522,25],[518,25,522,26],[519,6,523,8,"_this"],[519,11,523,8],[519,12,523,13,"incRefCount"],[519,23,523,24],[519,24,523,25,"_this"],[519,29,523,25],[519,30,523,30,"_serverConfig"],[519,43,523,43],[519,44,523,44,"releaseOnDeref"],[519,58,523,58],[519,59,523,59],[520,6,524,8],[521,6,525,8],[522,6,526,8,"_this"],[522,11,526,8],[522,12,526,13,"_serverConfig"],[522,25,526,26],[522,26,526,27,"releaseOnDeref"],[522,40,526,41],[522,43,526,44,"undefined"],[522,52,526,53],[523,6,527,8,"serverConfig"],[523,18,527,20],[523,19,527,21,"releaseOnDeref"],[523,33,527,35],[523,36,527,38,"undefined"],[523,45,527,47],[524,6,528,8,"registerVersion"],[524,21,528,23],[524,22,528,24,"name$q"],[524,28,528,30],[524,30,528,32,"version$1"],[524,39,528,41],[524,41,528,43],[524,52,528,54],[524,53,528,55],[525,6,528,56],[525,13,528,56,"_assertThisInitialized"],[525,35,528,56],[525,36,528,56,"_this"],[525,41,528,56],[526,4,529,4],[527,4,529,5,"_inherits"],[527,13,529,5],[527,14,529,5,"FirebaseServerAppImpl"],[527,35,529,5],[527,37,529,5,"_FirebaseAppImpl"],[527,53,529,5],[528,4,529,5],[528,11,529,5,"_createClass"],[528,23,529,5],[528,24,529,5,"FirebaseServerAppImpl"],[528,45,529,5],[529,6,529,5,"key"],[529,9,529,5],[530,6,529,5,"value"],[530,11,529,5],[530,13,530,4],[530,22,530,4,"toJSON"],[530,28,530,10,"toJSON"],[530,29,530,10],[530,31,530,13],[531,8,531,8],[531,15,531,15,"undefined"],[531,24,531,24],[532,6,532,4],[533,4,532,5],[534,6,532,5,"key"],[534,9,532,5],[535,6,532,5,"get"],[535,9,532,5],[535,11,533,4],[535,20,533,4,"get"],[535,21,533,4],[535,23,533,19],[536,8,534,8],[536,15,534,15],[536,19,534,19],[536,20,534,20,"_refCount"],[536,29,534,29],[537,6,535,4],[538,6,536,4],[539,6,537,4],[540,4,537,4],[541,6,537,4,"key"],[541,9,537,4],[542,6,537,4,"value"],[542,11,537,4],[542,13,538,4],[542,22,538,4,"incRefCount"],[542,33,538,15,"incRefCount"],[542,34,538,16,"obj"],[542,37,538,19],[542,39,538,21],[543,8,539,8],[543,12,539,12],[543,16,539,16],[543,17,539,17,"isDeleted"],[543,26,539,26],[543,28,539,28],[544,10,540,12],[545,8,541,8],[546,8,542,8],[546,12,542,12],[546,13,542,13,"_refCount"],[546,22,542,22],[546,24,542,24],[547,8,543,8],[547,12,543,12,"obj"],[547,15,543,15],[547,20,543,20,"undefined"],[547,29,543,29],[547,33,543,33],[547,37,543,37],[547,38,543,38,"_finalizationRegistry"],[547,59,543,59],[547,64,543,64],[547,68,543,68],[547,70,543,70],[548,10,544,12],[548,14,544,16],[548,15,544,17,"_finalizationRegistry"],[548,36,544,38],[548,37,544,39,"register"],[548,45,544,47],[548,46,544,48,"obj"],[548,49,544,51],[548,51,544,53],[548,55,544,57],[548,56,544,58],[549,8,545,8],[550,6,546,4],[551,6,547,4],[552,4,547,4],[553,6,547,4,"key"],[553,9,547,4],[554,6,547,4,"value"],[554,11,547,4],[554,13,548,4],[554,22,548,4,"decRefCount"],[554,33,548,15,"decRefCount"],[554,34,548,15],[554,36,548,18],[555,8,549,8],[555,12,549,12],[555,16,549,16],[555,17,549,17,"isDeleted"],[555,26,549,26],[555,28,549,28],[556,10,550,12],[556,17,550,19],[556,18,550,20],[557,8,551,8],[558,8,552,8],[558,15,552,15],[558,17,552,17],[558,21,552,21],[558,22,552,22,"_refCount"],[558,31,552,31],[559,6,553,4],[560,6,554,4],[561,6,555,4],[562,6,556,4],[563,4,556,4],[564,6,556,4,"key"],[564,9,556,4],[565,6,556,4,"value"],[565,11,556,4],[565,13,557,4],[565,22,557,4,"automaticCleanup"],[565,38,557,20,"automaticCleanup"],[565,39,557,20],[565,41,557,23],[566,8,558,8],[566,13,558,13,"deleteApp"],[566,22,558,22],[566,23,558,23],[566,27,558,27],[566,28,558,28],[567,6,559,4],[568,4,559,5],[569,6,559,5,"key"],[569,9,559,5],[570,6,559,5,"get"],[570,9,559,5],[570,11,560,4],[570,20,560,4,"get"],[570,21,560,4],[570,23,560,19],[571,8,561,8],[571,12,561,12],[571,13,561,13,"checkDestroyed"],[571,27,561,27],[571,28,561,28],[571,29,561,29],[572,8,562,8],[572,15,562,15],[572,19,562,19],[572,20,562,20,"_serverConfig"],[572,33,562,33],[573,6,563,4],[574,6,564,4],[575,0,565,0],[576,0,566,0],[577,0,567,0],[578,4,564,4],[579,6,564,4,"key"],[579,9,564,4],[580,6,564,4,"value"],[580,11,564,4],[580,13,568,4],[580,22,568,4,"checkDestroyed"],[580,36,568,18,"checkDestroyed"],[580,37,568,18],[580,39,568,21],[581,8,569,8],[581,12,569,12],[581,16,569,16],[581,17,569,17,"isDeleted"],[581,26,569,26],[581,28,569,28],[582,10,570,12],[582,16,570,18,"ERROR_FACTORY"],[582,29,570,31],[582,30,570,32,"create"],[582,36,570,38],[582,37,570,39],[582,57,570,59],[582,58,570,60],[582,91,570,93],[582,92,570,94],[583,8,571,8],[584,6,572,4],[585,4,572,5],[586,2,572,5],[586,4,484,36,"FirebaseAppImpl"],[586,19,484,51],[587,2,575,0],[588,0,576,0],[589,0,577,0],[590,0,578,0],[591,0,579,0],[592,0,580,0],[593,0,581,0],[594,0,582,0],[595,0,583,0],[596,0,584,0],[597,0,585,0],[598,0,586,0],[599,0,587,0],[600,0,588,0],[601,0,589,0],[602,0,590,0],[603,2,591,0],[604,0,592,0],[605,0,593,0],[606,0,594,0],[607,0,595,0],[608,2,596,0],[608,6,596,6,"SDK_VERSION"],[608,17,596,17],[608,20,596,20,"version"],[608,27,596,27],[609,2,597,0],[609,11,597,9,"initializeApp"],[609,24,597,22,"initializeApp"],[609,25,597,23,"_options"],[609,33,597,31],[609,35,597,49],[610,4,597,49],[610,8,597,33,"rawConfig"],[610,17,597,42],[610,20,597,42,"arguments"],[610,29,597,42],[610,30,597,42,"length"],[610,36,597,42],[610,44,597,42,"arguments"],[610,53,597,42],[610,61,597,42,"undefined"],[610,70,597,42],[610,73,597,42,"arguments"],[610,82,597,42],[610,88,597,45],[610,89,597,46],[610,90,597,47],[611,4,598,4],[611,8,598,8,"options"],[611,15,598,15],[611,18,598,18,"_options"],[611,26,598,26],[612,4,599,4],[612,8,599,8],[612,15,599,15,"rawConfig"],[612,24,599,24],[612,29,599,29],[612,37,599,37],[612,39,599,39],[613,6,600,8],[613,10,600,14,"name"],[613,15,600,18],[613,18,600,21,"rawConfig"],[613,27,600,30],[614,6,601,8,"rawConfig"],[614,15,601,17],[614,18,601,20],[615,8,601,22,"name"],[615,12,601,26],[615,14,601,22,"name"],[616,6,601,27],[616,7,601,28],[617,4,602,4],[618,4,603,4],[618,8,603,10,"config"],[618,14,603,16],[618,17,603,19],[619,6,604,8,"name"],[619,10,604,12],[619,12,604,14,"DEFAULT_ENTRY_NAME"],[619,30,604,32],[620,6,605,8,"automaticDataCollectionEnabled"],[620,36,605,38],[620,38,605,40],[620,42,605,44],[621,6,606,8],[621,9,606,11,"rawConfig"],[622,4,607,4],[622,5,607,5],[623,4,608,4],[623,8,608,10,"name"],[623,12,608,14],[623,15,608,17,"config"],[623,21,608,23],[623,22,608,24,"name"],[623,26,608,28],[624,4,609,4],[624,8,609,8],[624,15,609,15,"name"],[624,19,609,19],[624,24,609,24],[624,32,609,32],[624,36,609,36],[624,37,609,37,"name"],[624,41,609,41],[624,43,609,43],[625,6,610,8],[625,12,610,14,"ERROR_FACTORY"],[625,25,610,27],[625,26,610,28,"create"],[625,32,610,34],[625,33,610,35],[625,47,610,49],[625,48,610,50],[625,77,610,79],[626,8,611,12,"appName"],[626,15,611,19],[626,17,611,21,"String"],[626,23,611,27],[626,24,611,28,"name"],[626,28,611,32],[627,6,612,8],[627,7,612,9],[627,8,612,10],[628,4,613,4],[629,4,614,4,"options"],[629,11,614,11],[629,16,614,16,"options"],[629,23,614,23],[629,26,614,26,"util"],[629,30,614,30],[629,31,614,31,"getDefaultAppConfig"],[629,50,614,50],[629,51,614,51],[629,52,614,52],[629,53,614,53],[630,4,615,4],[630,8,615,8],[630,9,615,9,"options"],[630,16,615,16],[630,18,615,18],[631,6,616,8],[631,12,616,14,"ERROR_FACTORY"],[631,25,616,27],[631,26,616,28,"create"],[631,32,616,34],[631,33,616,35],[631,45,616,47],[631,46,616,48],[631,71,616,73],[631,72,616,74],[632,4,617,4],[633,4,618,4],[633,8,618,10,"existingApp"],[633,19,618,21],[633,22,618,24,"_apps"],[633,27,618,29],[633,28,618,30,"get"],[633,31,618,33],[633,32,618,34,"name"],[633,36,618,38],[633,37,618,39],[634,4,619,4],[634,8,619,8,"existingApp"],[634,19,619,19],[634,21,619,21],[635,6,620,8],[636,6,621,8],[636,10,621,12,"util"],[636,14,621,16],[636,15,621,17,"deepEqual"],[636,24,621,26],[636,25,621,27,"options"],[636,32,621,34],[636,34,621,36,"existingApp"],[636,45,621,47],[636,46,621,48,"options"],[636,53,621,55],[636,54,621,56],[636,58,622,12,"util"],[636,62,622,16],[636,63,622,17,"deepEqual"],[636,72,622,26],[636,73,622,27,"config"],[636,79,622,33],[636,81,622,35,"existingApp"],[636,92,622,46],[636,93,622,47,"config"],[636,99,622,53],[636,100,622,54],[636,102,622,56],[637,8,623,12],[637,15,623,19,"existingApp"],[637,26,623,30],[638,6,624,8],[638,7,624,9],[638,13,625,13],[639,8,626,12],[639,14,626,18,"ERROR_FACTORY"],[639,27,626,31],[639,28,626,32,"create"],[639,34,626,38],[639,35,626,39],[639,50,626,54],[639,51,626,55],[639,81,626,85],[640,10,626,87,"appName"],[640,17,626,94],[640,19,626,96,"name"],[641,8,626,101],[641,9,626,102],[641,10,626,103],[642,6,627,8],[643,4,628,4],[644,4,629,4],[644,8,629,10,"container"],[644,17,629,19],[644,20,629,22],[644,24,629,26,"component"],[644,33,629,35],[644,34,629,36,"ComponentContainer"],[644,52,629,54],[644,53,629,55,"name"],[644,57,629,59],[644,58,629,60],[645,4,630,4],[645,9,630,9],[645,13,630,15,"component"],[645,23,630,24],[645,27,630,28,"_components"],[645,38,630,39],[645,39,630,40,"values"],[645,45,630,46],[645,46,630,47],[645,47,630,48],[645,49,630,50],[646,6,631,8,"container"],[646,15,631,17],[646,16,631,18,"addComponent"],[646,28,631,30],[646,29,631,31,"component"],[646,39,631,40],[646,40,631,41],[647,4,632,4],[648,4,633,4],[648,8,633,10,"newApp"],[648,14,633,16],[648,17,633,19],[648,21,633,23,"FirebaseAppImpl"],[648,36,633,38],[648,37,633,39,"options"],[648,44,633,46],[648,46,633,48,"config"],[648,52,633,54],[648,54,633,56,"container"],[648,63,633,65],[648,64,633,66],[649,4,634,4,"_apps"],[649,9,634,9],[649,10,634,10,"set"],[649,13,634,13],[649,14,634,14,"name"],[649,18,634,18],[649,20,634,20,"newApp"],[649,26,634,26],[649,27,634,27],[650,4,635,4],[650,11,635,11,"newApp"],[650,17,635,17],[651,2,636,0],[652,2,637,0],[652,11,637,9,"initializeServerApp"],[652,30,637,28,"initializeServerApp"],[652,31,637,29,"_options"],[652,39,637,37],[652,41,637,62],[653,4,637,62],[653,8,637,39,"_serverAppConfig"],[653,24,637,55],[653,27,637,55,"arguments"],[653,36,637,55],[653,37,637,55,"length"],[653,43,637,55],[653,51,637,55,"arguments"],[653,60,637,55],[653,68,637,55,"undefined"],[653,77,637,55],[653,80,637,55,"arguments"],[653,89,637,55],[653,95,637,58],[653,96,637,59],[653,97,637,60],[654,4,638,4],[654,8,638,8,"util"],[654,12,638,12],[654,13,638,13,"isBrowser"],[654,22,638,22],[654,23,638,23],[654,24,638,24],[654,28,638,28],[654,29,638,29,"util"],[654,33,638,33],[654,34,638,34,"isWebWorker"],[654,45,638,45],[654,46,638,46],[654,47,638,47],[654,49,638,49],[655,6,639,8],[656,6,640,8],[656,12,640,14,"ERROR_FACTORY"],[656,25,640,27],[656,26,640,28,"create"],[656,32,640,34],[656,33,640,35],[656,65,640,67],[656,66,640,68],[656,111,640,113],[656,112,640,114],[657,4,641,4],[658,4,642,4],[658,8,642,8,"firebaseOptions"],[658,23,642,23],[659,4,643,4],[659,8,643,8,"serverAppSettings"],[659,25,643,25],[659,28,643,28,"_serverAppConfig"],[659,44,643,44],[659,48,643,48],[659,49,643,49],[659,50,643,50],[660,4,644,4],[660,8,644,8,"_options"],[660,16,644,16],[660,18,644,18],[661,6,645,8],[661,10,645,12,"_isFirebaseApp"],[661,24,645,26],[661,25,645,27,"_options"],[661,33,645,35],[661,34,645,36],[661,36,645,38],[662,8,646,12,"firebaseOptions"],[662,23,646,27],[662,26,646,30,"_options"],[662,34,646,38],[662,35,646,39,"options"],[662,42,646,46],[663,6,647,8],[663,7,647,9],[663,13,648,13],[663,17,648,17,"_isFirebaseServerAppSettings"],[663,45,648,45],[663,46,648,46,"_options"],[663,54,648,54],[663,55,648,55],[663,57,648,57],[664,8,649,12,"serverAppSettings"],[664,25,649,29],[664,28,649,32,"_options"],[664,36,649,40],[665,6,650,8],[665,7,650,9],[665,13,651,13],[666,8,652,12,"firebaseOptions"],[666,23,652,27],[666,26,652,30,"_options"],[666,34,652,38],[667,6,653,8],[668,4,654,4],[669,4,655,4],[669,8,655,8,"serverAppSettings"],[669,25,655,25],[669,26,655,26,"automaticDataCollectionEnabled"],[669,56,655,56],[669,61,655,61,"undefined"],[669,70,655,70],[669,72,655,72],[670,6,656,8,"serverAppSettings"],[670,23,656,25],[670,24,656,26,"automaticDataCollectionEnabled"],[670,54,656,56],[670,57,656,59],[670,61,656,63],[671,4,657,4],[672,4,658,4,"firebaseOptions"],[672,19,658,19],[672,24,658,24,"firebaseOptions"],[672,39,658,39],[672,42,658,42,"util"],[672,46,658,46],[672,47,658,47,"getDefaultAppConfig"],[672,66,658,66],[672,67,658,67],[672,68,658,68],[672,69,658,69],[673,4,659,4],[673,8,659,8],[673,9,659,9,"firebaseOptions"],[673,24,659,24],[673,26,659,26],[674,6,660,8],[674,12,660,14,"ERROR_FACTORY"],[674,25,660,27],[674,26,660,28,"create"],[674,32,660,34],[674,33,660,35],[674,45,660,47],[674,46,660,48],[674,71,660,73],[674,72,660,74],[675,4,661,4],[676,4,662,4],[677,4,663,4],[677,8,663,10,"nameObj"],[677,15,663,17],[677,18,663,20],[678,6,664,8],[678,9,664,11,"serverAppSettings"],[678,26,664,28],[679,6,665,8],[679,9,665,11,"firebaseOptions"],[680,4,666,4],[680,5,666,5],[681,4,667,4],[682,4,668,4],[683,4,669,4],[683,8,669,8,"nameObj"],[683,15,669,15],[683,16,669,16,"releaseOnDeref"],[683,30,669,30],[683,35,669,35,"undefined"],[683,44,669,44],[683,46,669,46],[684,6,670,8],[684,13,670,15,"nameObj"],[684,20,670,22],[684,21,670,23,"releaseOnDeref"],[684,35,670,37],[685,4,671,4],[686,4,672,4],[686,8,672,10,"hashCode"],[686,16,672,18],[686,19,672,22,"s"],[686,20,672,23],[686,24,672,28],[687,6,673,8],[687,13,673,15],[687,14,673,16],[687,17,673,19,"s"],[687,18,673,20],[687,19,673,21],[687,20,673,22,"reduce"],[687,26,673,28],[687,27,673,29],[687,28,673,30,"hash"],[687,32,673,34],[687,34,673,36,"c"],[687,35,673,37],[687,40,673,43,"Math"],[687,44,673,47],[687,45,673,48,"imul"],[687,49,673,52],[687,50,673,53],[687,52,673,55],[687,54,673,57,"hash"],[687,58,673,61],[687,59,673,62],[687,62,673,65,"c"],[687,63,673,66],[687,64,673,67,"charCodeAt"],[687,74,673,77],[687,75,673,78],[687,76,673,79],[687,77,673,80],[687,80,673,84],[687,81,673,85],[687,83,673,87],[687,84,673,88],[687,85,673,89],[688,4,674,4],[688,5,674,5],[689,4,675,4],[689,8,675,8,"serverAppSettings"],[689,25,675,25],[689,26,675,26,"releaseOnDeref"],[689,40,675,40],[689,45,675,45,"undefined"],[689,54,675,54],[689,56,675,56],[690,6,676,8],[690,10,676,12],[690,17,676,19,"FinalizationRegistry"],[690,37,676,39],[690,42,676,44],[690,53,676,55],[690,55,676,57],[691,8,677,12],[691,14,677,18,"ERROR_FACTORY"],[691,27,677,31],[691,28,677,32,"create"],[691,34,677,38],[691,35,677,39],[691,72,677,76],[691,73,677,77],[691,125,677,129],[691,126,677,130],[691,127,677,131],[691,128,677,132],[692,6,678,8],[693,4,679,4],[694,4,680,4],[694,8,680,10,"nameString"],[694,18,680,20],[694,21,680,23],[694,23,680,25],[694,26,680,28,"hashCode"],[694,34,680,36],[694,35,680,37,"JSON"],[694,39,680,41],[694,40,680,42,"stringify"],[694,49,680,51],[694,50,680,52,"nameObj"],[694,57,680,59],[694,58,680,60],[694,59,680,61],[695,4,681,4],[695,8,681,10,"existingApp"],[695,19,681,21],[695,22,681,24,"_serverApps"],[695,33,681,35],[695,34,681,36,"get"],[695,37,681,39],[695,38,681,40,"nameString"],[695,48,681,50],[695,49,681,51],[696,4,682,4],[696,8,682,8,"existingApp"],[696,19,682,19],[696,21,682,21],[697,6,683,8,"existingApp"],[697,17,683,19],[697,18,683,20,"incRefCount"],[697,29,683,31],[697,30,683,32,"serverAppSettings"],[697,47,683,49],[697,48,683,50,"releaseOnDeref"],[697,62,683,64],[697,63,683,65],[698,6,684,8],[698,13,684,15,"existingApp"],[698,24,684,26],[699,4,685,4],[700,4,686,4],[700,8,686,10,"container"],[700,17,686,19],[700,20,686,22],[700,24,686,26,"component"],[700,33,686,35],[700,34,686,36,"ComponentContainer"],[700,52,686,54],[700,53,686,55,"nameString"],[700,63,686,65],[700,64,686,66],[701,4,687,4],[701,9,687,9],[701,13,687,15,"component"],[701,24,687,24],[701,28,687,28,"_components"],[701,39,687,39],[701,40,687,40,"values"],[701,46,687,46],[701,47,687,47],[701,48,687,48],[701,50,687,50],[702,6,688,8,"container"],[702,15,688,17],[702,16,688,18,"addComponent"],[702,28,688,30],[702,29,688,31,"component"],[702,40,688,40],[702,41,688,41],[703,4,689,4],[704,4,690,4],[704,8,690,10,"newApp"],[704,14,690,16],[704,17,690,19],[704,21,690,23,"FirebaseServerAppImpl"],[704,42,690,44],[704,43,690,45,"firebaseOptions"],[704,58,690,60],[704,60,690,62,"serverAppSettings"],[704,77,690,79],[704,79,690,81,"nameString"],[704,89,690,91],[704,91,690,93,"container"],[704,100,690,102],[704,101,690,103],[705,4,691,4,"_serverApps"],[705,15,691,15],[705,16,691,16,"set"],[705,19,691,19],[705,20,691,20,"nameString"],[705,30,691,30],[705,32,691,32,"newApp"],[705,38,691,38],[705,39,691,39],[706,4,692,4],[706,11,692,11,"newApp"],[706,17,692,17],[707,2,693,0],[708,2,694,0],[709,0,695,0],[710,0,696,0],[711,0,697,0],[712,0,698,0],[713,0,699,0],[714,0,700,0],[715,0,701,0],[716,0,702,0],[717,0,703,0],[718,0,704,0],[719,0,705,0],[720,0,706,0],[721,0,707,0],[722,0,708,0],[723,0,709,0],[724,0,710,0],[725,0,711,0],[726,0,712,0],[727,0,713,0],[728,0,714,0],[729,0,715,0],[730,0,716,0],[731,0,717,0],[732,0,718,0],[733,0,719,0],[734,0,720,0],[735,0,721,0],[736,0,722,0],[737,2,723,0],[737,11,723,9,"getApp"],[737,17,723,15,"getApp"],[737,18,723,15],[737,20,723,43],[738,4,723,43],[738,8,723,16,"name"],[738,12,723,20],[738,15,723,20,"arguments"],[738,24,723,20],[738,25,723,20,"length"],[738,31,723,20],[738,39,723,20,"arguments"],[738,48,723,20],[738,56,723,20,"undefined"],[738,65,723,20],[738,68,723,20,"arguments"],[738,77,723,20],[738,83,723,23,"DEFAULT_ENTRY_NAME"],[738,101,723,41],[739,4,724,4],[739,8,724,10,"app"],[739,11,724,13],[739,14,724,16,"_apps"],[739,19,724,21],[739,20,724,22,"get"],[739,23,724,25],[739,24,724,26,"name"],[739,28,724,30],[739,29,724,31],[740,4,725,4],[740,8,725,8],[740,9,725,9,"app"],[740,12,725,12],[740,16,725,16,"name"],[740,20,725,20],[740,25,725,25,"DEFAULT_ENTRY_NAME"],[740,43,725,43],[740,47,725,47,"util"],[740,51,725,51],[740,52,725,52,"getDefaultAppConfig"],[740,71,725,71],[740,72,725,72],[740,73,725,73],[740,75,725,75],[741,6,726,8],[741,13,726,15,"initializeApp"],[741,26,726,28],[741,27,726,29],[741,28,726,30],[742,4,727,4],[743,4,728,4],[743,8,728,8],[743,9,728,9,"app"],[743,12,728,12],[743,14,728,14],[744,6,729,8],[744,12,729,14,"ERROR_FACTORY"],[744,25,729,27],[744,26,729,28,"create"],[744,32,729,34],[744,33,729,35],[744,41,729,43],[744,42,729,44],[744,65,729,67],[745,8,729,69,"appName"],[745,15,729,76],[745,17,729,78,"name"],[746,6,729,83],[746,7,729,84],[746,8,729,85],[747,4,730,4],[748,4,731,4],[748,11,731,11,"app"],[748,14,731,14],[749,2,732,0],[750,2,733,0],[751,0,734,0],[752,0,735,0],[753,0,736,0],[754,2,737,0],[754,11,737,9,"getApps"],[754,18,737,16,"getApps"],[754,19,737,16],[754,21,737,19],[755,4,738,4],[755,11,738,11,"Array"],[755,16,738,16],[755,17,738,17,"from"],[755,21,738,21],[755,22,738,22,"_apps"],[755,27,738,27],[755,28,738,28,"values"],[755,34,738,34],[755,35,738,35],[755,36,738,36],[755,37,738,37],[756,2,739,0],[757,2,740,0],[758,0,741,0],[759,0,742,0],[760,0,743,0],[761,0,744,0],[762,0,745,0],[763,0,746,0],[764,0,747,0],[765,0,748,0],[766,0,749,0],[767,0,750,0],[768,0,751,0],[769,0,752,0],[770,0,753,0],[771,0,754,0],[772,0,755,0],[773,0,756,0],[774,2,740,0],[774,11,757,15,"deleteApp"],[774,20,757,24,"deleteApp"],[774,21,757,24,"_x"],[774,23,757,24],[775,4,757,24],[775,11,757,24,"_deleteApp"],[775,21,757,24],[775,22,757,24,"apply"],[775,27,757,24],[775,34,757,24,"arguments"],[775,43,757,24],[776,2,757,24],[777,2,778,0],[778,0,779,0],[779,0,780,0],[780,0,781,0],[781,0,782,0],[782,0,783,0],[783,0,784,0],[784,0,785,0],[785,2,778,0],[785,11,778,0,"_deleteApp"],[785,22,778,0],[786,4,778,0,"_deleteApp"],[786,14,778,0],[786,17,778,0,"_asyncToGenerator"],[786,34,778,0],[786,35,757,0],[786,46,757,25,"app"],[786,49,757,28],[786,51,757,30],[787,6,758,4],[787,10,758,8,"cleanupProviders"],[787,26,758,24],[787,29,758,27],[787,34,758,32],[788,6,759,4],[788,10,759,10,"name"],[788,14,759,14],[788,17,759,17,"app"],[788,20,759,20],[788,21,759,21,"name"],[788,25,759,25],[789,6,760,4],[789,10,760,8,"_apps"],[789,15,760,13],[789,16,760,14,"has"],[789,19,760,17],[789,20,760,18,"name"],[789,24,760,22],[789,25,760,23],[789,27,760,25],[790,8,761,8,"cleanupProviders"],[790,24,761,24],[790,27,761,27],[790,31,761,31],[791,8,762,8,"_apps"],[791,13,762,13],[791,14,762,14,"delete"],[791,20,762,20],[791,21,762,21,"name"],[791,25,762,25],[791,26,762,26],[792,6,763,4],[792,7,763,5],[792,13,764,9],[792,17,764,13,"_serverApps"],[792,28,764,24],[792,29,764,25,"has"],[792,32,764,28],[792,33,764,29,"name"],[792,37,764,33],[792,38,764,34],[792,40,764,36],[793,8,765,8],[793,12,765,14,"firebaseServerApp"],[793,29,765,31],[793,32,765,34,"app"],[793,35,765,37],[794,8,766,8],[794,12,766,12,"firebaseServerApp"],[794,29,766,29],[794,30,766,30,"decRefCount"],[794,41,766,41],[794,42,766,42],[794,43,766,43],[794,47,766,47],[794,48,766,48],[794,50,766,50],[795,10,767,12,"_serverApps"],[795,21,767,23],[795,22,767,24,"delete"],[795,28,767,30],[795,29,767,31,"name"],[795,33,767,35],[795,34,767,36],[796,10,768,12,"cleanupProviders"],[796,26,768,28],[796,29,768,31],[796,33,768,35],[797,8,769,8],[798,6,770,4],[799,6,771,4],[799,10,771,8,"cleanupProviders"],[799,26,771,24],[799,28,771,26],[800,8,772,8],[800,14,772,14,"Promise"],[800,21,772,21],[800,22,772,22,"all"],[800,25,772,25],[800,26,772,26,"app"],[800,29,772,29],[800,30,772,30,"container"],[800,39,772,39],[800,40,773,13,"getProviders"],[800,52,773,25],[800,53,773,26],[800,54,773,27],[800,55,774,13,"map"],[800,58,774,16],[800,59,774,17,"provider"],[800,67,774,25],[800,71,774,29,"provider"],[800,79,774,37],[800,80,774,38,"delete"],[800,86,774,44],[800,87,774,45],[800,88,774,46],[800,89,774,47],[800,90,774,48],[801,8,775,8,"app"],[801,11,775,11],[801,12,775,12,"isDeleted"],[801,21,775,21],[801,24,775,24],[801,28,775,28],[802,6,776,4],[803,4,777,0],[803,5,777,1],[804,4,777,1],[804,11,777,1,"_deleteApp"],[804,21,777,1],[804,22,777,1,"apply"],[804,27,777,1],[804,34,777,1,"arguments"],[804,43,777,1],[805,2,777,1],[806,2,786,0],[806,11,786,9,"registerVersion"],[806,26,786,24,"registerVersion"],[806,27,786,25,"libraryKeyOrName"],[806,43,786,41],[806,45,786,43,"version"],[806,52,786,50],[806,54,786,52,"variant"],[806,61,786,59],[806,63,786,61],[807,4,787,4],[808,4,788,4],[809,4,789,4],[809,8,789,8,"library"],[809,15,789,15],[809,18,789,18,"PLATFORM_LOG_STRING"],[809,37,789,37],[809,38,789,38,"libraryKeyOrName"],[809,54,789,54],[809,55,789,55],[809,59,789,59,"libraryKeyOrName"],[809,75,789,75],[810,4,790,4],[810,8,790,8,"variant"],[810,15,790,15],[810,17,790,17],[811,6,791,8,"library"],[811,13,791,15],[811,17,791,19],[811,21,791,23,"variant"],[811,28,791,30],[811,30,791,32],[812,4,792,4],[813,4,793,4],[813,8,793,10,"libraryMismatch"],[813,23,793,25],[813,26,793,28,"library"],[813,33,793,35],[813,34,793,36,"match"],[813,39,793,41],[813,40,793,42],[813,47,793,49],[813,48,793,50],[814,4,794,4],[814,8,794,10,"versionMismatch"],[814,23,794,25],[814,26,794,28,"version"],[814,33,794,35],[814,34,794,36,"match"],[814,39,794,41],[814,40,794,42],[814,47,794,49],[814,48,794,50],[815,4,795,4],[815,8,795,8,"libraryMismatch"],[815,23,795,23],[815,27,795,27,"versionMismatch"],[815,42,795,42],[815,44,795,44],[816,6,796,8],[816,10,796,14,"warning"],[816,17,796,21],[816,20,796,24],[816,21,797,12],[816,52,797,43,"library"],[816,59,797,50],[816,78,797,69,"version"],[816,85,797,76],[816,89,797,80],[816,90,798,9],[817,6,799,8],[817,10,799,12,"libraryMismatch"],[817,25,799,27],[817,27,799,29],[818,8,800,12,"warning"],[818,15,800,19],[818,16,800,20,"push"],[818,20,800,24],[818,21,800,25],[818,38,800,42,"library"],[818,45,800,49],[818,96,800,100],[818,97,800,101],[819,6,801,8],[820,6,802,8],[820,10,802,12,"libraryMismatch"],[820,25,802,27],[820,29,802,31,"versionMismatch"],[820,44,802,46],[820,46,802,48],[821,8,803,12,"warning"],[821,15,803,19],[821,16,803,20,"push"],[821,20,803,24],[821,21,803,25],[821,26,803,30],[821,27,803,31],[822,6,804,8],[823,6,805,8],[823,10,805,12,"versionMismatch"],[823,25,805,27],[823,27,805,29],[824,8,806,12,"warning"],[824,15,806,19],[824,16,806,20,"push"],[824,20,806,24],[824,21,806,25],[824,38,806,42,"version"],[824,45,806,49],[824,96,806,100],[824,97,806,101],[825,6,807,8],[826,6,808,8,"logger"],[826,12,808,14],[826,13,808,15,"warn"],[826,17,808,19],[826,18,808,20,"warning"],[826,25,808,27],[826,26,808,28,"join"],[826,30,808,32],[826,31,808,33],[826,34,808,36],[826,35,808,37],[826,36,808,38],[827,6,809,8],[828,4,810,4],[829,4,811,4,"_registerComponent"],[829,22,811,22],[829,23,811,23],[829,27,811,27,"component"],[829,36,811,36],[829,37,811,37,"Component"],[829,46,811,46],[829,47,811,47],[829,50,811,50,"library"],[829,57,811,57],[829,67,811,67],[829,69,811,69],[829,76,811,76],[830,6,811,78,"library"],[830,13,811,85],[831,6,811,87,"version"],[832,4,811,95],[832,5,811,96],[832,6,811,97],[832,8,811,99],[832,17,811,108],[832,18,811,109],[832,45,811,136],[832,46,811,137],[832,47,811,138],[833,2,812,0],[834,2,813,0],[835,0,814,0],[836,0,815,0],[837,0,816,0],[838,0,817,0],[839,0,818,0],[840,0,819,0],[841,2,820,0],[841,11,820,9,"onLog"],[841,16,820,14,"onLog"],[841,17,820,15,"logCallback"],[841,28,820,26],[841,30,820,28,"options"],[841,37,820,35],[841,39,820,37],[842,4,821,4],[842,8,821,8,"logCallback"],[842,19,821,19],[842,24,821,24],[842,28,821,28],[842,32,821,32],[842,39,821,39,"logCallback"],[842,50,821,50],[842,55,821,55],[842,65,821,65],[842,67,821,67],[843,6,822,8],[843,12,822,14,"ERROR_FACTORY"],[843,25,822,27],[843,26,822,28,"create"],[843,32,822,34],[843,33,822,35],[843,55,822,57],[843,56,822,58],[843,91,822,93],[843,92,822,94],[844,4,823,4],[845,4,824,4,"logger$1"],[845,12,824,12],[845,13,824,13,"setUserLogHandler"],[845,30,824,30],[845,31,824,31,"logCallback"],[845,42,824,42],[845,44,824,44,"options"],[845,51,824,51],[845,52,824,52],[846,2,825,0],[847,2,826,0],[848,0,827,0],[849,0,828,0],[850,0,829,0],[851,0,830,0],[852,0,831,0],[853,0,832,0],[854,0,833,0],[855,0,834,0],[856,2,835,0],[856,11,835,9,"setLogLevel"],[856,22,835,20,"setLogLevel"],[856,23,835,21,"logLevel"],[856,31,835,29],[856,33,835,31],[857,4,836,4,"logger$1"],[857,12,836,12],[857,13,836,13,"setLogLevel"],[857,24,836,24],[857,25,836,25,"logLevel"],[857,33,836,33],[857,34,836,34],[858,2,837,0],[860,2,839,0],[861,0,840,0],[862,0,841,0],[863,0,842,0],[864,0,843,0],[865,0,844,0],[866,0,845,0],[867,0,846,0],[868,0,847,0],[869,0,848,0],[870,0,849,0],[871,0,850,0],[872,0,851,0],[873,0,852,0],[874,0,853,0],[875,0,854,0],[876,2,855,0],[876,6,855,6,"DB_NAME"],[876,13,855,13],[876,16,855,16],[876,45,855,45],[877,2,856,0],[877,6,856,6,"DB_VERSION"],[877,16,856,16],[877,19,856,19],[877,20,856,20],[878,2,857,0],[878,6,857,6,"STORE_NAME"],[878,16,857,16],[878,19,857,19],[878,45,857,45],[879,2,858,0],[879,6,858,4,"dbPromise"],[879,15,858,13],[879,18,858,16],[879,22,858,20],[880,2,859,0],[880,11,859,9,"getDbPromise"],[880,23,859,21,"getDbPromise"],[880,24,859,21],[880,26,859,24],[881,4,860,4],[881,8,860,8],[881,9,860,9,"dbPromise"],[881,18,860,18],[881,20,860,20],[882,6,861,8,"dbPromise"],[882,15,861,17],[882,18,861,20,"idb"],[882,21,861,23],[882,22,861,24,"openDB"],[882,28,861,30],[882,29,861,31,"DB_NAME"],[882,36,861,38],[882,38,861,40,"DB_VERSION"],[882,48,861,50],[882,50,861,52],[883,8,862,12,"upgrade"],[883,15,862,19],[883,17,862,21,"upgrade"],[883,18,862,22,"db"],[883,20,862,24],[883,22,862,26,"oldVersion"],[883,32,862,36],[883,37,862,41],[884,10,863,16],[885,10,864,16],[886,10,865,16],[887,10,866,16],[888,10,867,16],[889,10,868,16],[889,18,868,24,"oldVersion"],[889,28,868,34],[890,12,869,20],[890,17,869,25],[890,18,869,26],[891,14,870,24],[891,18,870,28],[892,16,871,28,"db"],[892,18,871,30],[892,19,871,31,"createObjectStore"],[892,36,871,48],[892,37,871,49,"STORE_NAME"],[892,47,871,59],[892,48,871,60],[893,14,872,24],[893,15,872,25],[893,16,873,24],[893,23,873,31,"e"],[893,24,873,32],[893,26,873,34],[894,16,874,28],[895,16,875,28],[896,16,876,28],[897,16,877,28,"console"],[897,23,877,35],[897,24,877,36,"warn"],[897,28,877,40],[897,29,877,41,"e"],[897,30,877,42],[897,31,877,43],[898,14,878,24],[899,10,879,16],[900,8,880,12],[901,6,881,8],[901,7,881,9],[901,8,881,10],[901,9,881,11,"catch"],[901,14,881,16],[901,15,881,17,"e"],[901,16,881,18],[901,20,881,22],[902,8,882,12],[902,14,882,18,"ERROR_FACTORY"],[902,27,882,31],[902,28,882,32,"create"],[902,34,882,38],[902,35,882,39],[902,45,882,49],[902,46,882,50],[902,71,882,75],[903,10,883,16,"originalErrorMessage"],[903,30,883,36],[903,32,883,38,"e"],[903,33,883,39],[903,34,883,40,"message"],[904,8,884,12],[904,9,884,13],[904,10,884,14],[905,6,885,8],[905,7,885,9],[905,8,885,10],[906,4,886,4],[907,4,887,4],[907,11,887,11,"dbPromise"],[907,20,887,20],[908,2,888,0],[909,2,888,1],[909,11,889,15,"readHeartbeatsFromIndexedDB"],[909,38,889,42,"readHeartbeatsFromIndexedDB"],[909,39,889,42,"_x2"],[909,42,889,42],[910,4,889,42],[910,11,889,42,"_readHeartbeatsFromIndexedDB"],[910,39,889,42],[910,40,889,42,"apply"],[910,45,889,42],[910,52,889,42,"arguments"],[910,61,889,42],[911,2,889,42],[912,2,889,42],[912,11,889,42,"_readHeartbeatsFromIndexedDB"],[912,40,889,42],[913,4,889,42,"_readHeartbeatsFromIndexedDB"],[913,32,889,42],[913,35,889,42,"_asyncToGenerator"],[913,52,889,42],[913,53,889,0],[913,64,889,43,"app"],[913,67,889,46],[913,69,889,48],[914,6,890,4],[914,10,890,8],[915,8,891,8],[915,12,891,14,"db"],[915,14,891,16],[915,23,891,25,"getDbPromise"],[915,35,891,37],[915,36,891,38],[915,37,891,39],[916,8,892,8],[916,12,892,14,"tx"],[916,14,892,16],[916,17,892,19,"db"],[916,19,892,21],[916,20,892,22,"transaction"],[916,31,892,33],[916,32,892,34,"STORE_NAME"],[916,42,892,44],[916,43,892,45],[917,8,893,8],[917,12,893,14,"result"],[917,18,893,20],[917,27,893,29,"tx"],[917,29,893,31],[917,30,893,32,"objectStore"],[917,41,893,43],[917,42,893,44,"STORE_NAME"],[917,52,893,54],[917,53,893,55],[917,54,893,56,"get"],[917,57,893,59],[917,58,893,60,"computeKey"],[917,68,893,70],[917,69,893,71,"app"],[917,72,893,74],[917,73,893,75],[917,74,893,76],[918,8,894,8],[919,8,895,8],[920,8,896,8],[920,14,896,14,"tx"],[920,16,896,16],[920,17,896,17,"done"],[920,21,896,21],[921,8,897,8],[921,15,897,15,"result"],[921,21,897,21],[922,6,898,4],[922,7,898,5],[922,8,899,4],[922,15,899,11,"e"],[922,16,899,12],[922,18,899,14],[923,8,900,8],[923,12,900,12,"e"],[923,13,900,13],[923,25,900,25,"util"],[923,29,900,29],[923,30,900,30,"FirebaseError"],[923,43,900,43],[923,45,900,45],[924,10,901,12,"logger"],[924,16,901,18],[924,17,901,19,"warn"],[924,21,901,23],[924,22,901,24,"e"],[924,23,901,25],[924,24,901,26,"message"],[924,31,901,33],[924,32,901,34],[925,8,902,8],[925,9,902,9],[925,15,903,13],[926,10,904,12],[926,14,904,18,"idbGetError"],[926,25,904,29],[926,28,904,32,"ERROR_FACTORY"],[926,41,904,45],[926,42,904,46,"create"],[926,48,904,52],[926,49,904,53],[926,58,904,62],[926,59,904,63],[926,83,904,87],[927,12,905,16,"originalErrorMessage"],[927,32,905,36],[927,34,905,38,"e"],[927,35,905,39],[927,37,905,41,"message"],[928,10,906,12],[928,11,906,13],[928,12,906,14],[929,10,907,12,"logger"],[929,16,907,18],[929,17,907,19,"warn"],[929,21,907,23],[929,22,907,24,"idbGetError"],[929,33,907,35],[929,34,907,36,"message"],[929,41,907,43],[929,42,907,44],[930,8,908,8],[931,6,909,4],[932,4,910,0],[932,5,910,1],[933,4,910,1],[933,11,910,1,"_readHeartbeatsFromIndexedDB"],[933,39,910,1],[933,40,910,1,"apply"],[933,45,910,1],[933,52,910,1,"arguments"],[933,61,910,1],[934,2,910,1],[935,2,910,1],[935,11,911,15,"writeHeartbeatsToIndexedDB"],[935,37,911,41,"writeHeartbeatsToIndexedDB"],[935,38,911,41,"_x3"],[935,41,911,41],[935,43,911,41,"_x4"],[935,46,911,41],[936,4,911,41],[936,11,911,41,"_writeHeartbeatsToIndexedDB"],[936,38,911,41],[936,39,911,41,"apply"],[936,44,911,41],[936,51,911,41,"arguments"],[936,60,911,41],[937,2,911,41],[938,2,911,41],[938,11,911,41,"_writeHeartbeatsToIndexedDB"],[938,39,911,41],[939,4,911,41,"_writeHeartbeatsToIndexedDB"],[939,31,911,41],[939,34,911,41,"_asyncToGenerator"],[939,51,911,41],[939,52,911,0],[939,63,911,42,"app"],[939,66,911,45],[939,68,911,47,"heartbeatObject"],[939,83,911,62],[939,85,911,64],[940,6,912,4],[940,10,912,8],[941,8,913,8],[941,12,913,14,"db"],[941,14,913,16],[941,23,913,25,"getDbPromise"],[941,35,913,37],[941,36,913,38],[941,37,913,39],[942,8,914,8],[942,12,914,14,"tx"],[942,14,914,16],[942,17,914,19,"db"],[942,19,914,21],[942,20,914,22,"transaction"],[942,31,914,33],[942,32,914,34,"STORE_NAME"],[942,42,914,44],[942,44,914,46],[942,55,914,57],[942,56,914,58],[943,8,915,8],[943,12,915,14,"objectStore"],[943,23,915,25],[943,26,915,28,"tx"],[943,28,915,30],[943,29,915,31,"objectStore"],[943,40,915,42],[943,41,915,43,"STORE_NAME"],[943,51,915,53],[943,52,915,54],[944,8,916,8],[944,14,916,14,"objectStore"],[944,25,916,25],[944,26,916,26,"put"],[944,29,916,29],[944,30,916,30,"heartbeatObject"],[944,45,916,45],[944,47,916,47,"computeKey"],[944,57,916,57],[944,58,916,58,"app"],[944,61,916,61],[944,62,916,62],[944,63,916,63],[945,8,917,8],[945,14,917,14,"tx"],[945,16,917,16],[945,17,917,17,"done"],[945,21,917,21],[946,6,918,4],[946,7,918,5],[946,8,919,4],[946,15,919,11,"e"],[946,16,919,12],[946,18,919,14],[947,8,920,8],[947,12,920,12,"e"],[947,13,920,13],[947,25,920,25,"util"],[947,29,920,29],[947,30,920,30,"FirebaseError"],[947,43,920,43],[947,45,920,45],[948,10,921,12,"logger"],[948,16,921,18],[948,17,921,19,"warn"],[948,21,921,23],[948,22,921,24,"e"],[948,23,921,25],[948,24,921,26,"message"],[948,31,921,33],[948,32,921,34],[949,8,922,8],[949,9,922,9],[949,15,923,13],[950,10,924,12],[950,14,924,18,"idbGetError"],[950,25,924,29],[950,28,924,32,"ERROR_FACTORY"],[950,41,924,45],[950,42,924,46,"create"],[950,48,924,52],[950,49,924,53],[950,58,924,62],[950,59,924,63],[950,85,924,89],[951,12,925,16,"originalErrorMessage"],[951,32,925,36],[951,34,925,38,"e"],[951,35,925,39],[951,37,925,41,"message"],[952,10,926,12],[952,11,926,13],[952,12,926,14],[953,10,927,12,"logger"],[953,16,927,18],[953,17,927,19,"warn"],[953,21,927,23],[953,22,927,24,"idbGetError"],[953,33,927,35],[953,34,927,36,"message"],[953,41,927,43],[953,42,927,44],[954,8,928,8],[955,6,929,4],[956,4,930,0],[956,5,930,1],[957,4,930,1],[957,11,930,1,"_writeHeartbeatsToIndexedDB"],[957,38,930,1],[957,39,930,1,"apply"],[957,44,930,1],[957,51,930,1,"arguments"],[957,60,930,1],[958,2,930,1],[959,2,931,0],[959,11,931,9,"computeKey"],[959,21,931,19,"computeKey"],[959,22,931,20,"app"],[959,25,931,23],[959,27,931,25],[960,4,932,4],[960,11,932,11],[960,14,932,14,"app"],[960,17,932,17],[960,18,932,18,"name"],[960,22,932,22],[960,26,932,26,"app"],[960,29,932,29],[960,30,932,30,"options"],[960,37,932,37],[960,38,932,38,"appId"],[960,43,932,43],[960,45,932,45],[961,2,933,0],[963,2,935,0],[964,0,936,0],[965,0,937,0],[966,0,938,0],[967,0,939,0],[968,0,940,0],[969,0,941,0],[970,0,942,0],[971,0,943,0],[972,0,944,0],[973,0,945,0],[974,0,946,0],[975,0,947,0],[976,0,948,0],[977,0,949,0],[978,0,950,0],[979,2,951,0],[979,6,951,6,"MAX_HEADER_BYTES"],[979,22,951,22],[979,25,951,25],[979,29,951,29],[980,2,952,0],[980,6,952,6,"MAX_NUM_STORED_HEARTBEATS"],[980,31,952,31],[980,34,952,34],[980,36,952,36],[981,2,952,37],[981,6,953,6,"HeartbeatServiceImpl"],[981,26,953,26],[982,4,954,4],[982,13,954,4,"HeartbeatServiceImpl"],[982,34,954,16,"container"],[982,43,954,25],[982,45,954,27],[983,6,954,27,"_classCallCheck"],[983,21,954,27],[983,28,954,27,"HeartbeatServiceImpl"],[983,48,954,27],[984,6,955,8],[984,10,955,12],[984,11,955,13,"container"],[984,20,955,22],[984,23,955,25,"container"],[984,32,955,34],[985,6,956,8],[986,0,957,0],[987,0,958,0],[988,0,959,0],[989,0,960,0],[990,0,961,0],[991,0,962,0],[992,0,963,0],[993,0,964,0],[994,6,965,8],[994,10,965,12],[994,11,965,13,"_heartbeatsCache"],[994,27,965,29],[994,30,965,32],[994,34,965,36],[995,6,966,8],[995,10,966,14,"app"],[995,13,966,17],[995,16,966,20],[995,20,966,24],[995,21,966,25,"container"],[995,30,966,34],[995,31,966,35,"getProvider"],[995,42,966,46],[995,43,966,47],[995,48,966,52],[995,49,966,53],[995,50,966,54,"getImmediate"],[995,62,966,66],[995,63,966,67],[995,64,966,68],[996,6,967,8],[996,10,967,12],[996,11,967,13,"_storage"],[996,19,967,21],[996,22,967,24],[996,26,967,28,"HeartbeatStorageImpl"],[996,46,967,48],[996,47,967,49,"app"],[996,50,967,52],[996,51,967,53],[997,6,968,8],[997,10,968,12],[997,11,968,13,"_heartbeatsCachePromise"],[997,34,968,36],[997,37,968,39],[997,41,968,43],[997,42,968,44,"_storage"],[997,50,968,52],[997,51,968,53,"read"],[997,55,968,57],[997,56,968,58],[997,57,968,59],[997,58,968,60,"then"],[997,62,968,64],[997,63,968,65,"result"],[997,69,968,71],[997,73,968,75],[998,8,969,12],[998,12,969,16],[998,13,969,17,"_heartbeatsCache"],[998,29,969,33],[998,32,969,36,"result"],[998,38,969,42],[999,8,970,12],[999,15,970,19,"result"],[999,21,970,25],[1000,6,971,8],[1000,7,971,9],[1000,8,971,10],[1001,4,972,4],[1002,4,973,4],[1003,0,974,0],[1004,0,975,0],[1005,0,976,0],[1006,0,977,0],[1007,0,978,0],[1008,0,979,0],[1009,4,973,4],[1009,11,973,4,"_createClass"],[1009,23,973,4],[1009,24,973,4,"HeartbeatServiceImpl"],[1009,44,973,4],[1010,6,973,4,"key"],[1010,9,973,4],[1011,6,973,4,"value"],[1011,11,973,4],[1012,8,973,4],[1012,12,973,4,"_triggerHeartbeat"],[1012,29,973,4],[1012,32,973,4,"_asyncToGenerator"],[1012,49,973,4],[1012,50,980,4],[1012,63,980,29],[1013,10,981,8],[1013,14,981,12],[1014,12,982,12],[1014,16,982,18,"platformLogger"],[1014,30,982,32],[1014,33,982,35],[1014,37,982,39],[1014,38,982,40,"container"],[1014,47,982,49],[1014,48,983,17,"getProvider"],[1014,59,983,28],[1014,60,983,29],[1014,77,983,46],[1014,78,983,47],[1014,79,984,17,"getImmediate"],[1014,91,984,29],[1014,92,984,30],[1014,93,984,31],[1015,12,985,12],[1016,12,986,12],[1017,12,987,12],[1017,16,987,18,"agent"],[1017,21,987,23],[1017,24,987,26,"platformLogger"],[1017,38,987,40],[1017,39,987,41,"getPlatformInfoString"],[1017,60,987,62],[1017,61,987,63],[1017,62,987,64],[1018,12,988,12],[1018,16,988,18,"date"],[1018,20,988,22],[1018,23,988,25,"getUTCDateString"],[1018,39,988,41],[1018,40,988,42],[1018,41,988,43],[1019,12,989,12],[1019,16,989,16],[1019,20,989,20],[1019,21,989,21,"_heartbeatsCache"],[1019,37,989,37],[1019,39,989,39,"heartbeats"],[1019,49,989,49],[1019,53,989,53],[1019,57,989,57],[1019,59,989,59],[1020,14,990,16],[1020,18,990,20],[1020,19,990,21,"_heartbeatsCache"],[1020,35,990,37],[1020,44,990,46],[1020,48,990,50],[1020,49,990,51,"_heartbeatsCachePromise"],[1020,72,990,74],[1021,14,991,16],[1022,14,992,16],[1022,18,992,20],[1022,22,992,24],[1022,23,992,25,"_heartbeatsCache"],[1022,39,992,41],[1022,41,992,43,"heartbeats"],[1022,51,992,53],[1022,55,992,57],[1022,59,992,61],[1022,61,992,63],[1023,16,993,20],[1024,14,994,16],[1025,12,995,12],[1026,12,996,12],[1027,12,997,12],[1028,12,998,12],[1028,16,998,16],[1028,20,998,20],[1028,21,998,21,"_heartbeatsCache"],[1028,37,998,37],[1028,38,998,38,"lastSentHeartbeatDate"],[1028,59,998,59],[1028,64,998,64,"date"],[1028,68,998,68],[1028,72,999,16],[1028,76,999,20],[1028,77,999,21,"_heartbeatsCache"],[1028,93,999,37],[1028,94,999,38,"heartbeats"],[1028,104,999,48],[1028,105,999,49,"some"],[1028,109,999,53],[1028,110,999,54,"singleDateHeartbeat"],[1028,129,999,73],[1028,133,999,77,"singleDateHeartbeat"],[1028,152,999,96],[1028,153,999,97,"date"],[1028,157,999,101],[1028,162,999,106,"date"],[1028,166,999,110],[1028,167,999,111],[1028,169,999,113],[1029,14,1000,16],[1030,12,1001,12],[1030,13,1001,13],[1030,19,1002,17],[1031,14,1003,16],[1032,14,1004,16],[1032,18,1004,20],[1032,19,1004,21,"_heartbeatsCache"],[1032,35,1004,37],[1032,36,1004,38,"heartbeats"],[1032,46,1004,48],[1032,47,1004,49,"push"],[1032,51,1004,53],[1032,52,1004,54],[1033,16,1004,56,"date"],[1033,20,1004,60],[1034,16,1004,62,"agent"],[1035,14,1004,68],[1035,15,1004,69],[1035,16,1004,70],[1036,14,1005,16],[1037,14,1006,16],[1038,14,1007,16],[1038,18,1007,20],[1038,22,1007,24],[1038,23,1007,25,"_heartbeatsCache"],[1038,39,1007,41],[1038,40,1007,42,"heartbeats"],[1038,50,1007,52],[1038,51,1007,53,"length"],[1038,57,1007,59],[1038,60,1007,62,"MAX_NUM_STORED_HEARTBEATS"],[1038,85,1007,87],[1038,87,1007,89],[1039,16,1008,20],[1039,20,1008,26,"earliestHeartbeatIdx"],[1039,40,1008,46],[1039,43,1008,49,"getEarliestHeartbeatIdx"],[1039,66,1008,72],[1039,67,1008,73],[1039,71,1008,77],[1039,72,1008,78,"_heartbeatsCache"],[1039,88,1008,94],[1039,89,1008,95,"heartbeats"],[1039,99,1008,105],[1039,100,1008,106],[1040,16,1009,20],[1040,20,1009,24],[1040,21,1009,25,"_heartbeatsCache"],[1040,37,1009,41],[1040,38,1009,42,"heartbeats"],[1040,48,1009,52],[1040,49,1009,53,"splice"],[1040,55,1009,59],[1040,56,1009,60,"earliestHeartbeatIdx"],[1040,76,1009,80],[1040,78,1009,82],[1040,79,1009,83],[1040,80,1009,84],[1041,14,1010,16],[1042,12,1011,12],[1043,12,1012,12],[1043,19,1012,19],[1043,23,1012,23],[1043,24,1012,24,"_storage"],[1043,32,1012,32],[1043,33,1012,33,"overwrite"],[1043,42,1012,42],[1043,43,1012,43],[1043,47,1012,47],[1043,48,1012,48,"_heartbeatsCache"],[1043,64,1012,64],[1043,65,1012,65],[1044,10,1013,8],[1044,11,1013,9],[1044,12,1014,8],[1044,19,1014,15,"e"],[1044,20,1014,16],[1044,22,1014,18],[1045,12,1015,12,"logger"],[1045,18,1015,18],[1045,19,1015,19,"warn"],[1045,23,1015,23],[1045,24,1015,24,"e"],[1045,25,1015,25],[1045,26,1015,26],[1046,10,1016,8],[1047,8,1017,4],[1047,9,1017,5],[1048,8,1017,5],[1048,17,980,10,"triggerHeartbeat"],[1048,33,980,26,"triggerHeartbeat"],[1048,34,980,26],[1049,10,980,26],[1049,17,980,26,"_triggerHeartbeat"],[1049,34,980,26],[1049,35,980,26,"apply"],[1049,40,980,26],[1049,47,980,26,"arguments"],[1049,56,980,26],[1050,8,980,26],[1051,8,980,26],[1051,15,980,10,"triggerHeartbeat"],[1051,31,980,26],[1052,6,980,26],[1053,6,1018,4],[1054,0,1019,0],[1055,0,1020,0],[1056,0,1021,0],[1057,0,1022,0],[1058,0,1023,0],[1059,0,1024,0],[1060,6,1018,4],[1061,4,1018,4],[1062,6,1018,4,"key"],[1062,9,1018,4],[1063,6,1018,4,"value"],[1063,11,1018,4],[1064,8,1018,4],[1064,12,1018,4,"_getHeartbeatsHeader"],[1064,32,1018,4],[1064,35,1018,4,"_asyncToGenerator"],[1064,52,1018,4],[1064,53,1025,4],[1064,66,1025,32],[1065,10,1026,8],[1065,14,1026,12],[1066,12,1027,12],[1066,16,1027,16],[1066,20,1027,20],[1066,21,1027,21,"_heartbeatsCache"],[1066,37,1027,37],[1066,42,1027,42],[1066,46,1027,46],[1066,48,1027,48],[1067,14,1028,16],[1067,20,1028,22],[1067,24,1028,26],[1067,25,1028,27,"_heartbeatsCachePromise"],[1067,48,1028,50],[1068,12,1029,12],[1069,12,1030,12],[1070,12,1031,12],[1070,16,1031,16],[1070,20,1031,20],[1070,21,1031,21,"_heartbeatsCache"],[1070,37,1031,37],[1070,39,1031,39,"heartbeats"],[1070,49,1031,49],[1070,53,1031,53],[1070,57,1031,57],[1070,61,1032,16],[1070,65,1032,20],[1070,66,1032,21,"_heartbeatsCache"],[1070,82,1032,37],[1070,83,1032,38,"heartbeats"],[1070,93,1032,48],[1070,94,1032,49,"length"],[1070,100,1032,55],[1070,105,1032,60],[1070,106,1032,61],[1070,108,1032,63],[1071,14,1033,16],[1071,21,1033,23],[1071,23,1033,25],[1072,12,1034,12],[1073,12,1035,12],[1073,16,1035,18,"date"],[1073,20,1035,22],[1073,23,1035,25,"getUTCDateString"],[1073,39,1035,41],[1073,40,1035,42],[1073,41,1035,43],[1074,12,1036,12],[1075,12,1037,12],[1075,16,1037,12,"_extractHeartbeatsFor"],[1075,37,1037,12],[1075,40,1037,56,"extractHeartbeatsForHeader"],[1075,66,1037,82],[1075,67,1037,83],[1075,71,1037,87],[1075,72,1037,88,"_heartbeatsCache"],[1075,88,1037,104],[1075,89,1037,105,"heartbeats"],[1075,99,1037,115],[1075,100,1037,116],[1076,14,1037,20,"heartbeatsToSend"],[1076,30,1037,36],[1076,33,1037,36,"_extractHeartbeatsFor"],[1076,54,1037,36],[1076,55,1037,20,"heartbeatsToSend"],[1076,71,1037,36],[1077,14,1037,38,"unsentEntries"],[1077,27,1037,51],[1077,30,1037,51,"_extractHeartbeatsFor"],[1077,51,1037,51],[1077,52,1037,38,"unsentEntries"],[1077,65,1037,51],[1078,12,1038,12],[1078,16,1038,18,"headerString"],[1078,28,1038,30],[1078,31,1038,33,"util"],[1078,35,1038,37],[1078,36,1038,38,"base64urlEncodeWithoutPadding"],[1078,65,1038,67],[1078,66,1038,68,"JSON"],[1078,70,1038,72],[1078,71,1038,73,"stringify"],[1078,80,1038,82],[1078,81,1038,83],[1079,14,1038,85,"version"],[1079,21,1038,92],[1079,23,1038,94],[1079,24,1038,95],[1080,14,1038,97,"heartbeats"],[1080,24,1038,107],[1080,26,1038,109,"heartbeatsToSend"],[1081,12,1038,126],[1081,13,1038,127],[1081,14,1038,128],[1081,15,1038,129],[1082,12,1039,12],[1083,12,1040,12],[1083,16,1040,16],[1083,17,1040,17,"_heartbeatsCache"],[1083,33,1040,33],[1083,34,1040,34,"lastSentHeartbeatDate"],[1083,55,1040,55],[1083,58,1040,58,"date"],[1083,62,1040,62],[1084,12,1041,12],[1084,16,1041,16,"unsentEntries"],[1084,29,1041,29],[1084,30,1041,30,"length"],[1084,36,1041,36],[1084,39,1041,39],[1084,40,1041,40],[1084,42,1041,42],[1085,14,1042,16],[1086,14,1043,16],[1086,18,1043,20],[1086,19,1043,21,"_heartbeatsCache"],[1086,35,1043,37],[1086,36,1043,38,"heartbeats"],[1086,46,1043,48],[1086,49,1043,51,"unsentEntries"],[1086,62,1043,64],[1087,14,1044,16],[1088,14,1045,16],[1089,14,1046,16],[1090,14,1047,16],[1090,20,1047,22],[1090,24,1047,26],[1090,25,1047,27,"_storage"],[1090,33,1047,35],[1090,34,1047,36,"overwrite"],[1090,43,1047,45],[1090,44,1047,46],[1090,48,1047,50],[1090,49,1047,51,"_heartbeatsCache"],[1090,65,1047,67],[1090,66,1047,68],[1091,12,1048,12],[1091,13,1048,13],[1091,19,1049,17],[1092,14,1050,16],[1092,18,1050,20],[1092,19,1050,21,"_heartbeatsCache"],[1092,35,1050,37],[1092,36,1050,38,"heartbeats"],[1092,46,1050,48],[1092,49,1050,51],[1092,51,1050,53],[1093,14,1051,16],[1094,14,1052,16],[1094,19,1052,21],[1094,23,1052,25],[1094,24,1052,26,"_storage"],[1094,32,1052,34],[1094,33,1052,35,"overwrite"],[1094,42,1052,44],[1094,43,1052,45],[1094,47,1052,49],[1094,48,1052,50,"_heartbeatsCache"],[1094,64,1052,66],[1094,65,1052,67],[1095,12,1053,12],[1096,12,1054,12],[1096,19,1054,19,"headerString"],[1096,31,1054,31],[1097,10,1055,8],[1097,11,1055,9],[1097,12,1056,8],[1097,19,1056,15,"e"],[1097,20,1056,16],[1097,22,1056,18],[1098,12,1057,12,"logger"],[1098,18,1057,18],[1098,19,1057,19,"warn"],[1098,23,1057,23],[1098,24,1057,24,"e"],[1098,25,1057,25],[1098,26,1057,26],[1099,12,1058,12],[1099,19,1058,19],[1099,21,1058,21],[1100,10,1059,8],[1101,8,1060,4],[1101,9,1060,5],[1102,8,1060,5],[1102,17,1025,10,"getHeartbeatsHeader"],[1102,36,1025,29,"getHeartbeatsHeader"],[1102,37,1025,29],[1103,10,1025,29],[1103,17,1025,29,"_getHeartbeatsHeader"],[1103,37,1025,29],[1103,38,1025,29,"apply"],[1103,43,1025,29],[1103,50,1025,29,"arguments"],[1103,59,1025,29],[1104,8,1025,29],[1105,8,1025,29],[1105,15,1025,10,"getHeartbeatsHeader"],[1105,34,1025,29],[1106,6,1025,29],[1107,4,1025,29],[1108,2,1025,29],[1109,2,1062,0],[1109,11,1062,9,"getUTCDateString"],[1109,27,1062,25,"getUTCDateString"],[1109,28,1062,25],[1109,30,1062,28],[1110,4,1063,4],[1110,8,1063,10,"today"],[1110,13,1063,15],[1110,16,1063,18],[1110,20,1063,22,"Date"],[1110,24,1063,26],[1110,25,1063,27],[1110,26,1063,28],[1111,4,1064,4],[1112,4,1065,4],[1112,11,1065,11,"today"],[1112,16,1065,16],[1112,17,1065,17,"toISOString"],[1112,28,1065,28],[1112,29,1065,29],[1112,30,1065,30],[1112,31,1065,31,"substring"],[1112,40,1065,40],[1112,41,1065,41],[1112,42,1065,42],[1112,44,1065,44],[1112,46,1065,46],[1112,47,1065,47],[1113,2,1066,0],[1114,2,1067,0],[1114,11,1067,9,"extractHeartbeatsForHeader"],[1114,37,1067,35,"extractHeartbeatsForHeader"],[1114,38,1067,36,"heartbeatsCache"],[1114,53,1067,51],[1114,55,1067,81],[1115,4,1067,81],[1115,8,1067,53,"maxSize"],[1115,15,1067,60],[1115,18,1067,60,"arguments"],[1115,27,1067,60],[1115,28,1067,60,"length"],[1115,34,1067,60],[1115,42,1067,60,"arguments"],[1115,51,1067,60],[1115,59,1067,60,"undefined"],[1115,68,1067,60],[1115,71,1067,60,"arguments"],[1115,80,1067,60],[1115,86,1067,63,"MAX_HEADER_BYTES"],[1115,102,1067,79],[1116,4,1068,4],[1117,4,1069,4],[1118,4,1070,4],[1118,8,1070,10,"heartbeatsToSend"],[1118,24,1070,26],[1118,27,1070,29],[1118,29,1070,31],[1119,4,1071,4],[1120,4,1072,4],[1120,8,1072,8,"unsentEntries"],[1120,21,1072,21],[1120,24,1072,24,"heartbeatsCache"],[1120,39,1072,39],[1120,40,1072,40,"slice"],[1120,45,1072,45],[1120,46,1072,46],[1120,47,1072,47],[1121,4,1072,48],[1121,8,1072,48,"_loop"],[1121,13,1072,48],[1121,25,1072,48,"_loop"],[1121,26,1072,48,"singleDateHeartbeat"],[1121,45,1072,48],[1121,47,1073,55],[1122,8,1074,8],[1123,8,1075,8],[1123,12,1075,14,"heartbeatEntry"],[1123,26,1075,28],[1123,29,1075,31,"heartbeatsToSend"],[1123,45,1075,47],[1123,46,1075,48,"find"],[1123,50,1075,52],[1123,51,1075,53,"hb"],[1123,53,1075,55],[1123,57,1075,59,"hb"],[1123,59,1075,61],[1123,60,1075,62,"agent"],[1123,65,1075,67],[1123,70,1075,72,"singleDateHeartbeat"],[1123,89,1075,91],[1123,90,1075,92,"agent"],[1123,95,1075,97],[1123,96,1075,98],[1124,8,1076,8],[1124,12,1076,12],[1124,13,1076,13,"heartbeatEntry"],[1124,27,1076,27],[1124,29,1076,29],[1125,10,1077,12],[1126,10,1078,12,"heartbeatsToSend"],[1126,26,1078,28],[1126,27,1078,29,"push"],[1126,31,1078,33],[1126,32,1078,34],[1127,12,1079,16,"agent"],[1127,17,1079,21],[1127,19,1079,23,"singleDateHeartbeat"],[1127,38,1079,42],[1127,39,1079,43,"agent"],[1127,44,1079,48],[1128,12,1080,16,"dates"],[1128,17,1080,21],[1128,19,1080,23],[1128,20,1080,24,"singleDateHeartbeat"],[1128,39,1080,43],[1128,40,1080,44,"date"],[1128,44,1080,48],[1129,10,1081,12],[1129,11,1081,13],[1129,12,1081,14],[1130,10,1082,12],[1130,14,1082,16,"countBytes"],[1130,24,1082,26],[1130,25,1082,27,"heartbeatsToSend"],[1130,41,1082,43],[1130,42,1082,44],[1130,45,1082,47,"maxSize"],[1130,52,1082,54],[1130,54,1082,56],[1131,12,1083,16],[1132,12,1084,16],[1133,12,1085,16,"heartbeatsToSend"],[1133,28,1085,32],[1133,29,1085,33,"pop"],[1133,32,1085,36],[1133,33,1085,37],[1133,34,1085,38],[1134,12,1085,39],[1135,10,1087,12],[1136,8,1088,8],[1136,9,1088,9],[1136,15,1089,13],[1137,10,1090,12,"heartbeatEntry"],[1137,24,1090,26],[1137,25,1090,27,"dates"],[1137,30,1090,32],[1137,31,1090,33,"push"],[1137,35,1090,37],[1137,36,1090,38,"singleDateHeartbeat"],[1137,55,1090,57],[1137,56,1090,58,"date"],[1137,60,1090,62],[1137,61,1090,63],[1138,10,1091,12],[1139,10,1092,12],[1140,10,1093,12],[1140,14,1093,16,"countBytes"],[1140,24,1093,26],[1140,25,1093,27,"heartbeatsToSend"],[1140,41,1093,43],[1140,42,1093,44],[1140,45,1093,47,"maxSize"],[1140,52,1093,54],[1140,54,1093,56],[1141,12,1094,16,"heartbeatEntry"],[1141,26,1094,30],[1141,27,1094,31,"dates"],[1141,32,1094,36],[1141,33,1094,37,"pop"],[1141,36,1094,40],[1141,37,1094,41],[1141,38,1094,42],[1142,12,1094,43],[1143,10,1096,12],[1144,8,1097,8],[1145,8,1098,8],[1146,8,1099,8],[1147,8,1100,8,"unsentEntries"],[1147,21,1100,21],[1147,24,1100,24,"unsentEntries"],[1147,37,1100,37],[1147,38,1100,38,"slice"],[1147,43,1100,43],[1147,44,1100,44],[1147,45,1100,45],[1147,46,1100,46],[1148,6,1101,4],[1148,7,1101,5],[1149,6,1101,5,"_ret"],[1149,10,1101,5],[1150,4,1073,4],[1150,9,1073,9],[1150,13,1073,15,"singleDateHeartbeat"],[1150,32,1073,34],[1150,36,1073,38,"heartbeatsCache"],[1150,51,1073,53],[1151,6,1073,53,"_ret"],[1151,10,1073,53],[1151,13,1073,53,"_loop"],[1151,18,1073,53],[1151,19,1073,53,"singleDateHeartbeat"],[1151,38,1073,53],[1152,6,1073,53],[1152,10,1073,53,"_ret"],[1152,14,1073,53],[1152,22,1086,16],[1153,4,1086,22],[1154,4,1102,4],[1154,11,1102,11],[1155,6,1103,8,"heartbeatsToSend"],[1155,22,1103,24],[1156,6,1104,8,"unsentEntries"],[1157,4,1105,4],[1157,5,1105,5],[1158,2,1106,0],[1159,2,1106,1],[1159,6,1107,6,"HeartbeatStorageImpl"],[1159,26,1107,26],[1160,4,1108,4],[1160,13,1108,4,"HeartbeatStorageImpl"],[1160,34,1108,16,"app"],[1160,37,1108,19],[1160,39,1108,21],[1161,6,1108,21,"_classCallCheck"],[1161,21,1108,21],[1161,28,1108,21,"HeartbeatStorageImpl"],[1161,48,1108,21],[1162,6,1109,8],[1162,10,1109,12],[1162,11,1109,13,"app"],[1162,14,1109,16],[1162,17,1109,19,"app"],[1162,20,1109,22],[1163,6,1110,8],[1163,10,1110,12],[1163,11,1110,13,"_canUseIndexedDBPromise"],[1163,34,1110,36],[1163,37,1110,39],[1163,41,1110,43],[1163,42,1110,44,"runIndexedDBEnvironmentCheck"],[1163,70,1110,72],[1163,71,1110,73],[1163,72,1110,74],[1164,4,1111,4],[1165,4,1111,5],[1165,11,1111,5,"_createClass"],[1165,23,1111,5],[1165,24,1111,5,"HeartbeatStorageImpl"],[1165,44,1111,5],[1166,6,1111,5,"key"],[1166,9,1111,5],[1167,6,1111,5,"value"],[1167,11,1111,5],[1168,8,1111,5],[1168,12,1111,5,"_runIndexedDBEnvironmentCheck"],[1168,41,1111,5],[1168,44,1111,5,"_asyncToGenerator"],[1168,61,1111,5],[1168,62,1112,4],[1168,75,1112,41],[1169,10,1113,8],[1169,14,1113,12],[1169,15,1113,13,"util"],[1169,19,1113,17],[1169,20,1113,18,"isIndexedDBAvailable"],[1169,40,1113,38],[1169,41,1113,39],[1169,42,1113,40],[1169,44,1113,42],[1170,12,1114,12],[1170,19,1114,19],[1170,24,1114,24],[1171,10,1115,8],[1171,11,1115,9],[1171,17,1116,13],[1172,12,1117,12],[1172,19,1117,19,"util"],[1172,23,1117,23],[1172,24,1117,24,"validateIndexedDBOpenable"],[1172,49,1117,49],[1172,50,1117,50],[1172,51,1117,51],[1172,52,1118,17,"then"],[1172,56,1118,21],[1172,57,1118,22],[1172,63,1118,28],[1172,67,1118,32],[1172,68,1118,33],[1172,69,1119,17,"catch"],[1172,74,1119,22],[1172,75,1119,23],[1172,81,1119,29],[1172,86,1119,34],[1172,87,1119,35],[1173,10,1120,8],[1174,8,1121,4],[1174,9,1121,5],[1175,8,1121,5],[1175,17,1112,10,"runIndexedDBEnvironmentCheck"],[1175,45,1112,38,"runIndexedDBEnvironmentCheck"],[1175,46,1112,38],[1176,10,1112,38],[1176,17,1112,38,"_runIndexedDBEnvironmentCheck"],[1176,46,1112,38],[1176,47,1112,38,"apply"],[1176,52,1112,38],[1176,59,1112,38,"arguments"],[1176,68,1112,38],[1177,8,1112,38],[1178,8,1112,38],[1178,15,1112,10,"runIndexedDBEnvironmentCheck"],[1178,43,1112,38],[1179,6,1112,38],[1180,6,1122,4],[1181,0,1123,0],[1182,0,1124,0],[1183,4,1122,4],[1184,6,1122,4,"key"],[1184,9,1122,4],[1185,6,1122,4,"value"],[1185,11,1122,4],[1186,8,1122,4],[1186,12,1122,4,"_read"],[1186,17,1122,4],[1186,20,1122,4,"_asyncToGenerator"],[1186,37,1122,4],[1186,38,1125,4],[1186,51,1125,17],[1187,10,1126,8],[1187,14,1126,14,"canUseIndexedDB"],[1187,29,1126,29],[1187,38,1126,38],[1187,42,1126,42],[1187,43,1126,43,"_canUseIndexedDBPromise"],[1187,66,1126,66],[1188,10,1127,8],[1188,14,1127,12],[1188,15,1127,13,"canUseIndexedDB"],[1188,30,1127,28],[1188,32,1127,30],[1189,12,1128,12],[1189,19,1128,19],[1190,14,1128,21,"heartbeats"],[1190,24,1128,31],[1190,26,1128,33],[1191,12,1128,36],[1191,13,1128,37],[1192,10,1129,8],[1192,11,1129,9],[1192,17,1130,13],[1193,12,1131,12],[1193,16,1131,18,"idbHeartbeatObject"],[1193,34,1131,36],[1193,43,1131,45,"readHeartbeatsFromIndexedDB"],[1193,70,1131,72],[1193,71,1131,73],[1193,75,1131,77],[1193,76,1131,78,"app"],[1193,79,1131,81],[1193,80,1131,82],[1194,12,1132,12],[1194,16,1132,16,"idbHeartbeatObject"],[1194,34,1132,34],[1194,36,1132,36,"heartbeats"],[1194,46,1132,46],[1194,48,1132,48],[1195,14,1133,16],[1195,21,1133,23,"idbHeartbeatObject"],[1195,39,1133,41],[1196,12,1134,12],[1196,13,1134,13],[1196,19,1135,17],[1197,14,1136,16],[1197,21,1136,23],[1198,16,1136,25,"heartbeats"],[1198,26,1136,35],[1198,28,1136,37],[1199,14,1136,40],[1199,15,1136,41],[1200,12,1137,12],[1201,10,1138,8],[1202,8,1139,4],[1202,9,1139,5],[1203,8,1139,5],[1203,17,1125,10,"read"],[1203,21,1125,14,"read"],[1203,22,1125,14],[1204,10,1125,14],[1204,17,1125,14,"_read"],[1204,22,1125,14],[1204,23,1125,14,"apply"],[1204,28,1125,14],[1204,35,1125,14,"arguments"],[1204,44,1125,14],[1205,8,1125,14],[1206,8,1125,14],[1206,15,1125,10,"read"],[1206,19,1125,14],[1207,6,1125,14],[1207,10,1140,4],[1208,6,1140,4],[1209,4,1140,4],[1210,6,1140,4,"key"],[1210,9,1140,4],[1211,6,1140,4,"value"],[1211,11,1140,4],[1212,8,1140,4],[1212,12,1140,4,"_overwrite"],[1212,22,1140,4],[1212,25,1140,4,"_asyncToGenerator"],[1212,42,1140,4],[1212,43,1141,4],[1212,54,1141,20,"heartbeatsObject"],[1212,70,1141,36],[1212,72,1141,38],[1213,10,1142,8],[1213,14,1142,14,"canUseIndexedDB"],[1213,29,1142,29],[1213,38,1142,38],[1213,42,1142,42],[1213,43,1142,43,"_canUseIndexedDBPromise"],[1213,66,1142,66],[1214,10,1143,8],[1214,14,1143,12],[1214,15,1143,13,"canUseIndexedDB"],[1214,30,1143,28],[1214,32,1143,30],[1215,12,1144,12],[1216,10,1145,8],[1216,11,1145,9],[1216,17,1146,13],[1217,12,1147,12],[1217,16,1147,18,"existingHeartbeatsObject"],[1217,40,1147,42],[1217,49,1147,51],[1217,53,1147,55],[1217,54,1147,56,"read"],[1217,58,1147,60],[1217,59,1147,61],[1217,60,1147,62],[1218,12,1148,12],[1218,19,1148,19,"writeHeartbeatsToIndexedDB"],[1218,45,1148,45],[1218,46,1148,46],[1218,50,1148,50],[1218,51,1148,51,"app"],[1218,54,1148,54],[1218,56,1148,56],[1219,14,1149,16,"lastSentHeartbeatDate"],[1219,35,1149,37],[1219,37,1149,39,"heartbeatsObject"],[1219,53,1149,55],[1219,54,1149,56,"lastSentHeartbeatDate"],[1219,75,1149,77],[1219,79,1150,20,"existingHeartbeatsObject"],[1219,103,1150,44],[1219,104,1150,45,"lastSentHeartbeatDate"],[1219,125,1150,66],[1220,14,1151,16,"heartbeats"],[1220,24,1151,26],[1220,26,1151,28,"heartbeatsObject"],[1220,42,1151,44],[1220,43,1151,45,"heartbeats"],[1221,12,1152,12],[1221,13,1152,13],[1221,14,1152,14],[1222,10,1153,8],[1223,8,1154,4],[1223,9,1154,5],[1224,8,1154,5],[1224,17,1141,10,"overwrite"],[1224,26,1141,19,"overwrite"],[1224,27,1141,19,"_x5"],[1224,30,1141,19],[1225,10,1141,19],[1225,17,1141,19,"_overwrite"],[1225,27,1141,19],[1225,28,1141,19,"apply"],[1225,33,1141,19],[1225,40,1141,19,"arguments"],[1225,49,1141,19],[1226,8,1141,19],[1227,8,1141,19],[1227,15,1141,10,"overwrite"],[1227,24,1141,19],[1228,6,1141,19],[1228,10,1155,4],[1229,4,1155,4],[1230,6,1155,4,"key"],[1230,9,1155,4],[1231,6,1155,4,"value"],[1231,11,1155,4],[1232,8,1155,4],[1232,12,1155,4,"_add"],[1232,16,1155,4],[1232,19,1155,4,"_asyncToGenerator"],[1232,36,1155,4],[1232,37,1156,4],[1232,48,1156,14,"heartbeatsObject"],[1232,64,1156,30],[1232,66,1156,32],[1233,10,1157,8],[1233,14,1157,14,"canUseIndexedDB"],[1233,29,1157,29],[1233,38,1157,38],[1233,42,1157,42],[1233,43,1157,43,"_canUseIndexedDBPromise"],[1233,66,1157,66],[1234,10,1158,8],[1234,14,1158,12],[1234,15,1158,13,"canUseIndexedDB"],[1234,30,1158,28],[1234,32,1158,30],[1235,12,1159,12],[1236,10,1160,8],[1236,11,1160,9],[1236,17,1161,13],[1237,12,1162,12],[1237,16,1162,18,"existingHeartbeatsObject"],[1237,40,1162,42],[1237,49,1162,51],[1237,53,1162,55],[1237,54,1162,56,"read"],[1237,58,1162,60],[1237,59,1162,61],[1237,60,1162,62],[1238,12,1163,12],[1238,19,1163,19,"writeHeartbeatsToIndexedDB"],[1238,45,1163,45],[1238,46,1163,46],[1238,50,1163,50],[1238,51,1163,51,"app"],[1238,54,1163,54],[1238,56,1163,56],[1239,14,1164,16,"lastSentHeartbeatDate"],[1239,35,1164,37],[1239,37,1164,39,"heartbeatsObject"],[1239,53,1164,55],[1239,54,1164,56,"lastSentHeartbeatDate"],[1239,75,1164,77],[1239,79,1165,20,"existingHeartbeatsObject"],[1239,103,1165,44],[1239,104,1165,45,"lastSentHeartbeatDate"],[1239,125,1165,66],[1240,14,1166,16,"heartbeats"],[1240,24,1166,26],[1240,26,1166,28],[1240,27,1167,20],[1240,30,1167,23,"existingHeartbeatsObject"],[1240,54,1167,47],[1240,55,1167,48,"heartbeats"],[1240,65,1167,58],[1240,67,1168,20],[1240,70,1168,23,"heartbeatsObject"],[1240,86,1168,39],[1240,87,1168,40,"heartbeats"],[1240,97,1168,50],[1241,12,1170,12],[1241,13,1170,13],[1241,14,1170,14],[1242,10,1171,8],[1243,8,1172,4],[1243,9,1172,5],[1244,8,1172,5],[1244,17,1156,10,"add"],[1244,20,1156,13,"add"],[1244,21,1156,13,"_x6"],[1244,24,1156,13],[1245,10,1156,13],[1245,17,1156,13,"_add"],[1245,21,1156,13],[1245,22,1156,13,"apply"],[1245,27,1156,13],[1245,34,1156,13,"arguments"],[1245,43,1156,13],[1246,8,1156,13],[1247,8,1156,13],[1247,15,1156,10,"add"],[1247,18,1156,13],[1248,6,1156,13],[1249,4,1156,13],[1250,2,1156,13],[1251,2,1174,0],[1252,0,1175,0],[1253,0,1176,0],[1254,0,1177,0],[1255,0,1178,0],[1256,2,1179,0],[1256,11,1179,9,"countBytes"],[1256,21,1179,19,"countBytes"],[1256,22,1179,20,"heartbeatsCache"],[1256,37,1179,35],[1256,39,1179,37],[1257,4,1180,4],[1258,4,1181,4],[1258,11,1181,11,"util"],[1258,15,1181,15],[1258,16,1181,16,"base64urlEncodeWithoutPadding"],[1258,45,1181,45],[1259,4,1182,4],[1260,4,1183,4,"JSON"],[1260,8,1183,8],[1260,9,1183,9,"stringify"],[1260,18,1183,18],[1260,19,1183,19],[1261,6,1183,21,"version"],[1261,13,1183,28],[1261,15,1183,30],[1261,16,1183,31],[1262,6,1183,33,"heartbeats"],[1262,16,1183,43],[1262,18,1183,45,"heartbeatsCache"],[1263,4,1183,61],[1263,5,1183,62],[1263,6,1183,63],[1263,7,1183,64],[1263,8,1183,65,"length"],[1263,14,1183,71],[1264,2,1184,0],[1265,2,1185,0],[1266,0,1186,0],[1267,0,1187,0],[1268,0,1188,0],[1269,2,1189,0],[1269,11,1189,9,"getEarliestHeartbeatIdx"],[1269,34,1189,32,"getEarliestHeartbeatIdx"],[1269,35,1189,33,"heartbeats"],[1269,45,1189,43],[1269,47,1189,45],[1270,4,1190,4],[1270,8,1190,8,"heartbeats"],[1270,18,1190,18],[1270,19,1190,19,"length"],[1270,25,1190,25],[1270,30,1190,30],[1270,31,1190,31],[1270,33,1190,33],[1271,6,1191,8],[1271,13,1191,15],[1271,14,1191,16],[1271,15,1191,17],[1272,4,1192,4],[1273,4,1193,4],[1273,8,1193,8,"earliestHeartbeatIdx"],[1273,28,1193,28],[1273,31,1193,31],[1273,32,1193,32],[1274,4,1194,4],[1274,8,1194,8,"earliestHeartbeatDate"],[1274,29,1194,29],[1274,32,1194,32,"heartbeats"],[1274,42,1194,42],[1274,43,1194,43],[1274,44,1194,44],[1274,45,1194,45],[1274,46,1194,46,"date"],[1274,50,1194,50],[1275,4,1195,4],[1275,9,1195,9],[1275,13,1195,13,"i"],[1275,14,1195,14],[1275,17,1195,17],[1275,18,1195,18],[1275,20,1195,20,"i"],[1275,21,1195,21],[1275,24,1195,24,"heartbeats"],[1275,34,1195,34],[1275,35,1195,35,"length"],[1275,41,1195,41],[1275,43,1195,43,"i"],[1275,44,1195,44],[1275,46,1195,46],[1275,48,1195,48],[1276,6,1196,8],[1276,10,1196,12,"heartbeats"],[1276,20,1196,22],[1276,21,1196,23,"i"],[1276,22,1196,24],[1276,23,1196,25],[1276,24,1196,26,"date"],[1276,28,1196,30],[1276,31,1196,33,"earliestHeartbeatDate"],[1276,52,1196,54],[1276,54,1196,56],[1277,8,1197,12,"earliestHeartbeatDate"],[1277,29,1197,33],[1277,32,1197,36,"heartbeats"],[1277,42,1197,46],[1277,43,1197,47,"i"],[1277,44,1197,48],[1277,45,1197,49],[1277,46,1197,50,"date"],[1277,50,1197,54],[1278,8,1198,12,"earliestHeartbeatIdx"],[1278,28,1198,32],[1278,31,1198,35,"i"],[1278,32,1198,36],[1279,6,1199,8],[1280,4,1200,4],[1281,4,1201,4],[1281,11,1201,11,"earliestHeartbeatIdx"],[1281,31,1201,31],[1282,2,1202,0],[1284,2,1204,0],[1285,0,1205,0],[1286,0,1206,0],[1287,0,1207,0],[1288,0,1208,0],[1289,0,1209,0],[1290,0,1210,0],[1291,0,1211,0],[1292,0,1212,0],[1293,0,1213,0],[1294,0,1214,0],[1295,0,1215,0],[1296,0,1216,0],[1297,0,1217,0],[1298,0,1218,0],[1299,0,1219,0],[1300,2,1220,0],[1300,11,1220,9,"registerCoreComponents"],[1300,33,1220,31,"registerCoreComponents"],[1300,34,1220,32,"variant"],[1300,41,1220,39],[1300,43,1220,41],[1301,4,1221,4,"_registerComponent"],[1301,22,1221,22],[1301,23,1221,23],[1301,27,1221,27,"component"],[1301,36,1221,36],[1301,37,1221,37,"Component"],[1301,46,1221,46],[1301,47,1221,47],[1301,64,1221,64],[1301,66,1221,66,"container"],[1301,75,1221,75],[1301,79,1221,79],[1301,83,1221,83,"PlatformLoggerServiceImpl"],[1301,108,1221,108],[1301,109,1221,109,"container"],[1301,118,1221,118],[1301,119,1221,119],[1301,121,1221,121],[1301,130,1221,130],[1301,131,1221,131],[1301,158,1221,158],[1301,159,1221,159],[1301,160,1221,160],[1302,4,1222,4,"_registerComponent"],[1302,22,1222,22],[1302,23,1222,23],[1302,27,1222,27,"component"],[1302,36,1222,36],[1302,37,1222,37,"Component"],[1302,46,1222,46],[1302,47,1222,47],[1302,58,1222,58],[1302,60,1222,60,"container"],[1302,69,1222,69],[1302,73,1222,73],[1302,77,1222,77,"HeartbeatServiceImpl"],[1302,97,1222,97],[1302,98,1222,98,"container"],[1302,107,1222,107],[1302,108,1222,108],[1302,110,1222,110],[1302,119,1222,119],[1302,120,1222,120],[1302,147,1222,147],[1302,148,1222,148],[1302,149,1222,149],[1303,4,1223,4],[1304,4,1224,4,"registerVersion"],[1304,19,1224,19],[1304,20,1224,20,"name$q"],[1304,26,1224,26],[1304,28,1224,28,"version$1"],[1304,37,1224,37],[1304,39,1224,39,"variant"],[1304,46,1224,46],[1304,47,1224,47],[1305,4,1225,4],[1306,4,1226,4,"registerVersion"],[1306,19,1226,19],[1306,20,1226,20,"name$q"],[1306,26,1226,26],[1306,28,1226,28,"version$1"],[1306,37,1226,37],[1306,39,1226,39],[1306,48,1226,48],[1306,49,1226,49],[1307,4,1227,4],[1308,4,1228,4,"registerVersion"],[1308,19,1228,19],[1308,20,1228,20],[1308,29,1228,29],[1308,31,1228,31],[1308,33,1228,33],[1308,34,1228,34],[1309,2,1229,0],[1311,2,1231,0],[1312,0,1232,0],[1313,0,1233,0],[1314,0,1234,0],[1315,0,1235,0],[1316,0,1236,0],[1317,2,1237,0,"registerCoreComponents"],[1317,24,1237,22],[1317,25,1237,23],[1317,31,1237,29],[1317,32,1237,30],[1318,2,1239,0,"Object"],[1318,8,1239,6],[1318,9,1239,7,"defineProperty"],[1318,23,1239,21],[1318,24,1239,22,"exports"],[1318,31,1239,29],[1318,33,1239,31],[1318,48,1239,46],[1318,50,1239,48],[1319,4,1240,2,"enumerable"],[1319,14,1240,12],[1319,16,1240,14],[1319,20,1240,18],[1320,4,1241,2,"get"],[1320,7,1241,5],[1320,9,1241,7],[1320,18,1241,7,"get"],[1320,19,1241,7],[1320,21,1241,19],[1321,6,1241,21],[1321,13,1241,28,"util"],[1321,17,1241,32],[1321,18,1241,33,"FirebaseError"],[1321,31,1241,46],[1322,4,1241,48],[1323,2,1242,0],[1323,3,1242,1],[1323,4,1242,2],[1324,2,1243,0,"exports"],[1324,9,1243,7],[1324,10,1243,8,"SDK_VERSION"],[1324,21,1243,19],[1324,24,1243,22,"SDK_VERSION"],[1324,35,1243,33],[1325,2,1244,0,"exports"],[1325,9,1244,7],[1325,10,1244,8,"_DEFAULT_ENTRY_NAME"],[1325,29,1244,27],[1325,32,1244,30,"DEFAULT_ENTRY_NAME"],[1325,50,1244,48],[1326,2,1245,0,"exports"],[1326,9,1245,7],[1326,10,1245,8,"_addComponent"],[1326,23,1245,21],[1326,26,1245,24,"_addComponent"],[1326,39,1245,37],[1327,2,1246,0,"exports"],[1327,9,1246,7],[1327,10,1246,8,"_addOrOverwriteComponent"],[1327,34,1246,32],[1327,37,1246,35,"_addOrOverwriteComponent"],[1327,61,1246,59],[1328,2,1247,0,"exports"],[1328,9,1247,7],[1328,10,1247,8,"_apps"],[1328,15,1247,13],[1328,18,1247,16,"_apps"],[1328,23,1247,21],[1329,2,1248,0,"exports"],[1329,9,1248,7],[1329,10,1248,8,"_clearComponents"],[1329,26,1248,24],[1329,29,1248,27,"_clearComponents"],[1329,45,1248,43],[1330,2,1249,0,"exports"],[1330,9,1249,7],[1330,10,1249,8,"_components"],[1330,21,1249,19],[1330,24,1249,22,"_components"],[1330,35,1249,33],[1331,2,1250,0,"exports"],[1331,9,1250,7],[1331,10,1250,8,"_getProvider"],[1331,22,1250,20],[1331,25,1250,23,"_getProvider"],[1331,37,1250,35],[1332,2,1251,0,"exports"],[1332,9,1251,7],[1332,10,1251,8,"_isFirebaseApp"],[1332,24,1251,22],[1332,27,1251,25,"_isFirebaseApp"],[1332,41,1251,39],[1333,2,1252,0,"exports"],[1333,9,1252,7],[1333,10,1252,8,"_isFirebaseServerApp"],[1333,30,1252,28],[1333,33,1252,31,"_isFirebaseServerApp"],[1333,53,1252,51],[1334,2,1253,0,"exports"],[1334,9,1253,7],[1334,10,1253,8,"_isFirebaseServerAppSettings"],[1334,38,1253,36],[1334,41,1253,39,"_isFirebaseServerAppSettings"],[1334,69,1253,67],[1335,2,1254,0,"exports"],[1335,9,1254,7],[1335,10,1254,8,"_registerComponent"],[1335,28,1254,26],[1335,31,1254,29,"_registerComponent"],[1335,49,1254,47],[1336,2,1255,0,"exports"],[1336,9,1255,7],[1336,10,1255,8,"_removeServiceInstance"],[1336,32,1255,30],[1336,35,1255,33,"_removeServiceInstance"],[1336,57,1255,55],[1337,2,1256,0,"exports"],[1337,9,1256,7],[1337,10,1256,8,"_serverApps"],[1337,21,1256,19],[1337,24,1256,22,"_serverApps"],[1337,35,1256,33],[1338,2,1257,0,"exports"],[1338,9,1257,7],[1338,10,1257,8,"deleteApp"],[1338,19,1257,17],[1338,22,1257,20,"deleteApp"],[1338,31,1257,29],[1339,2,1258,0,"exports"],[1339,9,1258,7],[1339,10,1258,8,"getApp"],[1339,16,1258,14],[1339,19,1258,17,"getApp"],[1339,25,1258,23],[1340,2,1259,0,"exports"],[1340,9,1259,7],[1340,10,1259,8,"getApps"],[1340,17,1259,15],[1340,20,1259,18,"getApps"],[1340,27,1259,25],[1341,2,1260,0,"exports"],[1341,9,1260,7],[1341,10,1260,8,"initializeApp"],[1341,23,1260,21],[1341,26,1260,24,"initializeApp"],[1341,39,1260,37],[1342,2,1261,0,"exports"],[1342,9,1261,7],[1342,10,1261,8,"initializeServerApp"],[1342,29,1261,27],[1342,32,1261,30,"initializeServerApp"],[1342,51,1261,49],[1343,2,1262,0,"exports"],[1343,9,1262,7],[1343,10,1262,8,"onLog"],[1343,15,1262,13],[1343,18,1262,16,"onLog"],[1343,23,1262,21],[1344,2,1263,0,"exports"],[1344,9,1263,7],[1344,10,1263,8,"registerVersion"],[1344,25,1263,23],[1344,28,1263,26,"registerVersion"],[1344,43,1263,41],[1345,2,1264,0,"exports"],[1345,9,1264,7],[1345,10,1264,8,"setLogLevel"],[1345,21,1264,19],[1345,24,1264,22,"setLogLevel"],[1345,35,1264,33],[1346,0,1264,34],[1346,3]],"functionMap":{"names":["<global>","PlatformLoggerServiceImpl","PlatformLoggerServiceImpl#constructor","PlatformLoggerServiceImpl#getPlatformInfoString","providers.map$argument_0","providers.map.filter$argument_0","isVersionServiceProvider","_addComponent","_addOrOverwriteComponent","_registerComponent","_getProvider","_removeServiceInstance","_isFirebaseApp","_isFirebaseServerAppSettings","_isFirebaseServerApp","_clearComponents","FirebaseAppImpl","FirebaseAppImpl#constructor","component.Component$argument_1","FirebaseAppImpl#get__automaticDataCollectionEnabled","FirebaseAppImpl#set__automaticDataCollectionEnabled","FirebaseAppImpl#get__name","FirebaseAppImpl#get__options","FirebaseAppImpl#get__config","FirebaseAppImpl#get__container","FirebaseAppImpl#get__isDeleted","FirebaseAppImpl#set__isDeleted","FirebaseAppImpl#checkDestroyed","validateTokenTTL","FirebaseServerAppImpl","FirebaseServerAppImpl#constructor","FinalizationRegistry$argument_0","FirebaseServerAppImpl#toJSON","FirebaseServerAppImpl#get__refCount","FirebaseServerAppImpl#incRefCount","FirebaseServerAppImpl#decRefCount","FirebaseServerAppImpl#automaticCleanup","FirebaseServerAppImpl#get__settings","FirebaseServerAppImpl#checkDestroyed","initializeApp","initializeServerApp","hashCode","reduce$argument_0","getApp","getApps","deleteApp","app.container.getProviders.map$argument_0","registerVersion","onLog","setLogLevel","getDbPromise","idb.openDB$argument_2.upgrade","idb.openDB._catch$argument_0","readHeartbeatsFromIndexedDB","writeHeartbeatsToIndexedDB","computeKey","HeartbeatServiceImpl","HeartbeatServiceImpl#constructor","_storage.read.then$argument_0","HeartbeatServiceImpl#triggerHeartbeat","_heartbeatsCache.heartbeats.some$argument_0","HeartbeatServiceImpl#getHeartbeatsHeader","getUTCDateString","extractHeartbeatsForHeader","heartbeatsToSend.find$argument_0","HeartbeatStorageImpl","HeartbeatStorageImpl#constructor","HeartbeatStorageImpl#runIndexedDBEnvironmentCheck","util.validateIndexedDBOpenable.then$argument_0","util.validateIndexedDBOpenable.then._catch$argument_0","HeartbeatStorageImpl#read","HeartbeatStorageImpl#overwrite","HeartbeatStorageImpl#add","countBytes","getEarliestHeartbeatIdx","registerCoreComponents","Object.defineProperty$argument_2.get"],"mappings":"AAA;ACyB;ICC;KDE;IEG;iBCK;SDQ;oBEC,sBF;KFE;CDC;AMS;CNG;AOqK;CPO;AQK;CRE;ASQ;CTe;AUU;CVQ;AWS;CXE;AYS;CZE;AaS;CbQ;AcS;CdK;AeM;CfE;AgBsD;ICC;mECQ,UD;KDC;IGC;KHG;IIC;KJG;IKC;KLG;IMC;KNG;IOC;KPG;IQC;KRE;ISC;KTE;IUC;KVE;IWK;KXI;ChBC;A4BqB;C5BiB;A6BC;ICC;kECiC;aDE;KDS;IGC;KHE;IIC;KJE;IKG;KLQ;IME;KNK;IOI;KPE;IQC;KRG;ISK;KTI;C7BC;AuCwB;CvCuC;AwCC;qBCmC;6BCC,wDD;KDC;CxCmB;A2C8B;C3CS;A4CK;C5CE;A6CkB;iBCiB,6BD;C7CG;A+CS;qE7ByB,4B6B;C/CC;AgDQ;ChDK;AiDU;CjDE;AkDsB;qBCG;aDkB;iBEC;SFI;ClDG;AqDC;CrDqB;AsDC;CtDmB;AuDC;CvDE;AwDoB;ICC;iECc;SDG;KDC;IGQ;sDCmB,wDD;KHkB;IKQ;KLmC;CxDC;A8DC;C9DI;A+DC;qDCQ,4CD;C/D+B;AiEC;ICC;KDG;IEC;sBCM,UD;uBEC,WF;KFE;IKI;KLc;IME;KNa;IOE;KPgB;CjEC;AyEM;CzEK;A0EK;C1Ea;A2EkB;kEzDC,qDyD;4DzDC,gDyD;C3EO;O4EY,0C5E"},"hasCjsExports":true},"type":"js/module"}]}