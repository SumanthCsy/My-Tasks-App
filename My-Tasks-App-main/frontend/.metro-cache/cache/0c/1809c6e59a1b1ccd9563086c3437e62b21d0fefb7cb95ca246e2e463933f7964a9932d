{"dependencies":[{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"LogLevel\", {\n    enumerable: true,\n    get: function () {\n      return LogLevel;\n    }\n  });\n  Object.defineProperty(exports, \"Logger\", {\n    enumerable: true,\n    get: function () {\n      return Logger;\n    }\n  });\n  Object.defineProperty(exports, \"setLogLevel\", {\n    enumerable: true,\n    get: function () {\n      return setLogLevel;\n    }\n  });\n  Object.defineProperty(exports, \"setUserLogHandler\", {\n    enumerable: true,\n    get: function () {\n      return setUserLogHandler;\n    }\n  });\n  var _babelRuntimeHelpersClassCallCheck = require(_dependencyMap[0], \"@babel/runtime/helpers/classCallCheck\");\n  var _classCallCheck = _interopDefault(_babelRuntimeHelpersClassCallCheck);\n  var _babelRuntimeHelpersCreateClass = require(_dependencyMap[1], \"@babel/runtime/helpers/createClass\");\n  var _createClass = _interopDefault(_babelRuntimeHelpersCreateClass);\n  /**\n   * @license\n   * Copyright 2017 Google LLC\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *   http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  /**\n   * A container for all of the Logger instances\n   */\n  var instances = [];\n  /**\n   * The JS SDK supports 5 log levels and also allows a user the ability to\n   * silence the logs altogether.\n   *\n   * The order is a follows:\n   * DEBUG < VERBOSE < INFO < WARN < ERROR\n   *\n   * All of the log types above the current log level will be captured (i.e. if\n   * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\n   * `VERBOSE` logs will not)\n   */\n  var LogLevel;\n  (function (LogLevel) {\n    LogLevel[LogLevel[\"DEBUG\"] = 0] = \"DEBUG\";\n    LogLevel[LogLevel[\"VERBOSE\"] = 1] = \"VERBOSE\";\n    LogLevel[LogLevel[\"INFO\"] = 2] = \"INFO\";\n    LogLevel[LogLevel[\"WARN\"] = 3] = \"WARN\";\n    LogLevel[LogLevel[\"ERROR\"] = 4] = \"ERROR\";\n    LogLevel[LogLevel[\"SILENT\"] = 5] = \"SILENT\";\n  })(LogLevel || (LogLevel = {}));\n  var levelStringToEnum = {\n    'debug': LogLevel.DEBUG,\n    'verbose': LogLevel.VERBOSE,\n    'info': LogLevel.INFO,\n    'warn': LogLevel.WARN,\n    'error': LogLevel.ERROR,\n    'silent': LogLevel.SILENT\n  };\n  /**\n   * The default log level\n   */\n  var defaultLogLevel = LogLevel.INFO;\n  /**\n   * By default, `console.debug` is not displayed in the developer console (in\n   * chrome). To avoid forcing users to have to opt-in to these logs twice\n   * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\n   * logs to the `console.log` function.\n   */\n  var ConsoleMethod = {\n    [LogLevel.DEBUG]: 'log',\n    [LogLevel.VERBOSE]: 'log',\n    [LogLevel.INFO]: 'info',\n    [LogLevel.WARN]: 'warn',\n    [LogLevel.ERROR]: 'error'\n  };\n  /**\n   * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\n   * messages on to their corresponding console counterparts (if the log method\n   * is supported by the current log level)\n   */\n  var defaultLogHandler = function (instance, logType) {\n    if (logType < instance.logLevel) {\n      return;\n    }\n    var now = new Date().toISOString();\n    var method = ConsoleMethod[logType];\n    if (method) {\n      for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n        args[_key - 2] = arguments[_key];\n      }\n      console[method](`[${now}]  ${instance.name}:`, ...args);\n    } else {\n      throw new Error(`Attempted to log a message with an invalid logType (value: ${logType})`);\n    }\n  };\n  var Logger = /*#__PURE__*/function () {\n    /**\n     * Gives you an instance of a Logger to capture messages according to\n     * Firebase's logging scheme.\n     *\n     * @param name The name that the logs will be associated with\n     */\n    function Logger(name) {\n      (0, _classCallCheck.default)(this, Logger);\n      this.name = name;\n      /**\n       * The log level of the given Logger instance.\n       */\n      this._logLevel = defaultLogLevel;\n      /**\n       * The main (internal) log handler for the Logger instance.\n       * Can be set to a new function in internal package code but not by user.\n       */\n      this._logHandler = defaultLogHandler;\n      /**\n       * The optional, additional, user-defined log handler for the Logger instance.\n       */\n      this._userLogHandler = null;\n      /**\n       * Capture the current instance for later use\n       */\n      instances.push(this);\n    }\n    return (0, _createClass.default)(Logger, [{\n      key: \"logLevel\",\n      get: function () {\n        return this._logLevel;\n      },\n      set: function (val) {\n        if (!(val in LogLevel)) {\n          throw new TypeError(`Invalid value \"${val}\" assigned to \\`logLevel\\``);\n        }\n        this._logLevel = val;\n      }\n      // Workaround for setter/getter having to be the same type.\n    }, {\n      key: \"setLogLevel\",\n      value: function setLogLevel(val) {\n        this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;\n      }\n    }, {\n      key: \"logHandler\",\n      get: function () {\n        return this._logHandler;\n      },\n      set: function (val) {\n        if (typeof val !== 'function') {\n          throw new TypeError('Value assigned to `logHandler` must be a function');\n        }\n        this._logHandler = val;\n      }\n    }, {\n      key: \"userLogHandler\",\n      get: function () {\n        return this._userLogHandler;\n      },\n      set: function (val) {\n        this._userLogHandler = val;\n      }\n      /**\n       * The functions below are all based on the `console` interface\n       */\n    }, {\n      key: \"debug\",\n      value: function debug() {\n        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          args[_key2] = arguments[_key2];\n        }\n        this._userLogHandler && this._userLogHandler(this, LogLevel.DEBUG, ...args);\n        this._logHandler(this, LogLevel.DEBUG, ...args);\n      }\n    }, {\n      key: \"log\",\n      value: function log() {\n        for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n          args[_key3] = arguments[_key3];\n        }\n        this._userLogHandler && this._userLogHandler(this, LogLevel.VERBOSE, ...args);\n        this._logHandler(this, LogLevel.VERBOSE, ...args);\n      }\n    }, {\n      key: \"info\",\n      value: function info() {\n        for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n          args[_key4] = arguments[_key4];\n        }\n        this._userLogHandler && this._userLogHandler(this, LogLevel.INFO, ...args);\n        this._logHandler(this, LogLevel.INFO, ...args);\n      }\n    }, {\n      key: \"warn\",\n      value: function warn() {\n        for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n          args[_key5] = arguments[_key5];\n        }\n        this._userLogHandler && this._userLogHandler(this, LogLevel.WARN, ...args);\n        this._logHandler(this, LogLevel.WARN, ...args);\n      }\n    }, {\n      key: \"error\",\n      value: function error() {\n        for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n          args[_key6] = arguments[_key6];\n        }\n        this._userLogHandler && this._userLogHandler(this, LogLevel.ERROR, ...args);\n        this._logHandler(this, LogLevel.ERROR, ...args);\n      }\n    }]);\n  }();\n  function setLogLevel(level) {\n    instances.forEach(inst => {\n      inst.setLogLevel(level);\n    });\n  }\n  function setUserLogHandler(logCallback, options) {\n    var _loop = function () {\n      var customLogLevel = null;\n      if (options && options.level) {\n        customLogLevel = levelStringToEnum[options.level];\n      }\n      if (logCallback === null) {\n        instance.userLogHandler = null;\n      } else {\n        instance.userLogHandler = function (instance, level) {\n          for (var _len7 = arguments.length, args = new Array(_len7 > 2 ? _len7 - 2 : 0), _key7 = 2; _key7 < _len7; _key7++) {\n            args[_key7 - 2] = arguments[_key7];\n          }\n          var message = args.map(arg => {\n            if (arg == null) {\n              return null;\n            } else if (typeof arg === 'string') {\n              return arg;\n            } else if (typeof arg === 'number' || typeof arg === 'boolean') {\n              return arg.toString();\n            } else if (arg instanceof Error) {\n              return arg.message;\n            } else {\n              try {\n                return JSON.stringify(arg);\n              } catch (ignored) {\n                return null;\n              }\n            }\n          }).filter(arg => arg).join(' ');\n          if (level >= (customLogLevel ?? instance.logLevel)) {\n            logCallback({\n              level: LogLevel[level].toLowerCase(),\n              message,\n              args,\n              type: instance.name\n            });\n          }\n        };\n      }\n    };\n    for (var instance of instances) {\n      _loop();\n    }\n  }\n});","lineCount":289,"map":[[12,2,218,0,"Object"],[12,8,218,0],[12,9,218,0,"defineProperty"],[12,23,218,0],[12,24,218,0,"exports"],[12,31,218,0],[13,4,218,0,"enumerable"],[13,14,218,0],[14,4,218,0,"get"],[14,7,218,0],[14,18,218,0,"get"],[14,19,218,0],[15,6,218,0],[15,13,218,9,"LogLevel"],[15,21,218,17],[16,4,218,17],[17,2,218,17],[18,2,218,0,"Object"],[18,8,218,0],[18,9,218,0,"defineProperty"],[18,23,218,0],[18,24,218,0,"exports"],[18,31,218,0],[19,4,218,0,"enumerable"],[19,14,218,0],[20,4,218,0,"get"],[20,7,218,0],[20,18,218,0,"get"],[20,19,218,0],[21,6,218,0],[21,13,218,19,"Logger"],[21,19,218,25],[22,4,218,25],[23,2,218,25],[24,2,218,0,"Object"],[24,8,218,0],[24,9,218,0,"defineProperty"],[24,23,218,0],[24,24,218,0,"exports"],[24,31,218,0],[25,4,218,0,"enumerable"],[25,14,218,0],[26,4,218,0,"get"],[26,7,218,0],[26,18,218,0,"get"],[26,19,218,0],[27,6,218,0],[27,13,218,27,"setLogLevel"],[27,24,218,38],[28,4,218,38],[29,2,218,38],[30,2,218,0,"Object"],[30,8,218,0],[30,9,218,0,"defineProperty"],[30,23,218,0],[30,24,218,0,"exports"],[30,31,218,0],[31,4,218,0,"enumerable"],[31,14,218,0],[32,4,218,0,"get"],[32,7,218,0],[32,18,218,0,"get"],[32,19,218,0],[33,6,218,0],[33,13,218,40,"setUserLogHandler"],[33,30,218,57],[34,4,218,57],[35,2,218,57],[36,2,218,60],[36,6,218,60,"_babelRuntimeHelpersClassCallCheck"],[36,40,218,60],[36,43,218,60,"require"],[36,50,218,60],[36,51,218,60,"_dependencyMap"],[36,65,218,60],[37,2,218,60],[37,6,218,60,"_classCallCheck"],[37,21,218,60],[37,24,218,60,"_interopDefault"],[37,39,218,60],[37,40,218,60,"_babelRuntimeHelpersClassCallCheck"],[37,74,218,60],[38,2,218,60],[38,6,218,60,"_babelRuntimeHelpersCreateClass"],[38,37,218,60],[38,40,218,60,"require"],[38,47,218,60],[38,48,218,60,"_dependencyMap"],[38,62,218,60],[39,2,218,60],[39,6,218,60,"_createClass"],[39,18,218,60],[39,21,218,60,"_interopDefault"],[39,36,218,60],[39,37,218,60,"_babelRuntimeHelpersCreateClass"],[39,68,218,60],[40,2,1,0],[41,0,2,0],[42,0,3,0],[43,0,4,0],[44,0,5,0],[45,0,6,0],[46,0,7,0],[47,0,8,0],[48,0,9,0],[49,0,10,0],[50,0,11,0],[51,0,12,0],[52,0,13,0],[53,0,14,0],[54,0,15,0],[55,0,16,0],[56,2,17,0],[57,0,18,0],[58,0,19,0],[59,2,20,0],[59,6,20,6,"instances"],[59,15,20,15],[59,18,20,18],[59,20,20,20],[60,2,21,0],[61,0,22,0],[62,0,23,0],[63,0,24,0],[64,0,25,0],[65,0,26,0],[66,0,27,0],[67,0,28,0],[68,0,29,0],[69,0,30,0],[70,0,31,0],[71,2,32,0],[71,6,32,4,"LogLevel"],[71,14,32,12],[72,2,33,0],[72,3,33,1],[72,13,33,11,"LogLevel"],[72,21,33,19],[72,23,33,21],[73,4,34,4,"LogLevel"],[73,12,34,12],[73,13,34,13,"LogLevel"],[73,21,34,21],[73,22,34,22],[73,29,34,29],[73,30,34,30],[73,33,34,33],[73,34,34,34],[73,35,34,35],[73,38,34,38],[73,45,34,45],[74,4,35,4,"LogLevel"],[74,12,35,12],[74,13,35,13,"LogLevel"],[74,21,35,21],[74,22,35,22],[74,31,35,31],[74,32,35,32],[74,35,35,35],[74,36,35,36],[74,37,35,37],[74,40,35,40],[74,49,35,49],[75,4,36,4,"LogLevel"],[75,12,36,12],[75,13,36,13,"LogLevel"],[75,21,36,21],[75,22,36,22],[75,28,36,28],[75,29,36,29],[75,32,36,32],[75,33,36,33],[75,34,36,34],[75,37,36,37],[75,43,36,43],[76,4,37,4,"LogLevel"],[76,12,37,12],[76,13,37,13,"LogLevel"],[76,21,37,21],[76,22,37,22],[76,28,37,28],[76,29,37,29],[76,32,37,32],[76,33,37,33],[76,34,37,34],[76,37,37,37],[76,43,37,43],[77,4,38,4,"LogLevel"],[77,12,38,12],[77,13,38,13,"LogLevel"],[77,21,38,21],[77,22,38,22],[77,29,38,29],[77,30,38,30],[77,33,38,33],[77,34,38,34],[77,35,38,35],[77,38,38,38],[77,45,38,45],[78,4,39,4,"LogLevel"],[78,12,39,12],[78,13,39,13,"LogLevel"],[78,21,39,21],[78,22,39,22],[78,30,39,30],[78,31,39,31],[78,34,39,34],[78,35,39,35],[78,36,39,36],[78,39,39,39],[78,47,39,47],[79,2,40,0],[79,3,40,1],[79,5,40,3,"LogLevel"],[79,13,40,11],[79,18,40,16,"LogLevel"],[79,26,40,24],[79,29,40,27],[79,30,40,28],[79,31,40,29],[79,32,40,30],[79,33,40,31],[80,2,41,0],[80,6,41,6,"levelStringToEnum"],[80,23,41,23],[80,26,41,26],[81,4,42,4],[81,11,42,11],[81,13,42,13,"LogLevel"],[81,21,42,21],[81,22,42,22,"DEBUG"],[81,27,42,27],[82,4,43,4],[82,13,43,13],[82,15,43,15,"LogLevel"],[82,23,43,23],[82,24,43,24,"VERBOSE"],[82,31,43,31],[83,4,44,4],[83,10,44,10],[83,12,44,12,"LogLevel"],[83,20,44,20],[83,21,44,21,"INFO"],[83,25,44,25],[84,4,45,4],[84,10,45,10],[84,12,45,12,"LogLevel"],[84,20,45,20],[84,21,45,21,"WARN"],[84,25,45,25],[85,4,46,4],[85,11,46,11],[85,13,46,13,"LogLevel"],[85,21,46,21],[85,22,46,22,"ERROR"],[85,27,46,27],[86,4,47,4],[86,12,47,12],[86,14,47,14,"LogLevel"],[86,22,47,22],[86,23,47,23,"SILENT"],[87,2,48,0],[87,3,48,1],[88,2,49,0],[89,0,50,0],[90,0,51,0],[91,2,52,0],[91,6,52,6,"defaultLogLevel"],[91,21,52,21],[91,24,52,24,"LogLevel"],[91,32,52,32],[91,33,52,33,"INFO"],[91,37,52,37],[92,2,53,0],[93,0,54,0],[94,0,55,0],[95,0,56,0],[96,0,57,0],[97,0,58,0],[98,2,59,0],[98,6,59,6,"ConsoleMethod"],[98,19,59,19],[98,22,59,22],[99,4,60,4],[99,5,60,5,"LogLevel"],[99,13,60,13],[99,14,60,14,"DEBUG"],[99,19,60,19],[99,22,60,22],[99,27,60,27],[100,4,61,4],[100,5,61,5,"LogLevel"],[100,13,61,13],[100,14,61,14,"VERBOSE"],[100,21,61,21],[100,24,61,24],[100,29,61,29],[101,4,62,4],[101,5,62,5,"LogLevel"],[101,13,62,13],[101,14,62,14,"INFO"],[101,18,62,18],[101,21,62,21],[101,27,62,27],[102,4,63,4],[102,5,63,5,"LogLevel"],[102,13,63,13],[102,14,63,14,"WARN"],[102,18,63,18],[102,21,63,21],[102,27,63,27],[103,4,64,4],[103,5,64,5,"LogLevel"],[103,13,64,13],[103,14,64,14,"ERROR"],[103,19,64,19],[103,22,64,22],[104,2,65,0],[104,3,65,1],[105,2,66,0],[106,0,67,0],[107,0,68,0],[108,0,69,0],[109,0,70,0],[110,2,71,0],[110,6,71,6,"defaultLogHandler"],[110,23,71,23],[110,26,71,26],[110,35,71,26,"defaultLogHandler"],[110,36,71,27,"instance"],[110,44,71,35],[110,46,71,37,"logType"],[110,53,71,44],[110,55,71,58],[111,4,72,4],[111,8,72,8,"logType"],[111,15,72,15],[111,18,72,18,"instance"],[111,26,72,26],[111,27,72,27,"logLevel"],[111,35,72,35],[111,37,72,37],[112,6,73,8],[113,4,74,4],[114,4,75,4],[114,8,75,10,"now"],[114,11,75,13],[114,14,75,16],[114,18,75,20,"Date"],[114,22,75,24],[114,23,75,25],[114,24,75,26],[114,25,75,27,"toISOString"],[114,36,75,38],[114,37,75,39],[114,38,75,40],[115,4,76,4],[115,8,76,10,"method"],[115,14,76,16],[115,17,76,19,"ConsoleMethod"],[115,30,76,32],[115,31,76,33,"logType"],[115,38,76,40],[115,39,76,41],[116,4,77,4],[116,8,77,8,"method"],[116,14,77,14],[116,16,77,16],[117,6,77,16],[117,15,77,16,"_len"],[117,19,77,16],[117,22,77,16,"arguments"],[117,31,77,16],[117,32,77,16,"length"],[117,38,77,16],[117,40,71,49,"args"],[117,44,71,53],[117,51,71,53,"Array"],[117,56,71,53],[117,57,71,53,"_len"],[117,61,71,53],[117,68,71,53,"_len"],[117,72,71,53],[117,83,71,53,"_key"],[117,87,71,53],[117,93,71,53,"_key"],[117,97,71,53],[117,100,71,53,"_len"],[117,104,71,53],[117,106,71,53,"_key"],[117,110,71,53],[118,8,71,49,"args"],[118,12,71,53],[118,13,71,53,"_key"],[118,17,71,53],[118,25,71,53,"arguments"],[118,34,71,53],[118,35,71,53,"_key"],[118,39,71,53],[119,6,71,53],[120,6,78,8,"console"],[120,13,78,15],[120,14,78,16,"method"],[120,20,78,22],[120,21,78,23],[120,22,78,24],[120,26,78,28,"now"],[120,29,78,31],[120,35,78,37,"instance"],[120,43,78,45],[120,44,78,46,"name"],[120,48,78,50],[120,51,78,53],[120,53,78,55],[120,56,78,58,"args"],[120,60,78,62],[120,61,78,63],[121,4,79,4],[121,5,79,5],[121,11,80,9],[122,6,81,8],[122,12,81,14],[122,16,81,18,"Error"],[122,21,81,23],[122,22,81,24],[122,84,81,86,"logType"],[122,91,81,93],[122,94,81,96],[122,95,81,97],[123,4,82,4],[124,2,83,0],[124,3,83,1],[125,2,83,2],[125,6,84,6,"Logger"],[125,12,84,12],[126,4,85,4],[127,0,86,0],[128,0,87,0],[129,0,88,0],[130,0,89,0],[131,0,90,0],[132,4,91,4],[132,13,91,4,"Logger"],[132,20,91,16,"name"],[132,24,91,20],[132,26,91,22],[133,6,91,22],[133,10,91,22,"_classCallCheck"],[133,25,91,22],[133,26,91,22,"default"],[133,33,91,22],[133,41,91,22,"Logger"],[133,47,91,22],[134,6,92,8],[134,10,92,12],[134,11,92,13,"name"],[134,15,92,17],[134,18,92,20,"name"],[134,22,92,24],[135,6,93,8],[136,0,94,0],[137,0,95,0],[138,6,96,8],[138,10,96,12],[138,11,96,13,"_logLevel"],[138,20,96,22],[138,23,96,25,"defaultLogLevel"],[138,38,96,40],[139,6,97,8],[140,0,98,0],[141,0,99,0],[142,0,100,0],[143,6,101,8],[143,10,101,12],[143,11,101,13,"_logHandler"],[143,22,101,24],[143,25,101,27,"defaultLogHandler"],[143,42,101,44],[144,6,102,8],[145,0,103,0],[146,0,104,0],[147,6,105,8],[147,10,105,12],[147,11,105,13,"_userLogHandler"],[147,26,105,28],[147,29,105,31],[147,33,105,35],[148,6,106,8],[149,0,107,0],[150,0,108,0],[151,6,109,8,"instances"],[151,15,109,17],[151,16,109,18,"push"],[151,20,109,22],[151,21,109,23],[151,25,109,27],[151,26,109,28],[152,4,110,4],[153,4,110,5],[153,15,110,5,"_createClass"],[153,27,110,5],[153,28,110,5,"default"],[153,35,110,5],[153,37,110,5,"Logger"],[153,43,110,5],[154,6,110,5,"key"],[154,9,110,5],[155,6,110,5,"get"],[155,9,110,5],[155,11,111,4],[155,20,111,4,"get"],[155,21,111,4],[155,23,111,19],[156,8,112,8],[156,15,112,15],[156,19,112,19],[156,20,112,20,"_logLevel"],[156,29,112,29],[157,6,113,4],[157,7,113,5],[158,6,113,5,"set"],[158,9,113,5],[158,11,114,4],[158,20,114,4,"set"],[158,21,114,17,"val"],[158,24,114,20],[158,26,114,22],[159,8,115,8],[159,12,115,12],[159,14,115,14,"val"],[159,17,115,17],[159,21,115,21,"LogLevel"],[159,29,115,29],[159,30,115,30],[159,32,115,32],[160,10,116,12],[160,16,116,18],[160,20,116,22,"TypeError"],[160,29,116,31],[160,30,116,32],[160,48,116,50,"val"],[160,51,116,53],[160,79,116,81],[160,80,116,82],[161,8,117,8],[162,8,118,8],[162,12,118,12],[162,13,118,13,"_logLevel"],[162,22,118,22],[162,25,118,25,"val"],[162,28,118,28],[163,6,119,4],[164,6,120,4],[165,4,120,4],[166,6,120,4,"key"],[166,9,120,4],[167,6,120,4,"value"],[167,11,120,4],[167,13,121,4],[167,22,121,4,"setLogLevel"],[167,33,121,15,"setLogLevel"],[167,34,121,16,"val"],[167,37,121,19],[167,39,121,21],[168,8,122,8],[168,12,122,12],[168,13,122,13,"_logLevel"],[168,22,122,22],[168,25,122,25],[168,32,122,32,"val"],[168,35,122,35],[168,40,122,40],[168,48,122,48],[168,51,122,51,"levelStringToEnum"],[168,68,122,68],[168,69,122,69,"val"],[168,72,122,72],[168,73,122,73],[168,76,122,76,"val"],[168,79,122,79],[169,6,123,4],[170,4,123,5],[171,6,123,5,"key"],[171,9,123,5],[172,6,123,5,"get"],[172,9,123,5],[172,11,124,4],[172,20,124,4,"get"],[172,21,124,4],[172,23,124,21],[173,8,125,8],[173,15,125,15],[173,19,125,19],[173,20,125,20,"_logHandler"],[173,31,125,31],[174,6,126,4],[174,7,126,5],[175,6,126,5,"set"],[175,9,126,5],[175,11,127,4],[175,20,127,4,"set"],[175,21,127,19,"val"],[175,24,127,22],[175,26,127,24],[176,8,128,8],[176,12,128,12],[176,19,128,19,"val"],[176,22,128,22],[176,27,128,27],[176,37,128,37],[176,39,128,39],[177,10,129,12],[177,16,129,18],[177,20,129,22,"TypeError"],[177,29,129,31],[177,30,129,32],[177,81,129,83],[177,82,129,84],[178,8,130,8],[179,8,131,8],[179,12,131,12],[179,13,131,13,"_logHandler"],[179,24,131,24],[179,27,131,27,"val"],[179,30,131,30],[180,6,132,4],[181,4,132,5],[182,6,132,5,"key"],[182,9,132,5],[183,6,132,5,"get"],[183,9,132,5],[183,11,133,4],[183,20,133,4,"get"],[183,21,133,4],[183,23,133,25],[184,8,134,8],[184,15,134,15],[184,19,134,19],[184,20,134,20,"_userLogHandler"],[184,35,134,35],[185,6,135,4],[185,7,135,5],[186,6,135,5,"set"],[186,9,135,5],[186,11,136,4],[186,20,136,4,"set"],[186,21,136,23,"val"],[186,24,136,26],[186,26,136,28],[187,8,137,8],[187,12,137,12],[187,13,137,13,"_userLogHandler"],[187,28,137,28],[187,31,137,31,"val"],[187,34,137,34],[188,6,138,4],[189,6,139,4],[190,0,140,0],[191,0,141,0],[192,4,139,4],[193,6,139,4,"key"],[193,9,139,4],[194,6,139,4,"value"],[194,11,139,4],[194,13,142,4],[194,22,142,4,"debug"],[194,27,142,9,"debug"],[194,28,142,9],[194,30,142,19],[195,8,142,19],[195,17,142,19,"_len2"],[195,22,142,19],[195,25,142,19,"arguments"],[195,34,142,19],[195,35,142,19,"length"],[195,41,142,19],[195,43,142,13,"args"],[195,47,142,17],[195,54,142,17,"Array"],[195,59,142,17],[195,60,142,17,"_len2"],[195,65,142,17],[195,68,142,17,"_key2"],[195,73,142,17],[195,79,142,17,"_key2"],[195,84,142,17],[195,87,142,17,"_len2"],[195,92,142,17],[195,94,142,17,"_key2"],[195,99,142,17],[196,10,142,13,"args"],[196,14,142,17],[196,15,142,17,"_key2"],[196,20,142,17],[196,24,142,17,"arguments"],[196,33,142,17],[196,34,142,17,"_key2"],[196,39,142,17],[197,8,142,17],[198,8,143,8],[198,12,143,12],[198,13,143,13,"_userLogHandler"],[198,28,143,28],[198,32,143,32],[198,36,143,36],[198,37,143,37,"_userLogHandler"],[198,52,143,52],[198,53,143,53],[198,57,143,57],[198,59,143,59,"LogLevel"],[198,67,143,67],[198,68,143,68,"DEBUG"],[198,73,143,73],[198,75,143,75],[198,78,143,78,"args"],[198,82,143,82],[198,83,143,83],[199,8,144,8],[199,12,144,12],[199,13,144,13,"_logHandler"],[199,24,144,24],[199,25,144,25],[199,29,144,29],[199,31,144,31,"LogLevel"],[199,39,144,39],[199,40,144,40,"DEBUG"],[199,45,144,45],[199,47,144,47],[199,50,144,50,"args"],[199,54,144,54],[199,55,144,55],[200,6,145,4],[201,4,145,5],[202,6,145,5,"key"],[202,9,145,5],[203,6,145,5,"value"],[203,11,145,5],[203,13,146,4],[203,22,146,4,"log"],[203,25,146,7,"log"],[203,26,146,7],[203,28,146,17],[204,8,146,17],[204,17,146,17,"_len3"],[204,22,146,17],[204,25,146,17,"arguments"],[204,34,146,17],[204,35,146,17,"length"],[204,41,146,17],[204,43,146,11,"args"],[204,47,146,15],[204,54,146,15,"Array"],[204,59,146,15],[204,60,146,15,"_len3"],[204,65,146,15],[204,68,146,15,"_key3"],[204,73,146,15],[204,79,146,15,"_key3"],[204,84,146,15],[204,87,146,15,"_len3"],[204,92,146,15],[204,94,146,15,"_key3"],[204,99,146,15],[205,10,146,11,"args"],[205,14,146,15],[205,15,146,15,"_key3"],[205,20,146,15],[205,24,146,15,"arguments"],[205,33,146,15],[205,34,146,15,"_key3"],[205,39,146,15],[206,8,146,15],[207,8,147,8],[207,12,147,12],[207,13,147,13,"_userLogHandler"],[207,28,147,28],[207,32,148,12],[207,36,148,16],[207,37,148,17,"_userLogHandler"],[207,52,148,32],[207,53,148,33],[207,57,148,37],[207,59,148,39,"LogLevel"],[207,67,148,47],[207,68,148,48,"VERBOSE"],[207,75,148,55],[207,77,148,57],[207,80,148,60,"args"],[207,84,148,64],[207,85,148,65],[208,8,149,8],[208,12,149,12],[208,13,149,13,"_logHandler"],[208,24,149,24],[208,25,149,25],[208,29,149,29],[208,31,149,31,"LogLevel"],[208,39,149,39],[208,40,149,40,"VERBOSE"],[208,47,149,47],[208,49,149,49],[208,52,149,52,"args"],[208,56,149,56],[208,57,149,57],[209,6,150,4],[210,4,150,5],[211,6,150,5,"key"],[211,9,150,5],[212,6,150,5,"value"],[212,11,150,5],[212,13,151,4],[212,22,151,4,"info"],[212,26,151,8,"info"],[212,27,151,8],[212,29,151,18],[213,8,151,18],[213,17,151,18,"_len4"],[213,22,151,18],[213,25,151,18,"arguments"],[213,34,151,18],[213,35,151,18,"length"],[213,41,151,18],[213,43,151,12,"args"],[213,47,151,16],[213,54,151,16,"Array"],[213,59,151,16],[213,60,151,16,"_len4"],[213,65,151,16],[213,68,151,16,"_key4"],[213,73,151,16],[213,79,151,16,"_key4"],[213,84,151,16],[213,87,151,16,"_len4"],[213,92,151,16],[213,94,151,16,"_key4"],[213,99,151,16],[214,10,151,12,"args"],[214,14,151,16],[214,15,151,16,"_key4"],[214,20,151,16],[214,24,151,16,"arguments"],[214,33,151,16],[214,34,151,16,"_key4"],[214,39,151,16],[215,8,151,16],[216,8,152,8],[216,12,152,12],[216,13,152,13,"_userLogHandler"],[216,28,152,28],[216,32,152,32],[216,36,152,36],[216,37,152,37,"_userLogHandler"],[216,52,152,52],[216,53,152,53],[216,57,152,57],[216,59,152,59,"LogLevel"],[216,67,152,67],[216,68,152,68,"INFO"],[216,72,152,72],[216,74,152,74],[216,77,152,77,"args"],[216,81,152,81],[216,82,152,82],[217,8,153,8],[217,12,153,12],[217,13,153,13,"_logHandler"],[217,24,153,24],[217,25,153,25],[217,29,153,29],[217,31,153,31,"LogLevel"],[217,39,153,39],[217,40,153,40,"INFO"],[217,44,153,44],[217,46,153,46],[217,49,153,49,"args"],[217,53,153,53],[217,54,153,54],[218,6,154,4],[219,4,154,5],[220,6,154,5,"key"],[220,9,154,5],[221,6,154,5,"value"],[221,11,154,5],[221,13,155,4],[221,22,155,4,"warn"],[221,26,155,8,"warn"],[221,27,155,8],[221,29,155,18],[222,8,155,18],[222,17,155,18,"_len5"],[222,22,155,18],[222,25,155,18,"arguments"],[222,34,155,18],[222,35,155,18,"length"],[222,41,155,18],[222,43,155,12,"args"],[222,47,155,16],[222,54,155,16,"Array"],[222,59,155,16],[222,60,155,16,"_len5"],[222,65,155,16],[222,68,155,16,"_key5"],[222,73,155,16],[222,79,155,16,"_key5"],[222,84,155,16],[222,87,155,16,"_len5"],[222,92,155,16],[222,94,155,16,"_key5"],[222,99,155,16],[223,10,155,12,"args"],[223,14,155,16],[223,15,155,16,"_key5"],[223,20,155,16],[223,24,155,16,"arguments"],[223,33,155,16],[223,34,155,16,"_key5"],[223,39,155,16],[224,8,155,16],[225,8,156,8],[225,12,156,12],[225,13,156,13,"_userLogHandler"],[225,28,156,28],[225,32,156,32],[225,36,156,36],[225,37,156,37,"_userLogHandler"],[225,52,156,52],[225,53,156,53],[225,57,156,57],[225,59,156,59,"LogLevel"],[225,67,156,67],[225,68,156,68,"WARN"],[225,72,156,72],[225,74,156,74],[225,77,156,77,"args"],[225,81,156,81],[225,82,156,82],[226,8,157,8],[226,12,157,12],[226,13,157,13,"_logHandler"],[226,24,157,24],[226,25,157,25],[226,29,157,29],[226,31,157,31,"LogLevel"],[226,39,157,39],[226,40,157,40,"WARN"],[226,44,157,44],[226,46,157,46],[226,49,157,49,"args"],[226,53,157,53],[226,54,157,54],[227,6,158,4],[228,4,158,5],[229,6,158,5,"key"],[229,9,158,5],[230,6,158,5,"value"],[230,11,158,5],[230,13,159,4],[230,22,159,4,"error"],[230,27,159,9,"error"],[230,28,159,9],[230,30,159,19],[231,8,159,19],[231,17,159,19,"_len6"],[231,22,159,19],[231,25,159,19,"arguments"],[231,34,159,19],[231,35,159,19,"length"],[231,41,159,19],[231,43,159,13,"args"],[231,47,159,17],[231,54,159,17,"Array"],[231,59,159,17],[231,60,159,17,"_len6"],[231,65,159,17],[231,68,159,17,"_key6"],[231,73,159,17],[231,79,159,17,"_key6"],[231,84,159,17],[231,87,159,17,"_len6"],[231,92,159,17],[231,94,159,17,"_key6"],[231,99,159,17],[232,10,159,13,"args"],[232,14,159,17],[232,15,159,17,"_key6"],[232,20,159,17],[232,24,159,17,"arguments"],[232,33,159,17],[232,34,159,17,"_key6"],[232,39,159,17],[233,8,159,17],[234,8,160,8],[234,12,160,12],[234,13,160,13,"_userLogHandler"],[234,28,160,28],[234,32,160,32],[234,36,160,36],[234,37,160,37,"_userLogHandler"],[234,52,160,52],[234,53,160,53],[234,57,160,57],[234,59,160,59,"LogLevel"],[234,67,160,67],[234,68,160,68,"ERROR"],[234,73,160,73],[234,75,160,75],[234,78,160,78,"args"],[234,82,160,82],[234,83,160,83],[235,8,161,8],[235,12,161,12],[235,13,161,13,"_logHandler"],[235,24,161,24],[235,25,161,25],[235,29,161,29],[235,31,161,31,"LogLevel"],[235,39,161,39],[235,40,161,40,"ERROR"],[235,45,161,45],[235,47,161,47],[235,50,161,50,"args"],[235,54,161,54],[235,55,161,55],[236,6,162,4],[237,4,162,5],[238,2,162,5],[239,2,164,0],[239,11,164,9,"setLogLevel"],[239,22,164,20,"setLogLevel"],[239,23,164,21,"level"],[239,28,164,26],[239,30,164,28],[240,4,165,4,"instances"],[240,13,165,13],[240,14,165,14,"forEach"],[240,21,165,21],[240,22,165,22,"inst"],[240,26,165,26],[240,30,165,30],[241,6,166,8,"inst"],[241,10,166,12],[241,11,166,13,"setLogLevel"],[241,22,166,24],[241,23,166,25,"level"],[241,28,166,30],[241,29,166,31],[242,4,167,4],[242,5,167,5],[242,6,167,6],[243,2,168,0],[244,2,169,0],[244,11,169,9,"setUserLogHandler"],[244,28,169,26,"setUserLogHandler"],[244,29,169,27,"logCallback"],[244,40,169,38],[244,42,169,40,"options"],[244,49,169,47],[244,51,169,49],[245,4,169,49],[245,8,169,49,"_loop"],[245,13,169,49],[245,25,169,49,"_loop"],[245,26,169,49],[245,28,170,38],[246,6,171,8],[246,10,171,12,"customLogLevel"],[246,24,171,26],[246,27,171,29],[246,31,171,33],[247,6,172,8],[247,10,172,12,"options"],[247,17,172,19],[247,21,172,23,"options"],[247,28,172,30],[247,29,172,31,"level"],[247,34,172,36],[247,36,172,38],[248,8,173,12,"customLogLevel"],[248,22,173,26],[248,25,173,29,"levelStringToEnum"],[248,42,173,46],[248,43,173,47,"options"],[248,50,173,54],[248,51,173,55,"level"],[248,56,173,60],[248,57,173,61],[249,6,174,8],[250,6,175,8],[250,10,175,12,"logCallback"],[250,21,175,23],[250,26,175,28],[250,30,175,32],[250,32,175,34],[251,8,176,12,"instance"],[251,16,176,20],[251,17,176,21,"userLogHandler"],[251,31,176,35],[251,34,176,38],[251,38,176,42],[252,6,177,8],[252,7,177,9],[252,13,178,13],[253,8,179,12,"instance"],[253,16,179,20],[253,17,179,21,"userLogHandler"],[253,31,179,35],[253,34,179,38],[253,44,179,39,"instance"],[253,52,179,47],[253,54,179,49,"level"],[253,59,179,54],[253,61,179,68],[254,10,179,68],[254,19,179,68,"_len7"],[254,24,179,68],[254,27,179,68,"arguments"],[254,36,179,68],[254,37,179,68,"length"],[254,43,179,68],[254,45,179,59,"args"],[254,49,179,63],[254,56,179,63,"Array"],[254,61,179,63],[254,62,179,63,"_len7"],[254,67,179,63],[254,74,179,63,"_len7"],[254,79,179,63],[254,90,179,63,"_key7"],[254,95,179,63],[254,101,179,63,"_key7"],[254,106,179,63],[254,109,179,63,"_len7"],[254,114,179,63],[254,116,179,63,"_key7"],[254,121,179,63],[255,12,179,59,"args"],[255,16,179,63],[255,17,179,63,"_key7"],[255,22,179,63],[255,30,179,63,"arguments"],[255,39,179,63],[255,40,179,63,"_key7"],[255,45,179,63],[256,10,179,63],[257,10,180,16],[257,14,180,22,"message"],[257,21,180,29],[257,24,180,32,"args"],[257,28,180,36],[257,29,181,21,"map"],[257,32,181,24],[257,33,181,25,"arg"],[257,36,181,28],[257,40,181,32],[258,12,182,20],[258,16,182,24,"arg"],[258,19,182,27],[258,23,182,31],[258,27,182,35],[258,29,182,37],[259,14,183,24],[259,21,183,31],[259,25,183,35],[260,12,184,20],[260,13,184,21],[260,19,185,25],[260,23,185,29],[260,30,185,36,"arg"],[260,33,185,39],[260,38,185,44],[260,46,185,52],[260,48,185,54],[261,14,186,24],[261,21,186,31,"arg"],[261,24,186,34],[262,12,187,20],[262,13,187,21],[262,19,188,25],[262,23,188,29],[262,30,188,36,"arg"],[262,33,188,39],[262,38,188,44],[262,46,188,52],[262,50,188,56],[262,57,188,63,"arg"],[262,60,188,66],[262,65,188,71],[262,74,188,80],[262,76,188,82],[263,14,189,24],[263,21,189,31,"arg"],[263,24,189,34],[263,25,189,35,"toString"],[263,33,189,43],[263,34,189,44],[263,35,189,45],[264,12,190,20],[264,13,190,21],[264,19,191,25],[264,23,191,29,"arg"],[264,26,191,32],[264,38,191,44,"Error"],[264,43,191,49],[264,45,191,51],[265,14,192,24],[265,21,192,31,"arg"],[265,24,192,34],[265,25,192,35,"message"],[265,32,192,42],[266,12,193,20],[266,13,193,21],[266,19,194,25],[267,14,195,24],[267,18,195,28],[268,16,196,28],[268,23,196,35,"JSON"],[268,27,196,39],[268,28,196,40,"stringify"],[268,37,196,49],[268,38,196,50,"arg"],[268,41,196,53],[268,42,196,54],[269,14,197,24],[269,15,197,25],[269,16,198,24],[269,23,198,31,"ignored"],[269,30,198,38],[269,32,198,40],[270,16,199,28],[270,23,199,35],[270,27,199,39],[271,14,200,24],[272,12,201,20],[273,10,202,16],[273,11,202,17],[273,12,202,18],[273,13,203,21,"filter"],[273,19,203,27],[273,20,203,28,"arg"],[273,23,203,31],[273,27,203,35,"arg"],[273,30,203,38],[273,31,203,39],[273,32,204,21,"join"],[273,36,204,25],[273,37,204,26],[273,40,204,29],[273,41,204,30],[274,10,205,16],[274,14,205,20,"level"],[274,19,205,25],[274,24,205,30,"customLogLevel"],[274,38,205,44],[274,42,205,48,"instance"],[274,50,205,56],[274,51,205,57,"logLevel"],[274,59,205,65],[274,60,205,66],[274,62,205,68],[275,12,206,20,"logCallback"],[275,23,206,31],[275,24,206,32],[276,14,207,24,"level"],[276,19,207,29],[276,21,207,31,"LogLevel"],[276,29,207,39],[276,30,207,40,"level"],[276,35,207,45],[276,36,207,46],[276,37,207,47,"toLowerCase"],[276,48,207,58],[276,49,207,59],[276,50,207,60],[277,14,208,24,"message"],[277,21,208,31],[278,14,209,24,"args"],[278,18,209,28],[279,14,210,24,"type"],[279,18,210,28],[279,20,210,30,"instance"],[279,28,210,38],[279,29,210,39,"name"],[280,12,211,20],[280,13,211,21],[280,14,211,22],[281,10,212,16],[282,8,213,12],[282,9,213,13],[283,6,214,8],[284,4,215,4],[284,5,215,5],[285,4,170,4],[285,9,170,9],[285,13,170,15,"instance"],[285,21,170,23],[285,25,170,27,"instances"],[285,34,170,36],[286,6,170,36,"_loop"],[286,11,170,36],[287,4,170,36],[288,2,216,0],[289,0,216,1],[289,3]],"functionMap":{"names":["<global>","<anonymous>","defaultLogHandler","Logger","Logger#constructor","Logger#get__logLevel","Logger#set__logLevel","Logger#setLogLevel","Logger#get__logHandler","Logger#set__logHandler","Logger#get__userLogHandler","Logger#set__userLogHandler","Logger#debug","Logger#log","Logger#info","Logger#warn","Logger#error","setLogLevel","instances.forEach$argument_0","setUserLogHandler","instance.userLogHandler","args.map$argument_0","args.map.filter$argument_0"],"mappings":"AAA;CCgC;CDO;0BE+B;CFY;AGC;ICO;KDmB;IEC;KFE;IGC;KHK;IIE;KJE;IKC;KLE;IMC;KNK;IOC;KPE;IQC;KRE;ISI;KTG;IUC;KVI;IWC;KXG;IYC;KZG;IaC;KbG;CHC;AiBC;sBCC;KDE;CjBC;AmBC;sCCU;yBCE;iBDqB;4BEC,UF;aDU;CnBG"},"hasCjsExports":false},"type":"js/module"}]}